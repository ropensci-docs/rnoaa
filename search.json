[{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/CONTRIBUTING.html","id":"bugs","dir":"","previous_headings":"","what":"Bugs?","title":"CONTRIBUTING","text":"Submit issue Issues page","code":""},{"path":"https://docs.ropensci.org/rnoaa/CONTRIBUTING.html","id":"code-contributions","dir":"","previous_headings":"","what":"Code contributions","title":"CONTRIBUTING","text":"Fork repo Github account Clone version account machine account, e.g,. git clone https://github.com/<yourgithubusername>/rnoaa.git Make sure track progress upstream (.e., version rnoaa ropensci/rnoaa) git remote add upstream https://github.com/ropensci/rnoaa.git. making changes make sure pull changes upstream either git fetch upstream merge later git pull upstream fetch merge one step Make changes (bonus points making changes new feature branch) Please write test(s) changes affect code just docs Push account Submit pull request home base ropensci/rnoaa Note: Continuous integration checks may fail secret tokens NCDC API available PR’s. Don’t worry failures UNLESS clearly due code PR.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/CONTRIBUTING.html","id":"email","dir":"","previous_headings":"","what":"Email","title":"CONTRIBUTING","text":"email. Open issue.","code":""},{"path":"https://docs.ropensci.org/rnoaa/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 rnoaa authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/buoy_vignette.html","id":"find-out-what-buoys-are-available-in-a-dataset","dir":"Articles","previous_headings":"","what":"Find out what buoys are available in a dataset","title":"working with buoy data","text":"Inspect buoy ids, urls browse web","code":"res <- buoys(dataset = \"cwind\") head(res) #>      id #> 1 41001 #> 2 41002 #> 3 41004 #> 4 41006 #> 5 41008 #> 6 41009 #>                                                                        url #> 1 https://dods.ndbc.noaa.gov/thredds/catalog/data/cwind/41001/catalog.html #> 2 https://dods.ndbc.noaa.gov/thredds/catalog/data/cwind/41002/catalog.html #> 3 https://dods.ndbc.noaa.gov/thredds/catalog/data/cwind/41004/catalog.html #> 4 https://dods.ndbc.noaa.gov/thredds/catalog/data/cwind/41006/catalog.html #> 5 https://dods.ndbc.noaa.gov/thredds/catalog/data/cwind/41008/catalog.html #> 6 https://dods.ndbc.noaa.gov/thredds/catalog/data/cwind/41009/catalog.html browseURL(res[1, 2])"},{"path":"https://docs.ropensci.org/rnoaa/articles/buoy_vignette.html","id":"get-buoy-data","dir":"Articles","previous_headings":"","what":"Get buoy data","title":"working with buoy data","text":"buoy can get data particular dataset, buoy id, year, datatype. Get data buoy year datatype specified, get first file Including year Including year datatype Including just datatype","code":"buoy(dataset = 'cwind', buoyid = 46085) #> Using c2007.nc #> Dimensions (rows/cols): [33486 X 5]  #> 2 variables: [wind_dir, wind_spd]  #>  #> # A tibble: 33,486 x 5 #>    time                   lat   lon wind_dir wind_spd #>    <chr>                <dbl> <dbl>    <int>    <dbl> #>  1 2007-05-05T02:00:00Z  55.9 -143.      331     2.80 #>  2 2007-05-05T02:10:00Z  55.9 -143.      328     2.60 #>  3 2007-05-05T02:20:00Z  55.9 -143.      329     2.20 #>  4 2007-05-05T02:30:00Z  55.9 -143.      356     2.10 #>  5 2007-05-05T02:40:00Z  55.9 -143.      360     1.5  #>  6 2007-05-05T02:50:00Z  55.9 -143.       10     1.90 #>  7 2007-05-05T03:00:00Z  55.9 -143.       10     2.20 #>  8 2007-05-05T03:10:00Z  55.9 -143.       14     2.20 #>  9 2007-05-05T03:20:00Z  55.9 -143.       16     2.10 #> 10 2007-05-05T03:30:00Z  55.9 -143.       22     1.60 #> # … with 33,476 more rows buoy(dataset = 'cwind', buoyid = 41001, year = 1999) #> Using c1999.nc #> Dimensions (rows/cols): [52554 X 5]  #> 2 variables: [wind_dir, wind_spd]  #>  #> # A tibble: 52,554 x 5 #>    time                   lat   lon wind_dir wind_spd #>    <chr>                <dbl> <dbl>    <int>    <dbl> #>  1 1999-01-01T00:00:00Z  34.7 -72.7      272    11.7  #>  2 1999-01-01T00:10:00Z  34.7 -72.7      260    11    #>  3 1999-01-01T00:20:00Z  34.7 -72.7      249     8.70 #>  4 1999-01-01T00:30:00Z  34.7 -72.7      247     8.40 #>  5 1999-01-01T00:40:00Z  34.7 -72.7      240     7.10 #>  6 1999-01-01T00:50:00Z  34.7 -72.7      242     7.90 #>  7 1999-01-01T01:00:00Z  34.7 -72.7      246     8.30 #>  8 1999-01-01T01:10:00Z  34.7 -72.7      297    10.9  #>  9 1999-01-01T01:20:00Z  34.7 -72.7      299    11.3  #> 10 1999-01-01T01:30:00Z  34.7 -72.7      299    11.1  #> # … with 52,544 more rows buoy(dataset = 'cwind', buoyid = 45005, year = 2008, datatype = \"c\") #> Dimensions (rows/cols): [29688 X 5]  #> 2 variables: [wind_dir, wind_spd]  #>  #> # A tibble: 29,688 x 5 #>    time                   lat   lon wind_dir wind_spd #>    <chr>                <dbl> <dbl>    <int>    <dbl> #>  1 2008-04-29T09:00:00Z  41.7 -82.4       10     9    #>  2 2008-04-29T09:10:00Z  41.7 -82.4        8     9    #>  3 2008-04-29T09:20:00Z  41.7 -82.4        5     9.30 #>  4 2008-04-29T09:30:00Z  41.7 -82.4       13     9.5  #>  5 2008-04-29T09:40:00Z  41.7 -82.4       14     9.40 #>  6 2008-04-29T09:50:00Z  41.7 -82.4       12     9.40 #>  7 2008-04-29T14:00:00Z  41.7 -82.4      341     6.5  #>  8 2008-04-29T14:10:00Z  41.7 -82.4      332     6.80 #>  9 2008-04-29T14:20:00Z  41.7 -82.4      335     6.40 #> 10 2008-04-29T14:30:00Z  41.7 -82.4      332     6.5  #> # … with 29,678 more rows buoy(dataset = 'cwind', buoyid = 45005, datatype = \"c\") #> Using c1996.nc #> Dimensions (rows/cols): [26784 X 5]  #> 2 variables: [wind_dir, wind_spd]  #>  #> # A tibble: 26,784 x 5 #>    time                   lat   lon wind_dir wind_spd #>    <chr>                <dbl> <dbl>    <int>    <dbl> #>  1 1996-05-15T23:00:00Z  41.7 -82.4      337     2.20 #>  2 1996-05-15T23:10:00Z  41.7 -82.4      282     1    #>  3 1996-05-15T23:20:00Z  41.7 -82.4      282     2.20 #>  4 1996-05-15T23:30:00Z  41.7 -82.4      258     2.60 #>  5 1996-05-15T23:40:00Z  41.7 -82.4      254     3    #>  6 1996-05-15T23:50:00Z  41.7 -82.4      252     2.70 #>  7 1996-05-16T00:00:00Z  41.7 -82.4      240     2.10 #>  8 1996-05-16T00:10:00Z  41.7 -82.4      246     2.40 #>  9 1996-05-16T00:20:00Z  41.7 -82.4      251     2.70 #> 10 1996-05-16T00:30:00Z  41.7 -82.4      253     2.90 #> # … with 26,774 more rows"},{"path":"https://docs.ropensci.org/rnoaa/articles/homr_vignette.html","id":"load-rnoaa","dir":"Articles","previous_headings":"","what":"Load rnoaa","title":"HOMR metadata","text":"","code":"library('rnoaa')"},{"path":"https://docs.ropensci.org/rnoaa/articles/homr_vignette.html","id":"search-by-station-identifier","dir":"Articles","previous_headings":"","what":"Search by station identifier","title":"HOMR metadata","text":"can various ways. Using qid parameter (stands qualified ID, far know), can search suffix (e.g., 046742), separated colon (e.g., COOP:046742). station suffix ","code":"res <- homr(qid = ':046742') names(res) #> [1] \"20002078\" names(res[['20002078']]) #>  [1] \"id\"          \"head\"        \"namez\"       \"identifiers\" \"status\"      #>  [6] \"platform\"    \"relocations\" \"remarks\"     \"updates\"     \"elements\"    #> [11] \"location\" res$`20002078`[1:3] #> $id #> [1] \"20002078\" #>  #> $head #>                  preferredName latitude_dec longitude_dec precision #> 1 PASO ROBLES MUNICIPAL AP, CA      35.6697     -120.6283   DDddddd #>             por.beginDate por.endDate #> 1 1949-10-05T00:00:00.000     Present #>  #> $namez #>                         name  nameType #> 1   PASO ROBLES MUNICIPAL AP      COOP #> 2   PASO ROBLES MUNICIPAL AP PRINCIPAL #> 3 PASO ROBLES MUNICIPAL ARPT       PUB res <- homr(qid = 'COOP:046742') names(res) #> [1] \"20002078\" names(res[['20002078']]) #>  [1] \"id\"          \"head\"        \"namez\"       \"identifiers\" \"status\"      #>  [6] \"platform\"    \"relocations\" \"remarks\"     \"updates\"     \"elements\"    #> [11] \"location\" res$`20002078`[1:5] #> $id #> [1] \"20002078\" #>  #> $head #>                  preferredName latitude_dec longitude_dec precision #> 1 PASO ROBLES MUNICIPAL AP, CA      35.6697     -120.6283   DDddddd #>             por.beginDate por.endDate #> 1 1949-10-05T00:00:00.000     Present #>  #> $namez #>                         name  nameType #> 1   PASO ROBLES MUNICIPAL AP      COOP #> 2   PASO ROBLES MUNICIPAL AP PRINCIPAL #> 3 PASO ROBLES MUNICIPAL ARPT       PUB #>  #> $identifiers #>      idType          id #> 1     GHCND USW00093209 #> 2   GHCNMLT USW00093209 #> 3      COOP      046742 #> 4      WBAN       93209 #> 5       FAA         PRB #> 6      ICAO        KPRB #> 7     NWSLI         PRB #> 8 NCDCSTNID    20002078 #>  #> $status #> NULL"},{"path":"https://docs.ropensci.org/rnoaa/articles/homr_vignette.html","id":"search-by-station-parameter","dir":"Articles","previous_headings":"","what":"Search by station parameter","title":"HOMR metadata","text":"can also search station identifier, different qid .","code":"res <- homr(station=20002078) names(res) #> [1] \"20002078\" names(res[['20002078']]) #>  [1] \"id\"          \"head\"        \"namez\"       \"identifiers\" \"status\"      #>  [6] \"platform\"    \"relocations\" \"remarks\"     \"updates\"     \"elements\"    #> [11] \"location\" res$`20002078`[4:6] #> $identifiers #>      idType          id #> 1     GHCND USW00093209 #> 2   GHCNMLT USW00093209 #> 3      COOP      046742 #> 4      WBAN       93209 #> 5       FAA         PRB #> 6      ICAO        KPRB #> 7     NWSLI         PRB #> 8 NCDCSTNID    20002078 #>  #> $status #> NULL #>  #> $platform #> [1] \"COOP\""},{"path":"https://docs.ropensci.org/rnoaa/articles/homr_vignette.html","id":"search-by-state-and-county","dir":"Articles","previous_headings":"","what":"Search by state and county","title":"HOMR metadata","text":"state country state county","code":"res <- homr(state='DE', begindate='2005-01-01', enddate='2005-02-01') names(res) #>  [1] \"10001871\" \"10100161\" \"10100162\" \"10100164\" \"10100166\" \"20004155\" #>  [7] \"20004158\" \"20004160\" \"20004162\" \"20004163\" \"20004167\" \"20004168\" #> [13] \"20004171\" \"20004176\" \"20004178\" \"20004179\" \"20004180\" \"20004182\" #> [19] \"20004184\" \"20004185\" \"30001464\" \"30001561\" \"30001831\" \"30075067\" res <- homr(country='GHANA', begindate='2005-01-01', enddate='2005-02-01') library(\"dplyr\") #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union bind_rows(lapply(res, function(x) x$location$latlon)) #>    latitude_rptd longitude_rptd latitude_dec longitude_dec latitude_dms #> 1            6.2         -2.333          6.2        -2.333   06,12,00,N #> 2          6.083           -.25        6.083         -0.25   06,04,59,N #> 3          5.933          -.983        5.933        -0.983   05,55,59,N #> 4          9.033         -2.483        9.033        -2.483   09,01,59,N #> 5           7.75           -2.1         7.75          -2.1   07,45,00,N #> 6         10.083         -2.508       10.083        -2.508   10,04,59,N #> 7          9.557          -.863        9.557        -0.863   09,33,25,N #> 8          5.783           .633        5.783         0.633   05,46,59,N #> 9          4.867         -2.233        4.867        -2.233   04,52,01,N #> 10           6.1           .117          6.1         0.117   06,06,00,N #> 11         7.362         -2.329        7.362        -2.329   07,21,43,N #> 12         5.617              0        5.617           0.0   05,37,01,N #> 13          10.9           -1.1         10.9          -1.1   10,54,00,N #> 14         7.817          -.033        7.817        -0.033   07,49,01,N #> 15           6.6           .467          6.6         0.467   06,36,00,N #> 16         5.605          -.167        5.605        -0.167   05,36,18,N #> 17         6.715         -1.591        6.715        -1.591   06,42,54,N #> 18         4.896         -1.775        4.896        -1.775   04,53,46,N #> 19          5.85         -.1833         5.85       -0.1833   05,51,00,N #> 20          5.55            -.2         5.55          -0.2   05,33,00,N #> 21           9.4            -.9          9.4          -0.9   09,24,00,N #> 22             5             -2          5.0          -2.0   05,00,00,N #> 23          6.47            .33         6.47          0.33   06,28,12,N #> 24           8.2            .57          8.2          0.57   08,12,00,N #> 25           9.5           -.85          9.5         -0.85   09,30,00,N #>    longitude_dms          date.beginDate            date.endDate #> 1    002,19,59,W                 Unknown                 Present #> 2    000,15,00,W                 Unknown                 Present #> 3    000,58,59,W                 Unknown                 Present #> 4    002,28,59,W                 Unknown                 Present #> 5    002,06,00,W                 Unknown                 Present #> 6    002,30,29,W                 Unknown                 Present #> 7    000,51,47,W                 Unknown                 Present #> 8    000,37,59,E                 Unknown                 Present #> 9    002,13,59,W                 Unknown                 Present #> 10   000,07,01,E                 Unknown                 Present #> 11   002,19,44,W                 Unknown                 Present #> 12   000,00,00,E                 Unknown                 Present #> 13   001,06,00,W                 Unknown                 Present #> 14   000,01,59,W                 Unknown                 Present #> 15   000,28,01,E                 Unknown                 Present #> 16   000,10,01,W                 Unknown                 Present #> 17   001,35,28,W                 Unknown                 Present #> 18   001,46,30,W                 Unknown                 Present #> 19   000,11,00,W                 Unknown                 Present #> 20   000,12,00,W                 Unknown                 Present #> 21   000,54,00,W                 Unknown                 Present #> 22   002,00,00,W                 Unknown                 Present #> 23   000,19,48,E                 Unknown                 Present #> 24   000,34,12,E                 Unknown                 Present #> 25   000,51,00,W 1973-01-01T00:00:00.000 2008-12-31T00:00:00.000 res <- homr(state='NC', county='BUNCOMBE', headersOnly = TRUE) head(bind_rows(lapply(res, \"[[\", \"head\"))) #>                     preferredName latitude_dec longitude_dec #> 1           ASHEVILLE 5.6 NNW, NC      35.6534      -82.5709 #> 2 ASHEVILLE HENDERSONVILLE AP, NC     35.43333     -82.48333 #> 3                 WEAVERVILLE, NC         35.7     -82.56667 #> 4       BLACK MOUNTAIN 2.4 SE, NC    35.585695     -82.30557 #> 5                GARREN CREEK, NC     35.51667     -82.33333 #> 6               BILTMORE 2 SE, NC     35.56833       -82.545 #>             por.beginDate             por.endDate precision #> 1 2007-08-27T00:00:00.000                 Present      <NA> #> 2 1940-11-01T00:00:00.000 1960-12-31T00:00:00.000      DDMM #> 3 1946-03-30T00:00:00.000 1992-10-01T00:00:00.000      DDMM #> 4 2013-10-25T00:00:00.000                 Present      <NA> #> 5 1936-09-25T00:00:00.000 1962-03-31T00:00:00.000      DDMM #> 6 1963-10-01T00:00:00.000 2007-11-14T00:00:00.000    DDMMSS"},{"path":"https://docs.ropensci.org/rnoaa/articles/homr_vignette.html","id":"get-header-information-only","dir":"Articles","previous_headings":"","what":"Get header information only","title":"HOMR metadata","text":"","code":"res <- homr(headersOnly=TRUE, state='DE') head(bind_rows(lapply(res, \"[[\", \"head\"))) #>               preferredName     latitude_dec     longitude_dec #> 1         LEWES 1.5 SSW, DE        38.758827        -75.157875 #> 2      SELBYVILLE 7.1 E, DE        38.461155        -75.089328 #> 3       MILFORD 1.3 WSW, DE 38.9052848815918 -75.4544143676758 #> 4    MIDDLETOWN 4.1 NNW, DE 39.5044784545898 -75.7494506835938 #> 5 WILMINGTON PORTER RES, DE          39.7739          -75.5414 #> 6             BEAR 2 SW, DE          39.5917          -75.7325 #>             por.beginDate             por.endDate precision #> 1 2014-12-08T00:00:00.000                 Present      <NA> #> 2 2012-07-14T00:00:00.000                 Present      <NA> #> 3 2016-03-13T00:00:00.000 2017-12-31T00:00:00.000      <NA> #> 4 2016-03-12T00:00:00.000                 Present      <NA> #> 5 1912-07-12T00:00:00.000                 Present   DDddddd #> 6 2003-02-01T00:00:00.000 2013-04-02T00:00:00.000    DDMMSS"},{"path":"https://docs.ropensci.org/rnoaa/articles/homr_vignette.html","id":"data-definitions","dir":"Articles","previous_headings":"","what":"Data definitions","title":"HOMR metadata","text":"data returned format , separate function provided get metadata. function homr_definitions() query HOMR API, get updated metadata - .e., ’s static dataset stored locally.","code":"head( homr_definitions() ) #>   defType  abbr                fullName    displayName #> 1     ids GHCND        GHCND IDENTIFIER       GHCND ID #> 2     ids  COOP             COOP NUMBER        COOP ID #> 3     ids  WBAN             WBAN NUMBER        WBAN ID #> 4     ids   FAA FAA LOCATION IDENTIFIER         FAA ID #> 5     ids  ICAO                 ICAO ID        ICAO ID #> 6     ids TRANS          TRANSMITTAL ID Transmittal ID #>                                                                                                                                 description #> 1                                                                          GLOBAL HISTORICAL CLIMATOLOGY NETWORK - DAILY (GHCND) IDENTIFIER #> 2                                                                                   NATIONAL WEATHER SERVICE COOPERATIVE NETWORK IDENTIFIER #> 3                                                                                                       WEATHER-BUREAU-ARMY-NAVY IDENTIFIER #> 4                                                                                                FEDERAL AVIATION ADMINISTRATION IDENTIFIER #> 5                                                                                      INTERNATIONAL CIVIL AVIATION ORGANIZATION IDENTIFIER #> 6 MISCELLANEOUS IDENTIFIER THAT DOES NOT FALL INTO AN OFFICIALLY SOURCED CATEGORY AND IS NEEDED IN SUPPORT OF NCEI DATA PRODUCTS AND INGEST #>   cssaName ghcndName #> 1     <NA>      <NA> #> 2     <NA>      <NA> #> 3     <NA>      <NA> #> 4     <NA>      <NA> #> 5     <NA>      <NA> #> 6     <NA>      <NA>"},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"flm_m-measurement-flag","dir":"Articles","previous_headings":"# Dataset: GHCND","what":"flm_m (Measurement flag)","title":"NOAA NCDC dataset attributes","text":"Blank: measurement information applicable : value precipitation snow multi-day total, accumulated since last measurement (used Daily Form pdf file) B: precipitation total formed two 12-hour totals D: precipitation total formed four six-hour totals K: converted knots L: temperature appears lagged respect reported hour observation O: converted oktas P: identified “missing presumed zero” DSI 3200 3206 T: trace precipitation, snowfall, snow depth W: converted 16-point WBAN code (wind direction)","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"fl_q-quality-flag","dir":"Articles","previous_headings":"# Dataset: GHCND","what":"fl_q (Quality flag)","title":"NOAA NCDC dataset attributes","text":"Blank: fail quality assurance check D: failed duplicate check G: failed gap check : failed internal consistency check K: failed streak/frequent-value check L: failed check length multiday period M: failed mega-consistency check N: failed naught check O: failed climatological outlier check R: failed lagged range check S: failed spatial consistency check T: failed temporal consistency check W: temperature warm snow X: failed bounds check Z: flagged result official Datzilla investigation","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"fl_s-source-flag","dir":"Articles","previous_headings":"# Dataset: GHCND","what":"fl_s (Source flag)","title":"NOAA NCDC dataset attributes","text":"Blank: source (.e., data value missing) 0: U.S. Cooperative Summary Day (NCDC DSI-3200) 6: CDMP Cooperative Summary Day (NCDC DSI-3206) 7: U.S. Cooperative Summary Day, Transmitted via WxCoder3 (NCDC DSI-3207) : U.S. Automated Surface Observing System (ASOS) real-time data (since January 1, 2006) : Australian data Australian Bureau Meteorology B: U.S. ASOS data October 2000-December 2005 (NCDC DSI-3211) b: Belarus update E: European Climate Assessment Dataset (Klein Tank et al., 2002) F: U.S. Fort data G: Official Global Climate Observing System (GCOS) government-supplied data H: High Plains Regional Climate Center real-time data : International collection (non U.S. data received personal contacts) K: U.S. Cooperative Summary Day data digitized paper observer forms (2011 present) M: Monthly METAR Extract (additional ASOS data) N: Community Collaborative Rain, Hail,Snow (CoCoRaHS) Q: Data several African countries “quarantined”, , withheld public release permission granted respective meteorological services R: NCDC Reference Network Database (Climate Reference Network Historical Climatology Network-Modernized) r: -Russian Research Institute Hydrometeorological Information-World Data Center S: Global Summary Day (NCDC DSI-9618) NOTE: “S” values derived hourly synoptic reports exchanged Global Telecommunications System (GTS). Daily values derived fashion may differ significantly “true” daily data, particularly precipitation(.e., use caution). u: Ukraine update W: WBAN/ASOS Summary Day NCDC’s Integrated Surface Data (ISD). X: U.S. First-Order Summary Day (NCDC DSI-3210) Z: Datzilla official additions replacements z: Uzbekistan update","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"fl_t-time-of-observation-flag","dir":"Articles","previous_headings":"# Dataset: GHCND","what":"fl_t (Time of observation flag)","title":"NOAA NCDC dataset attributes","text":"(2 digit hour, 2 digit minute) 24 hour clock time observation given local time station record.","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"dataset-gsom","dir":"Articles","previous_headings":"","what":"# Dataset: GSOM","title":"NOAA NCDC dataset attributes","text":"info: https://www1.ncdc.noaa.gov/pub/data/cdo/documentation/gsom-gsoy.pdf Observations synonymous elements values, defined Table . 9999 indicates missing data data received. flags: Missing flag , Consecutive Missing flag","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"fl_miss-missing-flag","dir":"Articles","previous_headings":"# Dataset: GSOM","what":"fl_miss (Missing flag)","title":"NOAA NCDC dataset attributes","text":"Defined total number days observation/element missing month. can taken measure quality completeness higher number days sampled month, representative value entire month.","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"fl_cmiss-consecutive-missing-flag","dir":"Articles","previous_headings":"# Dataset: GSOM","what":"fl_cmiss (Consecutive missing flag)","title":"NOAA NCDC dataset attributes","text":"Defined maximum number consecutive days month observation/element missing.","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"dataset-gsoy","dir":"Articles","previous_headings":"","what":"# Dataset: GSOY","title":"NOAA NCDC dataset attributes","text":"info: https://www1.ncdc.noaa.gov/pub/data/cdo/documentation/gsom-gsoy.pdf","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"fl_m-measurement-flag","dir":"Articles","previous_headings":"# Dataset: GSOY","what":"fl_m (Measurement flag)","title":"NOAA NCDC dataset attributes","text":": Accumulated amount. value total may include data previous month months (TPCP). B: Adjusted Total. Monthly value totals based proportional available data across entire month. (CLDD, HTDD) E: estimated monthly annual total. : Monthly means totals based incomplete time series. 1 9 days missing. (MMNT,MMXP, MMXT, MNTM, TPCP, TSNW) M: used indicate data element missing. S: Precipitation amount continuing accumulated. Total included subsequent value (TPCP). Example: Days 1-20 1.35 inches precipitation, period accumulation began. element TPCP 00135S total accumulated amount value appears subsequent monthly value. TPCP = 0 precipitation measured month. flag 1 set “S” total accumulated amount appears subsequent monthly value. T: Trace precipitation, snowfall, snow depth. precipitation data value = “00000”. (EMXP, MXSD, TPCP, TSNW) +: phenomena question occurred several days. date DAY field last day occurrence. Blank: report","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"fl_q-quality-flag-1","dir":"Articles","previous_headings":"# Dataset: GSOY","what":"fl_q (Quality flag)","title":"NOAA NCDC dataset attributes","text":": Accumulated amount E: Estimated value +: Value occurred one day, last date occurrence used","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"fl_d-number-of-days-flag","dir":"Articles","previous_headings":"# Dataset: GSOY","what":"fl_d (Number of days flag )","title":"NOAA NCDC dataset attributes","text":"Number days given 00 days month considered computing data value otherwise maximum number consecutive days month considered computing data value.","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"fl_u-units-flag","dir":"Articles","previous_headings":"# Dataset: GSOY","what":"fl_u (Units flag)","title":"NOAA NCDC dataset attributes","text":"C: Whole degree Celsius D: Whole Fahrenheit Degree Day F: Whole degree Fahrenheit HI: Hundredths inches : Whole inches M: Whole miles MH: Miles per hour MM: Millimeters NA: units applicable (dimensionless) TC: Tenths degrees Celsius TF: Tenths degrees Fahrenheit TI: Tenths inches TM: Tenths millimeters 1: Soils, degrees Fahrenheit, soil depths inches hundredths 2: Soils, degrees Celsius, soil depth whole centimeters 3: Soils, degrees Celsius, soil, soil depth inches hundredths 4: Soils, degrees Fahrenheit, soil depth whole centimeters 5: Soils, soil station closed current month, ‘5’ indicates station closed.","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"dataset-normal_ann","dir":"Articles","previous_headings":"","what":"# Dataset: NORMAL_ANN","title":"NOAA NCDC dataset attributes","text":"info: https://www1.ncdc.noaa.gov/pub/data/cdo/documentation/NORMAL_ANN_documentation.pdf","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"description","dir":"Articles","previous_headings":"# Dataset: NORMAL_ANN","what":"Description","title":"NOAA NCDC dataset attributes","text":"1981-2010 Normals comprise climate normals using thirty year period temperature, degree days, precipitation, snowfall, snow depth, wind, etc. Data organized hourly, daily, monthly, seasonal annual. document describes elements layout Seasonal Annual Normals derived composite climate records numerous sources merged subjected suite quality assurance reviews.","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"fl_c-completeness-flag","dir":"Articles","previous_headings":"# Dataset: NORMAL_ANN","what":"fl_c (Completeness flag)","title":"NOAA NCDC dataset attributes","text":"flags accompany every Normals value indicate completeness data record used compute value, accounting methodological differences different product classes. six flag options described generally . Due methodological differences, flags applied somewhat differently temperature-based normals precipitation-based normals. precipitation-based hourly normals, following flags assigned independently normals value reported based number years available individual calculation. temperature-based normals, strong precedence given monthly normals maximum minimum temperature derived flags two variables. C: complete (30 years used) S: standard (5 years missing 3 consecutive years missing among sufficiently complete years) R: representative (observed record utilized incomplete, value scaled based filled values representative full period record) P: provisional (least 10 years used, sufficiently complete labeled standard representative). Also used parameter values February 29 well interpolated daily precipitation, snowfall, snow depth percentiles. Q: quasi-normal (least 2 years per month, sufficiently complete labeled provisional higher flag code. associated value computed using pseudonormals approach derived monthly pseudonormals. Blank: data value reported special value (see section B III. Additional Information ). Note: flags Q R aren’t applicable average number days different precipitation, snowfall, snow depth threshold exceedance; precipitation/snowfall/snow probabilities occurrence. , Q flags applicable standard deviations.","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"dataset-normal_dly","dir":"Articles","previous_headings":"","what":"# Dataset: NORMAL_DLY","title":"NOAA NCDC dataset attributes","text":"info: https://www1.ncdc.noaa.gov/pub/data/cdo/documentation/NORMAL_DLY_documentation.pdf","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"description-1","dir":"Articles","previous_headings":"# Dataset: NORMAL_DLY","what":"Description","title":"NOAA NCDC dataset attributes","text":"1981-2010 Normals comprise climate normals using thirty year period temperature, degree days, precipitation, snowfall, snow depth, wind, etc. Data organized hourly, daily, monthly, seasonal annual. document describes elements layout Daily Normals derived composite climate records numerous sources merged subjected suite quality assurance reviews.","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"fl_c-completeness-flag-1","dir":"Articles","previous_headings":"# Dataset: NORMAL_DLY","what":"fl_c (Completeness flag)","title":"NOAA NCDC dataset attributes","text":"NORMAL_ANN, see description Completeness flag.","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"dataset-normal_hly","dir":"Articles","previous_headings":"","what":"# Dataset: NORMAL_HLY","title":"NOAA NCDC dataset attributes","text":"info: https://www1.ncdc.noaa.gov/pub/data/cdo/documentation/NORMAL_HLY_documentation.pdf","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"description-2","dir":"Articles","previous_headings":"# Dataset: NORMAL_HLY","what":"Description","title":"NOAA NCDC dataset attributes","text":"1981-2010 Normals comprise climate normals using thirty year period temperature, degree days, precipitation, snowfall, snow depth, wind, etc. Data organized hourly, daily, monthly, seasonal annual normals. document describes elements layout Hourly Normals derived composite climate records numerous sources merged subjected suite quality assurance reviews. hourly normals provide suite descriptive statistics based hourly observations hundred stations across United States Pacific territories. Statistics provided 30- year averages, frequencies occurrence, percentiles hour day year. products useful examination diurnal change particular variable. temperature, dew point mean sea level pressure average hourly value well 10th 90th percentile hourly values given. heating cooling degree hours, average hourly value given using 65 degree F base. Average hourly values also given heat index wind chill. Cloud cover statistics include percent frequency clear, , scattered, broken overcast conditions. Wind statistics include prevailing secondary wind direction percent frequency, average wind speed, percentage calm winds mean wind vector direction magnitude. statistics computed ISD-lite dataset. 262 stations selected ISD-lite data, based completeness membership list known “first order stations.” typically airport locations needed 24 hours/day observations make hourly normals meaningful. stations least 27 30 years represented. hourly normal computed basis 450 possible values. aggregation value particular date time, plus minus 7 days, 30 years. fewer 350 valid values present, output given special value 9999. normals computed February 29, data February 29 included 15 day window leap years. original data shifted Greenwich Mean Time end product local standard time.","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"fl_c-completeness-flag-2","dir":"Articles","previous_headings":"# Dataset: NORMAL_HLY","what":"fl_c (Completeness flag)","title":"NOAA NCDC dataset attributes","text":"NORMAL_ANN, see description Completeness flag.","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"dataset-normal_mly","dir":"Articles","previous_headings":"","what":"# Dataset: NORMAL_MLY","title":"NOAA NCDC dataset attributes","text":"info: https://www1.ncdc.noaa.gov/pub/data/cdo/documentation/NORMAL_MLY_documentation.pdf","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"description-3","dir":"Articles","previous_headings":"# Dataset: NORMAL_MLY","what":"Description","title":"NOAA NCDC dataset attributes","text":"1981-2010 Normals comprise climate normals using thirty year period temperature, degree days, precipitation, snowfall, snow depth, wind, etc. Data organized hourly, daily, monthly, seasonal annual. document describes elements layout Monthly Normals derived composite climate records numerous sources merged subjected suite quality assurance reviews.","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"fl_c-completeness-flag-3","dir":"Articles","previous_headings":"# Dataset: NORMAL_MLY","what":"fl_c (Completeness flag)","title":"NOAA NCDC dataset attributes","text":"NORMAL_ANN, see description Completeness flag.","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"dataset-precip_hly","dir":"Articles","previous_headings":"","what":"# Dataset: PRECIP_HLY","title":"NOAA NCDC dataset attributes","text":"info: https://www1.ncdc.noaa.gov/pub/data/cdo/documentation/PRECIP_HLY_documentation.pdf","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"description-4","dir":"Articles","previous_headings":"# Dataset: PRECIP_HLY","what":"Description","title":"NOAA NCDC dataset attributes","text":"Hourly Precipitation Data (labeled Precipitation Hourly Climate Data Online system) database gives time-sequenced hourly precipitation amounts network 7000 reporting station located primarily United States. Data collected variety sources including National Weather Service reporting stations, volunteer cooperative observers, Federal Aviation Administration (FAA), utility companies, etc. Concerning rain gages/data processing: Data weighing rain gages, Fischer-Porter gages, Universal rain gages recent years, modern measuring equipment conjunction automated recording sites, etc. used dataset period. Precipitation values checked edited necessary automated manual methods. inconsistencies identified earlier data (prior 1996), historical data reprocessed 1997. rehabilitated data covered 53 million observations 1900 1995. Similar quality control checks place maintain consistency historical operationally received data.","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"fl_m-measurement-flag-1","dir":"Articles","previous_headings":"# Dataset: PRECIP_HLY","what":"fl_m (Measurement flag)","title":"NOAA NCDC dataset attributes","text":"Note: field left blank flag needed. : Begin accumulation. data value 99999 accompanies flag. indicates accumulation begun time hour. : End accumulation (amount associated flag). indicates accumulation ended sometime hour. Accumulated period indicates precipitation amount correct, exact beginning ending times known. data value 99999 occurring last day hour month indicates accumulation continues next month. , (comma): Used beginning data month accumulation progress previous month. data value 99999 always accompanies flag. flag used prior 1984. { : Begin deleted period hour (inclusive). original data received, unreadable clearly recognized noise. value 99999 accompanies flag. Primarily used since 1984. Also used Alaska 1976-1978. }: End deleted period hour (inclusive). original data received, unreadable clearly recognized noise. value 99999 accompanies flag. Primarily used since 1984. Also used Alaska 1976-1978. [: Begin missing period hour (inclusive). value 99999 accompanies flag. ]: End missing period hour (inclusive). value 99999 accompanies flag. Prior 1984 precipitation occurred last hour missing period, ending missing value appears non-zero value. Beginning 1984, beginning ending hours missing period recorded “99999[” ”99999],” respectively.. missing flag indicates data received. flag appears first last day month data received processed NCDC. E: Evaporation may occurred. Data may may reliable. flag used period 1984-1993. g: used day 1, hour 0100, precipitation amount zero. T: Indicates “trace” amount. Data value zero. “T” flags appear National Weather Service data since July 1996. M: Missing data. data available period.","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"fl_q-data-quality-flag","dir":"Articles","previous_headings":"# Dataset: PRECIP_HLY","what":"fl_q (Data quality flag)","title":"NOAA NCDC dataset attributes","text":"Z: Indicates probable amounts result melting frozen precipitation. flag may used identify sites deficient manner snow shields employed. Used since January 1996. R: data value failed one NCDC’s quality control tests. Q: Pre 1996 usage, Indicates value failed extreme value test (value present). Data used caution. Extreme tests used 1) value accumulated amount higher one-hour statewide 100 year return period precipitation amount 2) value accumulated amount higher 24 hour statewide extreme precipitation total. Q: 1996 present usage. single erroneous value (value present). Rarely used since 1996. q: hourly value excludes one 15 minute periods. Lowest data resolution 15 minutes. Used since January 1996.","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"dataset-precip_15","dir":"Articles","previous_headings":"","what":"# Dataset: PRECIP_15","title":"NOAA NCDC dataset attributes","text":"info: https://www1.ncdc.noaa.gov/pub/data/cdo/documentation/PRECIP_15_documentation.pdf","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"description-5","dir":"Articles","previous_headings":"# Dataset: PRECIP_15","what":"Description","title":"NOAA NCDC dataset attributes","text":"15 Minute Precipitation Data (labeled Precipitation 15 Minute Climate Data Online system) database gives time-sequenced quarter-hour precipitation amounts network 3600 reporting station located primarily United States. Data collected variety sources including National Weather Service reporting stations, volunteer cooperative observers, Federal Aviation Administration (FAA), utility companies, etc. Concerning rain gages/data processing: Data Fischer-Porter gages May 1971 December 1983 used dataset. Precipitation values checked edited necessary automated manual methods. Data processing procedures updated January 1984 produce element structured data base files enhanced beginning January 1996 data month. Currently, interactive quality control procedures place added many checks features data subjected automated editing procedures reduce manual handling data.","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"fl_m-data-measurement-flag","dir":"Articles","previous_headings":"# Dataset: PRECIP_15","what":"fl_m (Data measurement flag)","title":"NOAA NCDC dataset attributes","text":"QPCP Note: field left blank flag needed. : Begin accumulation. data value 99999 accompanies flag. indicates accumulation begun time 15 minute period. : End accumulation (amount associated flag). indicates accumulation ended sometime 15 minute period. Accumulated period indicates precipitation amount correct, exact beginning ending times known. data value 99999 occurring last day hour month indicates accumulation continues next month. , (comma): Used beginning data month accumulation progress. flag used prior 1984. { : Begin deleted period hour (inclusive). }: End deleted period hour (inclusive). [: Begin missing period hour (inclusive). ]: End missing period hour (inclusive). E: Evaporation may occurred. Data may may reliable. flag used period 1984-1993. g: used day 1 precipitation amount zero. T: Indicates “trace” amount. Data value zero. “T” flags appear National Weather Service data . M: Missing data. data available period. QGAG : begin accumulation (indicates measurement periods overlapped) : end accumulation [: begin missing ]: end missing {: begin delete }: end delete S: gage reset","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"fl_q-data-quality-flag-1","dir":"Articles","previous_headings":"# Dataset: PRECIP_15","what":"fl_q (Data quality flag)","title":"NOAA NCDC dataset attributes","text":"QPCP X: Used data prior 1996 part 1997 data rehabilitation effort. Indicates value failed extreme value test; data used caution. Extreme tests : 1) value accumulated precipitation total, value failed one hour statewide 100 year return period precipitation 2) value accumulated precipitation total, value failed 24 hour statewide extreme precipitation total. Z: Indicates probable amounts result melting frozen precipitation. flag may used identify sites deficient manner snow shields employed. Used since January 1996. R: data value failed one NCDC’s quality control tests. Q: single erroneous value (value present). Used since January 1996. q: hourly value excludes one 15 minute periods. Lowest data resolution 15 minutes. Used since January 1996. : Accumulated period amount. accumulated period indicates precipitation amount correct, exact beginning ending times known extent precipitation occurred sometime within accumulation period. QGAG Q: Questionable value. Data used. P: Punched mechanism failure, missing punch assumed. Assumed punch value used. V: Evaporation likely. Gage value dropped. Data used.","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html","id":"fl_u-units-flag-1","dir":"Articles","previous_headings":"# Dataset: PRECIP_15","what":"fl_u (Units flag)","title":"NOAA NCDC dataset attributes","text":"HI indicates data values (QGAG QPCP) hundredths inches. HT indicates data values (QGAG QPCP) tenths inches.","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_vignette.html","id":"load-rnoaa","dir":"Articles","previous_headings":"","what":"Load rnoaa","title":"NCDC introduction","text":"","code":"library('rnoaa')"},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_vignette.html","id":"get-info-on-a-station-by-specifying-a-datasetid-locationid-and-stationid","dir":"Articles","previous_headings":"","what":"Get info on a station by specifying a datasetid, locationid, and stationid","title":"NCDC introduction","text":"","code":"ncdc_stations(datasetid='GHCND', locationid='FIPS:12017', stationid='GHCND:USC00084289') #> $meta #> NULL #>  #> $data #>   elevation    mindate    maxdate latitude                  name datacoverage #> 1      17.7 1899-01-01 2020-08-12 28.80286 INVERNESS 3 SE, FL US            1 #>                  id elevationUnit longitude #> 1 GHCND:USC00084289        METERS -82.31266 #>  #> attr(,\"class\") #> [1] \"ncdc_stations\""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_vignette.html","id":"search-for-data-and-get-a-data-frame","dir":"Articles","previous_headings":"","what":"Search for data and get a data.frame","title":"NCDC introduction","text":"Note value column strangely large numbers temperature measurements. convention, rnoaa doesn’t conversion values APIs APIs use seemingly odd units. two options : Use add_units parameter ncdc() rnoaa attempt look units. good idea try first. Consult documentation whiechever dataset ’re accessing. case, GHCND README (https://www1.ncdc.noaa.gov/pub/data/ghcn/daily/readme.txt) indicates TMAX measured tenths degrees Celcius.","code":"out <- ncdc(datasetid='NORMAL_DLY', datatypeid='dly-tmax-normal', startdate = '2010-05-01', enddate = '2010-05-10') out$data #> # A tibble: 25 x 5 #>    date                datatype        station           value fl_c  #>    <chr>               <chr>           <chr>             <int> <chr> #>  1 2010-05-01T00:00:00 DLY-TMAX-NORMAL GHCND:AQW00061705   869 C     #>  2 2010-05-01T00:00:00 DLY-TMAX-NORMAL GHCND:CAW00064757   607 Q     #>  3 2010-05-01T00:00:00 DLY-TMAX-NORMAL GHCND:CQC00914080   840 R     #>  4 2010-05-01T00:00:00 DLY-TMAX-NORMAL GHCND:CQC00914801   858 R     #>  5 2010-05-01T00:00:00 DLY-TMAX-NORMAL GHCND:FMC00914395   876 P     #>  6 2010-05-01T00:00:00 DLY-TMAX-NORMAL GHCND:FMC00914419   885 P     #>  7 2010-05-01T00:00:00 DLY-TMAX-NORMAL GHCND:FMC00914446   885 P     #>  8 2010-05-01T00:00:00 DLY-TMAX-NORMAL GHCND:FMC00914482   868 R     #>  9 2010-05-01T00:00:00 DLY-TMAX-NORMAL GHCND:FMC00914720   899 R     #> 10 2010-05-01T00:00:00 DLY-TMAX-NORMAL GHCND:FMC00914761   897 P     #> # … with 15 more rows"},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_vignette.html","id":"see-a-data-frame-with-units","dir":"Articles","previous_headings":"Search for data and get a data.frame","what":"See a data.frame with units","title":"NCDC introduction","text":"mentioned , can use add_units parameter ncdc() ask rnoaa attempt look units whatever data ask return. Let’s ask rnoaa add units precipitation (PRCP) data: output, can see units PRCP values “mm_tenths” means tenths millimeter. won’t always lucky sometimes look documentation .","code":"with_units <- ncdc(datasetid='GHCND', stationid='GHCND:USW00014895', datatypeid='PRCP', startdate = '2010-05-01', enddate = '2010-10-31', limit=500, add_units = TRUE) head( with_units$data ) #> # A tibble: 6 x 9 #>   date            datatype station         value fl_m  fl_q  fl_so fl_t  units   #>   <chr>           <chr>    <chr>           <int> <chr> <chr> <chr> <chr> <chr>   #> 1 2010-05-01T00:… PRCP     GHCND:USW00014…     0 \"T\"   \"\"    0     2400  mm_ten… #> 2 2010-05-02T00:… PRCP     GHCND:USW00014…    30 \"\"    \"\"    0     2400  mm_ten… #> 3 2010-05-03T00:… PRCP     GHCND:USW00014…    51 \"\"    \"\"    0     2400  mm_ten… #> 4 2010-05-04T00:… PRCP     GHCND:USW00014…     0 \"T\"   \"\"    0     2400  mm_ten… #> 5 2010-05-05T00:… PRCP     GHCND:USW00014…    18 \"\"    \"\"    0     2400  mm_ten… #> 6 2010-05-06T00:… PRCP     GHCND:USW00014…    30 \"\"    \"\"    0     2400  mm_ten…"},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_vignette.html","id":"plot-data-super-simple-but-its-a-start","dir":"Articles","previous_headings":"","what":"Plot data, super simple, but it’s a start","title":"NCDC introduction","text":"plot chunk six Note PRCP values units tenths millimeter, found .","code":"out <- ncdc(datasetid='NORMAL_DLY', stationid='GHCND:USW00014895', datatypeid='dly-tmax-normal', startdate = '2010-01-01', enddate = '2010-12-10', limit = 300) ncdc_plot(out)"},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_vignette.html","id":"example-1","dir":"Articles","previous_headings":"More on plotting","what":"Example 1","title":"NCDC introduction","text":"Search data first, plot Default plot plot chunk ncdc-plot-zero Create 14 day breaks plot chunk ncdc-plot-0 One month breaks plot chunk ncdc-plot-1","code":"out <- ncdc(datasetid='GHCND', stationid='GHCND:USW00014895', datatypeid='PRCP', startdate = '2010-05-01', enddate = '2010-10-31', limit=500) ncdc_plot(out) ncdc_plot(out, breaks=\"14 days\") ncdc_plot(out, breaks=\"1 month\", dateformat=\"%d/%m\")"},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_vignette.html","id":"example-2","dir":"Articles","previous_headings":"More on plotting","what":"Example 2","title":"NCDC introduction","text":"Search data Make plot, 6 hour breaks, date format hour plot chunk ncdc-plot-2","code":"out <- ncdc(datasetid='GHCND', stationid='GHCND:USW00014895', datatypeid='PRCP',             startdate = '2010-05-01', enddate = '2010-10-31', limit=500) ncdc_plot(out, breaks = \"1 month\", dateformat = \"%d/%m\")"},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_vignette.html","id":"combine-many-calls-to-noaa-function","dir":"Articles","previous_headings":"","what":"Combine many calls to noaa function","title":"NCDC introduction","text":"Search two sets data combine call ncdc_combine plot - default passing combined plot plots data together. case looks kind weird since straight line combines two distant dates. plot chunk ncdc-plot-line can pass separately, uses facet_wrap ggplot2 plot set data panel. plot chunk ncdc-plot-panel","code":"out1 <- ncdc(datasetid='GHCND', stationid='GHCND:USW00014895', datatypeid='PRCP', startdate = '2010-03-01', enddate = '2010-05-31', limit=500)  out2 <- ncdc(datasetid='GHCND', stationid='GHCND:USW00014895', datatypeid='PRCP', startdate = '2010-09-01', enddate = '2010-10-31', limit=500) df <- ncdc_combine(out1, out2) head(df[[1]]); tail(df[[1]]) #> # A tibble: 6 x 8 #>   date                datatype station           value fl_m  fl_q  fl_so fl_t  #>   <chr>               <chr>    <chr>             <int> <chr> <chr> <chr> <chr> #> 1 2010-03-01T00:00:00 PRCP     GHCND:USW00014895     0 \"T\"   \"\"    0     2400  #> 2 2010-03-02T00:00:00 PRCP     GHCND:USW00014895     0 \"T\"   \"\"    0     2400  #> 3 2010-03-03T00:00:00 PRCP     GHCND:USW00014895     0 \"T\"   \"\"    0     2400  #> 4 2010-03-04T00:00:00 PRCP     GHCND:USW00014895     0 \"\"    \"\"    0     2400  #> 5 2010-03-05T00:00:00 PRCP     GHCND:USW00014895     0 \"\"    \"\"    0     2400  #> 6 2010-03-06T00:00:00 PRCP     GHCND:USW00014895     0 \"\"    \"\"    0     2400 #> # A tibble: 6 x 8 #>   date                datatype station           value fl_m  fl_q  fl_so fl_t  #>   <chr>               <chr>    <chr>             <int> <chr> <chr> <chr> <chr> #> 1 2010-10-26T00:00:00 PRCP     GHCND:USW00014895   221 \"\"    \"\"    0     2400  #> 2 2010-10-27T00:00:00 PRCP     GHCND:USW00014895     0 \"\"    \"\"    0     2400  #> 3 2010-10-28T00:00:00 PRCP     GHCND:USW00014895     0 \"T\"   \"\"    0     2400  #> 4 2010-10-29T00:00:00 PRCP     GHCND:USW00014895     0 \"T\"   \"\"    0     2400  #> 5 2010-10-30T00:00:00 PRCP     GHCND:USW00014895     0 \"\"    \"\"    0     2400  #> 6 2010-10-31T00:00:00 PRCP     GHCND:USW00014895     0 \"\"    \"\"    0     2400 ncdc_plot(df) ncdc_plot(out1, out2, breaks=\"45 days\")"},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_workflow.html","id":"load-rnoaa","dir":"Articles","previous_headings":"","what":"Load rnoaa","title":"NCDC workflow","text":"","code":"library('rnoaa')"},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_workflow.html","id":"the-workflow","dir":"Articles","previous_headings":"","what":"The workflow","title":"NCDC workflow","text":"Look weather stations & get station id(s) Find type data available stations Search climate data stations (optionally specify type data get)","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_workflow.html","id":"look-for-weather-stations-get-station-ids","dir":"Articles","previous_headings":"The workflow","what":"Look for weather stations & get station id(s)","title":"NCDC workflow","text":"Just information one station","code":"ids <- ncdc_stations(locationid='FIPS:12017')$data$id[1:13] id <- \"GHCND:US1FLCT0002\" ncdc_stations(stationid = id)"},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_workflow.html","id":"find-out-what-type-of-data-is-available-for-those-stations","dir":"Articles","previous_headings":"The workflow","what":"Find out what type of data is available for those stations","title":"NCDC workflow","text":"various ways look data types available. First, data categories: Another way looking data sets: Yet another way looking data types:","code":"ncdc_datacats(stationid = id) ncdc_datasets(stationid = id) ncdc_datatypes(datasetid = \"GHCND\", stationid = id)"},{"path":"https://docs.ropensci.org/rnoaa/articles/ncdc_workflow.html","id":"search-for-climate-data-for-stations-optionally-specify-type-of-data-to-get","dir":"Articles","previous_headings":"The workflow","what":"Search for climate data for stations (optionally specify type of data to get)","title":"NCDC workflow","text":"Now know kinds data categories, data sets, data types available station can search data filters. Importantly, note specify three things call ncdc function: datasetid startdate enddate , specifying datasetid, stationid, datatypeid, startdate, enddate","code":"ncdc(datasetid = \"GHCND\", stationid = id, datatypeid = \"PRCP\", startdate = \"2012-10-01\", enddate = \"2013-01-01\")"},{"path":"https://docs.ropensci.org/rnoaa/articles/rnoaa.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"rnoaa introduction","text":"GDAL ’ll need GDAL (https://gdal.org/) installed first. may want use GDAL >= 0.9-1 since version later can read TopoJSON format files well, aren’t required , may useful. Install GDAL: OSX - https://www.kyngchaos.com/software/frameworks/ Linux - run sudo apt-get install gdal-bin Windows - https://trac.osgeo.org/osgeo4w/ install R package rgdal (rgeos also requires GDAL), ’ll likely need specify ’re gdal-config file machine, well things. OSX Mavericks machine, works (’s binary Mavericks, install source version): rest installation easy. , let us know. Stable version CRAN development version GitHub Load rnoaa","code":"install.packages(\"https://cran.r-project.org/src/contrib/rgdal_0.9-1.tar.gz\", repos = NULL, type=\"source\", configure.args = \"--with-gdal-config=/Library/Frameworks/GDAL.framework/Versions/1.10/unix/bin/gdal-config --with-proj-include=/Library/Frameworks/PROJ.framework/unix/include --with-proj-lib=/Library/Frameworks/PROJ.framework/unix/lib\") install.packages(\"rnoaa\") remotes::install_github(\"ropensci/rnoaa\") library('rnoaa')"},{"path":"https://docs.ropensci.org/rnoaa/articles/rnoaa.html","id":"ncdc-v2-api-data","dir":"Articles","previous_headings":"","what":"NCDC v2 API data","title":"rnoaa introduction","text":"NCDC Authentication ’ll need API key use NOAA NCDC functions (starting ncdc*()) package (essentially password). Go https://www.ncdc.noaa.gov/cdo-web/token get one. can’t use package without API key. obtain key, two ways use . Pass inline function call (somewhat cumbersome) Alternatively, might find easier set option, either adding line top script somewhere .rprofile can always store permamently .Rprofile file.","code":"ncdc(datasetid = 'PRECIP_HLY', locationid = 'ZIP:28801', datatypeid = 'HPCP', startdate = '2013-10-01', enddate = '2013-12-01', limit = 5, token =  \"YOUR_TOKEN\") options(noaakey = \"KEY_EMAILED_TO_YOU\")"},{"path":"https://docs.ropensci.org/rnoaa/articles/rnoaa.html","id":"fetch-list-of-city-locations-in-descending-order","dir":"Articles","previous_headings":"NCDC v2 API data","what":"Fetch list of city locations in descending order","title":"rnoaa introduction","text":"","code":"ncdc_locs(locationcategoryid='CITY', sortfield='name', sortorder='desc') #> $meta #> $meta$totalCount #> [1] 1989 #>  #> $meta$pageCount #> [1] 25 #>  #> $meta$offset #> [1] 1 #>  #>  #> $data #>       mindate    maxdate                  name datacoverage            id #> 1  1892-08-01 2021-05-31            Zwolle, NL       1.0000 CITY:NL000012 #> 2  1901-01-01 2021-11-23            Zurich, SZ       1.0000 CITY:SZ000007 #> 3  1957-07-01 2021-11-23         Zonguldak, TU       1.0000 CITY:TU000057 #> 4  1906-01-01 2021-11-23            Zinder, NG       0.9025 CITY:NG000004 #> 5  1973-01-01 2021-11-23        Ziguinchor, SG       1.0000 CITY:SG000004 #> 6  1938-01-01 2021-11-23         Zhytomyra, UP       0.9723 CITY:UP000025 #> 7  1948-03-01 2021-11-23        Zhezkazgan, KZ       0.9302 CITY:KZ000017 #> 8  1951-01-01 2021-11-23         Zhengzhou, CH       1.0000 CITY:CH000045 #> 9  1941-01-01 2021-11-23          Zaragoza, SP       1.0000 CITY:SP000021 #> 10 1936-01-01 2009-06-17      Zaporiyhzhya, UP       1.0000 CITY:UP000024 #> 11 1957-01-01 2021-11-23          Zanzibar, TZ       0.8016 CITY:TZ000019 #> 12 1973-01-01 2021-11-23            Zanjan, IR       0.9105 CITY:IR000020 #> 13 1893-01-01 2021-11-26     Zanesville, OH US       1.0000 CITY:US390029 #> 14 1912-01-01 2021-11-23             Zahle, LE       0.9819 CITY:LE000004 #> 15 1951-01-01 2021-11-23           Zahedan, IR       0.9975 CITY:IR000019 #> 16 1860-12-01 2021-11-23            Zagreb, HR       1.0000 CITY:HR000002 #> 17 1929-07-01 2021-10-09         Zacatecas, MX       1.0000 CITY:MX000036 #> 18 1947-01-01 2021-11-23 Yuzhno-Sakhalinsk, RS       1.0000 CITY:RS000081 #> 19 1893-01-01 2021-11-26           Yuma, AZ US       1.0000 CITY:US040015 #> 20 1942-02-01 2021-11-25   Yucca Valley, CA US       1.0000 CITY:US060048 #> 21 1885-01-01 2021-11-26      Yuba City, CA US       1.0000 CITY:US060047 #> 22 1998-02-01 2021-11-23            Yozgat, TU       0.9993 CITY:TU000056 #> 23 1893-01-01 2021-11-26     Youngstown, OH US       1.0000 CITY:US390028 #> 24 1894-01-01 2021-11-26           York, PA US       1.0000 CITY:US420024 #> 25 1869-01-01 2021-11-26        Yonkers, NY US       1.0000 CITY:US360031 #>  #> attr(,\"class\") #> [1] \"ncdc_locs\""},{"path":"https://docs.ropensci.org/rnoaa/articles/rnoaa.html","id":"get-info-on-a-station-by-specifying-a-dataset-locationtype-location-and-station","dir":"Articles","previous_headings":"NCDC v2 API data","what":"Get info on a station by specifying a dataset, locationtype, location, and station","title":"rnoaa introduction","text":"","code":"ncdc_stations(datasetid='GHCND', locationid='FIPS:12017', stationid='GHCND:USC00084289') #> $meta #> NULL #>  #> $data #>   elevation    mindate    maxdate latitude                  name datacoverage #> 1      17.7 1899-01-01 2021-11-08 28.80286 INVERNESS 3 SE, FL US            1 #>                  id elevationUnit longitude #> 1 GHCND:USC00084289        METERS -82.31266 #>  #> attr(,\"class\") #> [1] \"ncdc_stations\""},{"path":"https://docs.ropensci.org/rnoaa/articles/rnoaa.html","id":"search-for-data","dir":"Articles","previous_headings":"NCDC v2 API data","what":"Search for data","title":"rnoaa introduction","text":"","code":"out <- ncdc(datasetid='NORMAL_DLY', stationid='GHCND:USW00014895', datatypeid='dly-tmax-normal', startdate = '2010-05-01', enddate = '2010-05-10')"},{"path":"https://docs.ropensci.org/rnoaa/articles/rnoaa.html","id":"see-a-data-frame","dir":"Articles","previous_headings":"NCDC v2 API data","what":"See a data.frame","title":"rnoaa introduction","text":"Note value column strangely large numbers temperature measurements. convention, rnoaa doesn’t conversion values APIs APIs use seemingly odd units. two options : Use add_units parameter ncdc rnoaa attempt look units. good idea try first. Consult documentation whiechever dataset ’re accessing. case, GHCND README (https://www1.ncdc.noaa.gov/pub/data/ghcn/daily/readme.txt) indicates TMAX measured tenths degrees Celcius.","code":"head( out$data ) #> # A tibble: 6 × 5 #>   date                datatype        station           value fl_c  #>   <chr>               <chr>           <chr>             <int> <chr> #> 1 2010-05-01T00:00:00 DLY-TMAX-NORMAL GHCND:USW00014895   652 S     #> 2 2010-05-02T00:00:00 DLY-TMAX-NORMAL GHCND:USW00014895   655 S     #> 3 2010-05-03T00:00:00 DLY-TMAX-NORMAL GHCND:USW00014895   658 S     #> 4 2010-05-04T00:00:00 DLY-TMAX-NORMAL GHCND:USW00014895   661 S     #> 5 2010-05-05T00:00:00 DLY-TMAX-NORMAL GHCND:USW00014895   663 S     #> 6 2010-05-06T00:00:00 DLY-TMAX-NORMAL GHCND:USW00014895   666 S"},{"path":"https://docs.ropensci.org/rnoaa/articles/rnoaa.html","id":"see-a-data-frame-with-units","dir":"Articles","previous_headings":"NCDC v2 API data","what":"See a data.frame with units","title":"rnoaa introduction","text":"mentioned , can use add_units parameter ncdc() ask rnoaa attempt look units whatever data ask return. Let’s ask rnoaa add units precipitation (PRCP) data: output, can see units PRCP values “mm_tenths” means tenths millimeter. won’t always lucky sometimes look documentation .","code":"with_units <- ncdc(datasetid='GHCND', stationid='GHCND:USW00014895', datatypeid='PRCP', startdate = '2010-05-01', enddate = '2010-10-31', limit=500, add_units = TRUE) head( with_units$data ) #> # A tibble: 6 × 9 #>   date                datatype station      value fl_m  fl_q  fl_so fl_t  units  #>   <chr>               <chr>    <chr>        <int> <chr> <chr> <chr> <chr> <chr>  #> 1 2010-05-01T00:00:00 PRCP     GHCND:USW00…     0 \"T\"   \"\"    0     2400  mm_te… #> 2 2010-05-02T00:00:00 PRCP     GHCND:USW00…    30 \"\"    \"\"    0     2400  mm_te… #> 3 2010-05-03T00:00:00 PRCP     GHCND:USW00…    51 \"\"    \"\"    0     2400  mm_te… #> 4 2010-05-04T00:00:00 PRCP     GHCND:USW00…     0 \"T\"   \"\"    0     2400  mm_te… #> 5 2010-05-05T00:00:00 PRCP     GHCND:USW00…    18 \"\"    \"\"    0     2400  mm_te… #> 6 2010-05-06T00:00:00 PRCP     GHCND:USW00…    30 \"\"    \"\"    0     2400  mm_te…"},{"path":"https://docs.ropensci.org/rnoaa/articles/rnoaa.html","id":"plot-data-super-simple-but-its-a-start","dir":"Articles","previous_headings":"NCDC v2 API data","what":"Plot data, super simple, but it’s a start","title":"rnoaa introduction","text":"plot chunk unnamed-chunk-13 Note PRCP values units tenths millimeter, found .","code":"out <- ncdc(datasetid='GHCND', stationid='GHCND:USW00014895', datatypeid='PRCP', startdate = '2010-05-01', enddate = '2010-10-31', limit=500) ncdc_plot(out, breaks=\"1 month\", dateformat=\"%d/%m\")"},{"path":"https://docs.ropensci.org/rnoaa/articles/rnoaa.html","id":"more-plotting","dir":"Articles","previous_headings":"NCDC v2 API data","what":"More plotting","title":"rnoaa introduction","text":"can pass many outputs calls noaa function ncdc_plot function. plot chunk unnamed-chunk-14","code":"out1 <- ncdc(datasetid='GHCND', stationid='GHCND:USW00014895', datatypeid='PRCP', startdate = '2010-03-01', enddate = '2010-05-31', limit=500) out2 <- ncdc(datasetid='GHCND', stationid='GHCND:USW00014895', datatypeid='PRCP', startdate = '2010-09-01', enddate = '2010-10-31', limit=500) ncdc_plot(out1, out2, breaks=\"45 days\")"},{"path":"https://docs.ropensci.org/rnoaa/articles/rnoaa.html","id":"get-table-of-all-datasets","dir":"Articles","previous_headings":"NCDC v2 API data","what":"Get table of all datasets","title":"rnoaa introduction","text":"","code":"ncdc_datasets() #> $meta #> $meta$offset #> [1] 1 #>  #> $meta$count #> [1] 11 #>  #> $meta$limit #> [1] 25 #>  #>  #> $data #>                     uid    mindate    maxdate                        name #> 1  gov.noaa.ncdc:C00861 1763-01-01 2021-11-25             Daily Summaries #> 2  gov.noaa.ncdc:C00946 1763-01-01 2021-11-01 Global Summary of the Month #> 3  gov.noaa.ncdc:C00947 1763-01-01 2021-01-01  Global Summary of the Year #> 4  gov.noaa.ncdc:C00345 1991-06-05 2021-11-25    Weather Radar (Level II) #> 5  gov.noaa.ncdc:C00708 1994-05-20 2021-11-24   Weather Radar (Level III) #> 6  gov.noaa.ncdc:C00821 2010-01-01 2010-01-01     Normals Annual/Seasonal #> 7  gov.noaa.ncdc:C00823 2010-01-01 2010-12-31               Normals Daily #> 8  gov.noaa.ncdc:C00824 2010-01-01 2010-12-31              Normals Hourly #> 9  gov.noaa.ncdc:C00822 2010-01-01 2010-12-01             Normals Monthly #> 10 gov.noaa.ncdc:C00505 1970-05-12 2014-01-01     Precipitation 15 Minute #> 11 gov.noaa.ncdc:C00313 1900-01-01 2014-01-01        Precipitation Hourly #>    datacoverage         id #> 1          1.00      GHCND #> 2          1.00       GSOM #> 3          1.00       GSOY #> 4          0.95    NEXRAD2 #> 5          0.95    NEXRAD3 #> 6          1.00 NORMAL_ANN #> 7          1.00 NORMAL_DLY #> 8          1.00 NORMAL_HLY #> 9          1.00 NORMAL_MLY #> 10         0.25  PRECIP_15 #> 11         1.00 PRECIP_HLY #>  #> attr(,\"class\") #> [1] \"ncdc_datasets\""},{"path":"https://docs.ropensci.org/rnoaa/articles/rnoaa.html","id":"get-data-category-data-and-metadata","dir":"Articles","previous_headings":"NCDC v2 API data","what":"Get data category data and metadata","title":"rnoaa introduction","text":"","code":"ncdc_datacats(locationid = 'CITY:US390029') #> $meta #> $meta$totalCount #> [1] 39 #>  #> $meta$pageCount #> [1] 25 #>  #> $meta$offset #> [1] 1 #>  #>  #> $data #>                     name            id #> 1    Annual Agricultural        ANNAGR #> 2     Annual Degree Days         ANNDD #> 3   Annual Precipitation       ANNPRCP #> 4     Annual Temperature       ANNTEMP #> 5    Autumn Agricultural         AUAGR #> 6     Autumn Degree Days          AUDD #> 7   Autumn Precipitation        AUPRCP #> 8     Autumn Temperature        AUTEMP #> 9               Computed          COMP #> 10 Computed Agricultural       COMPAGR #> 11           Degree Days            DD #> 12      Dual-Pol Moments DUALPOLMOMENT #> 13             Echo Tops       ECHOTOP #> 14      Hydrometeor Type   HYDROMETEOR #> 15            Miscellany          MISC #> 16                 Other         OTHER #> 17               Overlay       OVERLAY #> 18         Precipitation          PRCP #> 19          Reflectivity  REFLECTIVITY #> 20    Sky cover & clouds           SKY #> 21   Spring Agricultural         SPAGR #> 22    Spring Degree Days          SPDD #> 23  Spring Precipitation        SPPRCP #> 24    Spring Temperature        SPTEMP #> 25   Summer Agricultural         SUAGR #>  #> attr(,\"class\") #> [1] \"ncdc_datacats\""},{"path":"https://docs.ropensci.org/rnoaa/articles/rnoaa.html","id":"tornado-data","dir":"Articles","previous_headings":"","what":"Tornado data","title":"rnoaa introduction","text":"function tornadoes() simply gets data. call takes , done, fun play .","code":"shp <- tornadoes() #> Error in tornadoes(): could not find function \"tornadoes\" library('sp') plot(shp) #> Error in h(simpleError(msg, call)): error in evaluating the argument 'x' in selecting a method for function 'plot': object 'shp' not found"},{"path":"https://docs.ropensci.org/rnoaa/articles/rnoaa.html","id":"homr-metadata","dir":"Articles","previous_headings":"","what":"HOMR metadata","title":"rnoaa introduction","text":"example, search metadata single station ID","code":"homr(qid = 'COOP:046742')"},{"path":"https://docs.ropensci.org/rnoaa/articles/rnoaa.html","id":"argo-buoys-data","dir":"Articles","previous_headings":"","what":"Argo buoys data","title":"rnoaa introduction","text":"suite functions Argo data, egs:","code":"# Spatial search - by bounding box argo_search(\"coord\", box = c(-40, 35, 3, 2))  # Time based search argo_search(\"coord\", yearmin = 2007, yearmax = 2009)  # Data quality based search argo_search(\"coord\", pres_qc = \"A\", temp_qc = \"A\")  # Search on partial float id number argo_qwmo(qwmo = 49)  # Get data argo(dac = \"meds\", id = 4900881, cycle = 127, dtype = \"D\")"},{"path":"https://docs.ropensci.org/rnoaa/articles/rnoaa.html","id":"co-ops-data","dir":"Articles","previous_headings":"","what":"CO-OPS data","title":"rnoaa introduction","text":"Get daily mean water level data Fairport, OH (9063053)","code":"coops_search(station_name = 9063053, begin_date = 20150927, end_date = 20150928,              product = \"daily_mean\", datum = \"stnd\", time_zone = \"lst\") #> $metadata #> $metadata$id #> [1] \"9063053\" #>  #> $metadata$name #> [1] \"Fairport\" #>  #> $metadata$lat #> [1] \"41.7597\" #>  #> $metadata$lon #> [1] \"-81.2811\" #>  #>  #> $data #>            t       v   f #> 1 2015-09-27 174.430 0,0 #> 2 2015-09-28 174.422 0,0"},{"path":"https://docs.ropensci.org/rnoaa/articles/rnoaa.html","id":"additional-vignettes","dir":"Articles","previous_headings":"","what":"Additional vignettes","title":"rnoaa introduction","text":"additional vignettes see https://docs.ropensci.org/rnoaa/","code":""},{"path":"https://docs.ropensci.org/rnoaa/articles/seaice_vignette.html","id":"look-at-data-for-a-series-of-years-for-feb-south-pole","dir":"Articles","previous_headings":"","what":"Look at data for a series of years for Feb, South pole","title":"Sea ice vignette","text":"","code":"res <- sapply(seq(1986, 1990, 1), function(x)     sea_ice(x, month = 'Feb', pole = 'S')) lapply(res, head) #> [[1]] #>      long     lat order  hole piece id group #> 1 -125000 2250000     1 FALSE     1  0   0.1 #> 2 -100000 2250000     2 FALSE     1  0   0.1 #> 3 -100000 2200000     3 FALSE     1  0   0.1 #> 4 -125000 2200000     4 FALSE     1  0   0.1 #> 5 -125000 2175000     5 FALSE     1  0   0.1 #> 6 -100000 2175000     6 FALSE     1  0   0.1 #>  #> [[2]] #>      long     lat order  hole piece id group #> 1 -100000 2275000     1 FALSE     1  0   0.1 #> 2  -50000 2275000     2 FALSE     1  0   0.1 #> 3  -50000 2200000     3 FALSE     1  0   0.1 #> 4  -75000 2200000     4 FALSE     1  0   0.1 #> 5  -75000 2175000     5 FALSE     1  0   0.1 #> 6 -100000 2175000     6 FALSE     1  0   0.1 #>  #> [[3]] #>       long     lat order  hole piece id group #> 1 -2300000 3475000     1 FALSE     1  0   0.1 #> 2 -2225000 3475000     2 FALSE     1  0   0.1 #> 3 -2225000 3400000     3 FALSE     1  0   0.1 #> 4 -2250000 3400000     4 FALSE     1  0   0.1 #> 5 -2250000 3425000     5 FALSE     1  0   0.1 #> 6 -2300000 3425000     6 FALSE     1  0   0.1 #>  #> [[4]] #>      long     lat order  hole piece id group #> 1 1225000 2025000     1 FALSE     1  0   0.1 #> 2 1250000 2025000     2 FALSE     1  0   0.1 #> 3 1250000 2000000     3 FALSE     1  0   0.1 #> 4 1275000 2000000     4 FALSE     1  0   0.1 #> 5 1275000 1975000     5 FALSE     1  0   0.1 #> 6 1350000 1975000     6 FALSE     1  0   0.1 #>  #> [[5]] #>      long     lat order  hole piece id group #> 1 -150000 2250000     1 FALSE     1  0   0.1 #> 2 -125000 2250000     2 FALSE     1  0   0.1 #> 3 -125000 2225000     3 FALSE     1  0   0.1 #> 4 -150000 2225000     4 FALSE     1  0   0.1 #> 5 -150000 2250000     5 FALSE     1  0   0.1 #> 6  475000 2375000     1 FALSE     1  1   1.1"},{"path":"https://docs.ropensci.org/rnoaa/articles/seaice_vignette.html","id":"map-a-single-yearmonthpole-combo","dir":"Articles","previous_headings":"","what":"Map a single year/month/pole combo","title":"Sea ice vignette","text":"plot chunk seaice1","code":"ggplot(res[[1]], aes(long, lat, group=group)) +     geom_polygon(fill=\"steelblue\") +     theme_ice()"},{"path":"https://docs.ropensci.org/rnoaa/articles/seaice_vignette.html","id":"map-all-years-for-april-only-for-north-pole","dir":"Articles","previous_headings":"","what":"Map all years for April only for North pole","title":"Sea ice vignette","text":"plot chunk seaice2","code":"dat <- sea_ice(year = 1985:1990, month = 'Apr', pole = 'N') df <- bind_rows(dat, .id = \"x\") ggplot(df, aes(long, lat, group = group)) +   geom_polygon(fill = \"steelblue\") +   theme_ice() +   facet_wrap(~ x)"},{"path":"https://docs.ropensci.org/rnoaa/articles/swdi_vignette.html","id":"load-rnoaa","dir":"Articles","previous_headings":"","what":"Load rnoaa","title":"SWDI vignette","text":"","code":"library('rnoaa')"},{"path":"https://docs.ropensci.org/rnoaa/articles/swdi_vignette.html","id":"search-for-nx3tvs-data-from-5-may-2006-to-6-may-2006","dir":"Articles","previous_headings":"","what":"Search for nx3tvs data from 5 May 2006 to 6 May 2006","title":"SWDI vignette","text":"","code":"swdi(dataset='nx3tvs', startdate='20060505', enddate='20060506') #> $meta #> $meta$totalCount #> [1] 25 #>  #> $meta$totalTimeInSeconds #> [1] 0.015 #>  #>  #> $data #>                   ztime wsr_id cell_id cell_type range azimuth max_shear mxdv #> 1  2006-05-05T00:05:50Z   KBMX      Q0       TVS     7     217       403  116 #> 2  2006-05-05T00:10:02Z   KBMX      Q0       TVS     5     208       421  120 #> 3  2006-05-05T00:12:34Z   KSJT      P2       TVS    49     106        17   52 #> 4  2006-05-05T00:17:31Z   KSJT      B4       TVS    40     297        25   62 #> 5  2006-05-05T00:29:13Z   KMAF      H4       TVS    53     333        34  111 #> 6  2006-05-05T00:31:25Z   KLBB      N0       TVS    51     241        24   78 #> 7  2006-05-05T00:33:25Z   KMAF      H4       TVS    52     334        46  145 #> 8  2006-05-05T00:37:37Z   KMAF      H4       TVS    50     334        34  107 #> 9  2006-05-05T00:41:51Z   KMAF      H4       TVS    51     335        29   91 #> 10 2006-05-05T00:44:33Z   KLBB      N0       TVS    46     245        35  100 #> 11 2006-05-05T00:46:03Z   KMAF      H4       TVS    49     335        41  127 #> 12 2006-05-05T00:48:55Z   KLBB      N0       TVS    44     246        44  121 #> 13 2006-05-05T00:50:16Z   KMAF      H4       TVS    49     337        33   98 #> 14 2006-05-05T00:54:29Z   KMAF      H4       TVS    47     337        42  126 #> 15 2006-05-05T00:57:42Z   KLBB      N0       TVS    41     251        46  117 #> 16 2006-05-05T00:58:41Z   KMAF      H4       TVS    46     340        29   85 #> 17 2006-05-05T01:02:04Z   KLBB      N0       TVS    39     251        42  102 #> 18 2006-05-05T01:02:53Z   KMAF      H4       TVS    46     339        35  101 #> 19 2006-05-05T01:02:53Z   KMAF      H4       TVS    50     338        27   84 #> 20 2006-05-05T01:06:26Z   KLBB      N0       TVS    36     251        31   70 #> 21 2006-05-05T01:07:06Z   KMAF      F5       TVS    45     342        44  120 #> 22 2006-05-05T01:10:48Z   KLBB      N0       TVS    36     256        37   83 #> 23 2006-05-05T01:11:18Z   KMAF      F5       TVS    45     343        39  108 #> 24 2006-05-05T01:15:30Z   KMAF      F5       TVS    44     344        30   78 #> 25 2006-05-05T01:15:30Z   KMAF      H4       TVS    49     341        26   81 #>  #> $shape #>                                         shape #> 1  POINT (-86.8535716274277 33.0786326913943) #> 2  POINT (-86.8165772540846 33.0982820681588) #> 3  POINT (-99.5771091971025 31.1421609654838) #> 4   POINT (-101.188161700093 31.672392833416) #> 5  POINT (-102.664426480293 32.7306917937698) #> 6   POINT (-102.70047613441 33.2380072329615) #> 7    POINT (-102.6393683028 32.7226656893341) #> 8  POINT (-102.621904684258 32.6927081076156) #> 9   POINT (-102.614794815627 32.714139844846) #> 10 POINT (-102.643380529494 33.3266446067682) #> 11 POINT (-102.597961935071 32.6839260102062) #> 12 POINT (-102.613894688178 33.3526192273658) #> 13 POINT (-102.567153417051 32.6956373348052) #> 14  POINT (-102.551596970251 32.664939580306) #> 15 POINT (-102.586119971014 33.4287323151248) #> 16 POINT (-102.499638479193 32.6644438090742) #> 17   POINT (-102.5485490063 33.4398330734778) #> 18  POINT (-102.51446954228 32.6597119240996) #> 19 POINT (-102.559031583693 32.7166090376869) #> 20 POINT (-102.492174522228 33.4564626989719) #> 21 POINT (-102.463540844324 32.6573739036181) #> 22 POINT (-102.510349454162 33.5066366303981) #> 23 POINT (-102.448763863447 32.6613484943994) #> 24   POINT (-102.42842159557 32.649061124799) #> 25 POINT (-102.504158884526 32.7162751126854) #>  #> attr(,\"class\") #> [1] \"swdi\""},{"path":"https://docs.ropensci.org/rnoaa/articles/swdi_vignette.html","id":"use-an-id","dir":"Articles","previous_headings":"","what":"Use an id","title":"SWDI vignette","text":"","code":"out <- swdi(dataset='warn', startdate='20060506', enddate='20060507', id=533623) list(out$meta, head(out$data), head(out$shape)) #> [[1]] #> [[1]]$totalCount #> [1] 25 #>  #> [[1]]$totalTimeInSeconds #> [1] 0.009 #>  #>  #> [[2]] #>            ztime_start            ztime_end     id         warningtype issuewfo #> 1 2006-05-05T22:53:00Z 2006-05-06T00:00:00Z 397428 SEVERE THUNDERSTORM     KLCH #> 2 2006-05-05T22:55:00Z 2006-05-06T00:00:00Z 397429 SEVERE THUNDERSTORM     KLUB #> 3 2006-05-05T22:55:00Z 2006-05-06T00:00:00Z 397430 SEVERE THUNDERSTORM     KLUB #> 4 2006-05-05T22:57:00Z 2006-05-06T00:00:00Z 397431 SEVERE THUNDERSTORM     KMAF #> 5 2006-05-05T23:03:00Z 2006-05-06T00:00:00Z 397434 SEVERE THUNDERSTORM     KMAF #> 6 2006-05-05T23:14:00Z 2006-05-06T00:15:00Z 397437 SEVERE THUNDERSTORM     KLUB #>   messageid #> 1    052252 #> 2    052256 #> 3    052256 #> 4    052258 #> 5    052305 #> 6    052315 #>  #> [[3]] #>                                                                                                                                                          shape #> 1                                                                             POLYGON ((-93.27 30.38, -93.29 30.18, -93.02 30.18, -93.04 30.37, -93.27 30.38)) #> 2                                                                        POLYGON ((-101.93 34.74, -101.96 34.35, -101.48 34.42, -101.49 34.74, -101.93 34.74)) #> 3                POLYGON ((-100.36 33.03, -99.99 33.3, -99.99 33.39, -100.28 33.39, -100.5 33.18, -100.51 33.02, -100.45 32.97, -100.37 33.03, -100.36 33.03)) #> 4                                            POLYGON ((-102.8 30.74, -102.78 30.57, -102.15 30.61, -102.15 30.66, -101.92 30.68, -102.07 30.83, -102.8 30.74)) #> 5                                                                        POLYGON ((-103.02 32.94, -103.03 32.66, -102.21 32.53, -102.22 32.95, -103.02 32.94)) #> 6 POLYGON ((-101.6 33.32, -101.57 33.31, -101.57 33.51, -101.65 33.51, -101.66 33.5, -101.75 33.5, -101.77 33.49, -101.84 33.49, -101.84 33.32, -101.6 33.32))"},{"path":"https://docs.ropensci.org/rnoaa/articles/swdi_vignette.html","id":"get-all-plsr-within-the-bounding-box--9130-9031","dir":"Articles","previous_headings":"","what":"Get all ‘plsr’ within the bounding box (-91,30,-90,31)","title":"SWDI vignette","text":"","code":"swdi(dataset='plsr', startdate='20060505', enddate='20060510', bbox=c(-91,30,-90,31)) #> $meta #> $meta$totalCount #> [1] 5 #>  #> $meta$totalTimeInSeconds #> [1] 0 #>  #>  #> $data #>                  ztime     id        event magnitude            city     county #> 1 2006-05-09T02:20:00Z 427540         HAIL         1    5 E KENTWOOD TANGIPAHOA #> 2 2006-05-09T02:40:00Z 427536         HAIL         1    MOUNT HERMAN WASHINGTON #> 3 2006-05-09T02:40:00Z 427537 TSTM WND DMG     -9999    MOUNT HERMAN WASHINGTON #> 4 2006-05-09T03:00:00Z 427199         HAIL         0     FRANKLINTON WASHINGTON #> 5 2006-05-09T03:17:00Z 427200      TORNADO     -9999 5 S FRANKLINTON WASHINGTON #>   state          source #> 1    LA TRAINED SPOTTER #> 2    LA TRAINED SPOTTER #> 3    LA TRAINED SPOTTER #> 4    LA   AMATEUR RADIO #> 5    LA LAW ENFORCEMENT #>  #> $shape #>                  shape #> 1 POINT (-90.43 30.93) #> 2  POINT (-90.3 30.96) #> 3  POINT (-90.3 30.96) #> 4 POINT (-90.14 30.85) #> 5 POINT (-90.14 30.78) #>  #> attr(,\"class\") #> [1] \"swdi\""},{"path":"https://docs.ropensci.org/rnoaa/articles/swdi_vignette.html","id":"get-all-nx3tvs-within-the-tile--102-132-6--102-1532-55-102-2532-65","dir":"Articles","previous_headings":"","what":"Get all ‘nx3tvs’ within the tile -102.1/32.6 (-102.15,32.55,-102.25,32.65)","title":"SWDI vignette","text":"","code":"swdi(dataset='nx3tvs', startdate='20060506', enddate='20060507', tile=c(-102.12,32.62)) #> $meta #> $meta$totalCount #> [1] 5 #>  #> $meta$totalTimeInSeconds #> [1] 0 #>  #>  #> $data #>                  ztime wsr_id cell_id cell_type range azimuth max_shear mxdv #> 1 2006-05-06T00:41:29Z   KMAF      D9       TVS    37       6        39   85 #> 2 2006-05-06T03:56:18Z   KMAF      N4       TVS    39       3        30   73 #> 3 2006-05-06T03:56:18Z   KMAF      N4       TVS    42       4        20   52 #> 4 2006-05-06T04:00:30Z   KMAF      N4       TVS    38       5        35   86 #> 5 2006-05-06T04:04:44Z   KMAF      N4       TVS    41       8        24   62 #>  #> $shape #>                                        shape #> 1 POINT (-102.112726356403 32.5574494581267) #> 2  POINT (-102.14873079873 32.5933553250156) #> 3 POINT (-102.131167022161 32.6426287452898) #> 4 POINT (-102.123671677514 32.5751241756203) #> 5 POINT (-102.076389686189 32.6209390786829) #>  #> attr(,\"class\") #> [1] \"swdi\""},{"path":"https://docs.ropensci.org/rnoaa/articles/swdi_vignette.html","id":"counts","dir":"Articles","previous_headings":"","what":"Counts","title":"SWDI vignette","text":"Notes: stat=‘count’ return metadata, nothing data shape slots stat=‘tilesum:…’ returns counts data slot date tile, shape data Get number ‘nx3tvs’ within 15 miles latitude = 32.7 longitude = -102.0 Get daily count nx3tvs features .1 degree grid centered latitude = 32.7 longitude = -102.0","code":"swdi(dataset='nx3tvs', startdate='20060505', enddate='20090516', stat='tilesum:-102.0,32.7') #> $meta #> $meta$totalCount #> [1] 5 #>  #> $meta$totalTimeInSeconds #> [1] 0 #>  #>  #> $data #>          day centerlat centerlon fcount #> 1 2007-03-29      32.7      -102      2 #> 2 2007-09-07      32.7      -102      1 #> 3 2008-05-27      32.7      -102      4 #> 4 2008-06-20      32.7      -102      2 #> 5 2009-04-11      32.7      -102      1 #>  #> $shape #>                                                                                   shape #> 1 POLYGON ((-102.05 32.65, -102.05 32.75, -101.95 32.75, -101.95 32.65, -102.05 32.65)) #> 2 POLYGON ((-102.05 32.65, -102.05 32.75, -101.95 32.75, -101.95 32.65, -102.05 32.65)) #> 3 POLYGON ((-102.05 32.65, -102.05 32.75, -101.95 32.75, -101.95 32.65, -102.05 32.65)) #> 4 POLYGON ((-102.05 32.65, -102.05 32.75, -101.95 32.75, -101.95 32.65, -102.05 32.65)) #> 5 POLYGON ((-102.05 32.65, -102.05 32.75, -101.95 32.75, -101.95 32.65, -102.05 32.65)) #>  #> attr(,\"class\") #> [1] \"swdi\""},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/articles/swdi_vignette.html","id":"csv-format","dir":"Articles","previous_headings":"Get data in different formats","what":"CSV format","title":"SWDI vignette","text":"","code":"head(swdi(dataset='nx3tvs', startdate='20060505', enddate='20060506', format='csv')$data) #>                  ztime wsr_id cell_id cell_type range azimuth max_shear mxdv #> 1 2006-05-05T00:05:50Z   KBMX      Q0       TVS     7     217       403  116 #> 2 2006-05-05T00:10:02Z   KBMX      Q0       TVS     5     208       421  120 #> 3 2006-05-05T00:12:34Z   KSJT      P2       TVS    49     106        17   52 #> 4 2006-05-05T00:17:31Z   KSJT      B4       TVS    40     297        25   62 #> 5 2006-05-05T00:29:13Z   KMAF      H4       TVS    53     333        34  111 #> 6 2006-05-05T00:31:25Z   KLBB      N0       TVS    51     241        24   78 #>      lat      lon #> 1 33.079  -86.854 #> 2 33.098  -86.817 #> 3 31.142  -99.577 #> 4 31.672 -101.188 #> 5 32.731 -102.664 #> 6 33.238 -102.700"},{"path":"https://docs.ropensci.org/rnoaa/articles/swdi_vignette.html","id":"shp-format","dir":"Articles","previous_headings":"Get data in different formats","what":"SHP format","title":"SWDI vignette","text":"","code":"swdi(dataset='nx3tvs', startdate='20060505', enddate='20060506', format='shp', filepath='myfile') #> shp file downloaded to myfile.zip"},{"path":"https://docs.ropensci.org/rnoaa/articles/swdi_vignette.html","id":"kmz-format","dir":"Articles","previous_headings":"Get data in different formats","what":"KMZ format","title":"SWDI vignette","text":"","code":"swdi(dataset='nx3tvs', startdate='20060505', enddate='20060506', format='kmz', radius=15, filepath='myfile.kmz') #> kmz file downloaded to myfile.kmz"},{"path":"https://docs.ropensci.org/rnoaa/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Scott Chamberlain. Author. Daniel Hocking. Author, maintainer. Brooke Anderson. Contributor. Maëlle Salmon. Contributor. Adam Erickson. Contributor. Nicholas Potter. Contributor. Joseph Stachelek. Contributor. Alex Simmons. Contributor. Karthik Ram. Contributor. Hart Edmund. Contributor. . Funder.            https://ropensci.org","code":""},{"path":"https://docs.ropensci.org/rnoaa/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Chamberlain S, Hocking D (2024). rnoaa: 'NOAA' Weather Data R. R package version 1.4.0,  https://github.com/ropensci/rnoaa (devel), https://docs.ropensci.org/rnoaa/ (docs).","code":"@Manual{,   title = {rnoaa: 'NOAA' Weather Data from R},   author = {Scott Chamberlain and Daniel Hocking},   year = {2024},   note = {R package version 1.4.0,  https://github.com/ropensci/rnoaa (devel)},   url = {https://docs.ropensci.org/rnoaa/ (docs)}, }"},{"path":"https://docs.ropensci.org/rnoaa/index.html","id":"rnoaa","dir":"","previous_headings":"","what":"NOAA Weather Data from R","title":"NOAA Weather Data from R","text":"rnoaa R interface many NOAA data sources. don’t cover , include many commonly used sources, add always adding new sources. focus easy use interfaces getting NOAA data, giving back data easy use formats downstream. currently don’t much way plots analysis. get started see: https://docs.ropensci.org/rnoaa/articles/rnoaa.html","code":""},{"path":"https://docs.ropensci.org/rnoaa/index.html","id":"notice-package-to-be-archived","dir":"","previous_headings":"","what":"NOTICE: PACKAGE TO BE ARCHIVED","title":"NOAA Weather Data from R","text":"NOAA changed base URL API reorganized structure endpoints data API. current rnoaa package still functional NOAA API v2 data available API end approximately 2022-09-15. new NOAA weather package planned replace rnoaa functionality possible. point rnoaa package archived.","code":""},{"path":"https://docs.ropensci.org/rnoaa/index.html","id":"data-sources-in-rnoaa","dir":"","previous_headings":"","what":"Data sources in rnoaa","title":"NOAA Weather Data from R","text":"using NOAA API version 2 Docs NCDC API https://www.ncdc.noaa.gov/cdo-web/webservices/v2 GHCN Daily data available http://www.ncdc.noaa.gov/ghcn-daily-description via FTP HTTP Severe weather data docs https://www.ncdc.noaa.gov/swdiws/ Sea ice data (ftp://sidads.colorado.edu/DATASETS/NOAA/G02135/shapefiles) NOAA buoy data (https://www.ndbc.noaa.gov/) Now package rerddap (https://github.com/ropensci/rerddap) Tornadoes! Data NOAA Storm Prediction Center (https://www.spc.noaa.gov/gis/svrgis/) HOMR - Historical Observing Metadata Repository (http://www.ncdc.noaa.gov/homr/api) GHCND FTP data (ftp://ftp.ncdc.noaa.gov/pub/data/noaa) - NOAA NCDC API /(sure really) data, FTP allows get data quickly Extended Reconstructed Sea Surface Temperature (ERSST) data (https://www.ncdc.noaa.gov/data-access/marineocean-data/extended-reconstructed-sea-surface-temperature-ersst-v4) NOAA CO-OPS - tides currents data (https://tidesandcurrents.noaa.gov/) NOAA Climate Prediction Center (CPC) (http://www.cpc.ncep.noaa.gov/) Africa Rainfall Climatology version 2 (ftp://ftp.cpc.ncep.noaa.gov/fews/fewsdata/africa/arc2/ARC2_readme.txt) Blended Sea Winds (https://www.ncdc.noaa.gov/data-access/marineocean-data/blended-global/blended-sea-winds) Local Climatological Data (https://www.ncdc.noaa.gov/cdo-web/datatools/lcd) Storm Events Database (https://www.ncdc.noaa.gov/stormevents/)","code":""},{"path":"https://docs.ropensci.org/rnoaa/index.html","id":"helpgetting-started","dir":"","previous_headings":"","what":"Help/Getting Started","title":"NOAA Weather Data from R","text":"Documentation https://docs.ropensci.org/rnoaa/, many vignettes package , available R session, CRAN (https://cran.r-project.org/package=rnoaa). tutorials: Getting started - start NOAA Buoy vignette NOAA National Climatic Data Center (NCDC) vignette (examples) NOAA NCDC attributes vignette NOAA NCDC workflow vignette Sea ice vignette Severe Weather Data Inventory (SWDI) vignette Historical Observing Metadata Repository (HOMR) vignette","code":""},{"path":"https://docs.ropensci.org/rnoaa/index.html","id":"netcdf-data","dir":"","previous_headings":"","what":"netcdf data","title":"NOAA Weather Data from R","text":"functions use netcdf files, including: ersst buoy bsw argo ’ll need ncdf4 package functions, . ncdf4 Suggests package, meaning need ncdf4 using functions listed . ’ll get informative error telling install ncdf4 don’t try use functions. Installation ncdf4 straightforward system. See https://cran.r-project.org/package=ncdf4","code":""},{"path":"https://docs.ropensci.org/rnoaa/index.html","id":"noaa-ncdc-datasets","dir":"","previous_headings":"","what":"NOAA NCDC Datasets","title":"NOAA Weather Data from R","text":"many NOAA NCDC datasets. data sources work, except NEXRAD2 NEXRAD3, unknown reason. relates ncdc_*() functions . NOAA NCDC Attributes NOAA dataset different set attributes can potentially get back search. See https://www.ncei.noaa.gov/access detailed info dataset. provide information attributes package; see vignette attributes (https://docs.ropensci.org/rnoaa/articles/ncdc_attributes.html) find ","code":"#> table updated on 2023-04-22"},{"path":"https://docs.ropensci.org/rnoaa/index.html","id":"contributors","dir":"","previous_headings":"","what":"Contributors","title":"NOAA Weather Data from R","text":"Scott Chamberlain (https://github.com/sckott) Daniel Hocking (https://github.com/djhocking) Brooke Anderson (https://github.com/geanders) Maëlle Salmon (https://github.com/maelle) Adam Erickson (https://github.com/adam-erickson) Nicholas Potter (https://github.com/potterzot) Joseph Stachelek (https://github.com/jsta) Daniel Hocking (https://github.com/djhocking)","code":""},{"path":"https://docs.ropensci.org/rnoaa/index.html","id":"meta","dir":"","previous_headings":"","what":"Meta","title":"NOAA Weather Data from R","text":"Please report issues bugs: https://github.com/ropensci/rnoaa/issues License: MIT Get citation information rnoaa R citation(package = 'rnoaa') Please note package released Contributor Code Conduct (https://ropensci.org/code--conduct/). contributing project, agree abide terms.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/reference/arc2.html","id":null,"dir":"Reference","previous_headings":"","what":"Arc2 - Africa Rainfall Climatology version 2 — arc2","title":"Arc2 - Africa Rainfall Climatology version 2 — arc2","text":"Arc2 - Africa Rainfall Climatology version 2","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/arc2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arc2 - Africa Rainfall Climatology version 2 — arc2","text":"","code":"arc2(date, box = NULL, ...)"},{"path":"https://docs.ropensci.org/rnoaa/reference/arc2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arc2 - Africa Rainfall Climatology version 2 — arc2","text":"date (character/date) one dates form YYYY-MM-DD box (numeric) vector length 4, form xmin, ymin, xmax, ymax. optional. given, spatial filtering done. given, use dplyr::filter() combined set dates, split output tibbles date ... curl options passed crul::verb-GET","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/arc2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arc2 - Africa Rainfall Climatology version 2 — arc2","text":"list tibbles columns: date: date (YYYY-MM-DD) lon: longitude lat: latitude precip: precipitation (mm)","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/arc2.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Arc2 - Africa Rainfall Climatology version 2 — arc2","text":"See arc2_cache managing cached files","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/arc2.html","id":"box-parameter","dir":"Reference","previous_headings":"","what":"box parameter","title":"Arc2 - Africa Rainfall Climatology version 2 — arc2","text":"box parameter filters arc2 data bounding box supply. function cropping bounding box dplyr::filter. can filtering want supply box use whatever tools want filter data lat/lon, date, precip values.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/arc2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Arc2 - Africa Rainfall Climatology version 2 — arc2","text":"docs: https://ftp.cpc.ncep.noaa.gov/fews/fewsdata/africa/arc2/ARC2_readme.txt","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/arc2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arc2 - Africa Rainfall Climatology version 2 — arc2","text":"","code":"if (FALSE) { x = arc2(date = \"1983-01-01\") arc2(date = \"2017-02-14\")  # many dates arc2(date = c(\"2019-05-27\", \"2019-05-28\")) arc2(seq(as.Date(\"2019-04-21\"), by = \"day\", length.out = 5)) ## combine outputs  x <- arc2(seq(as.Date(\"2019-05-20\"), as.Date(\"2019-05-25\"), \"days\")) dplyr::bind_rows(x)  # bounding box filter box <- c(xmin = 9, ymin = 4, xmax = 10, ymax = 5) arc2(date = \"2017-02-14\", box = box) arc2(date = c(\"2019-05-27\", \"2019-05-28\"), box = box) arc2(seq(as.Date(\"2019-05-20\"), as.Date(\"2019-05-25\"), \"days\"), box = box) }"},{"path":"https://docs.ropensci.org/rnoaa/reference/autoplot_meteo_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"autoplot method for meteo_coverage objects — autoplot_meteo_coverage","title":"autoplot method for meteo_coverage objects — autoplot_meteo_coverage","text":"autoplot method meteo_coverage objects","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/autoplot_meteo_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"autoplot method for meteo_coverage objects — autoplot_meteo_coverage","text":"","code":"autoplot_meteo_coverage(meteo_object, old_style = FALSE)"},{"path":"https://docs.ropensci.org/rnoaa/reference/autoplot_meteo_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"autoplot method for meteo_coverage objects — autoplot_meteo_coverage","text":"meteo_object object returned meteo_coverage() old_style (logical) create old style plots, faster, plot gaps indicate missing data","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/autoplot_meteo_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"autoplot method for meteo_coverage objects — autoplot_meteo_coverage","text":"ggplot2 plot","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/autoplot_meteo_coverage.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"autoplot method for meteo_coverage objects — autoplot_meteo_coverage","text":"see meteo_coverage() examples.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/bsw.html","id":null,"dir":"Reference","previous_headings":"","what":"Blended sea winds (BSW) — bsw","title":"Blended sea winds (BSW) — bsw","text":"Blended Sea Winds dataset contains globally gridded, high-resolution ocean surface vector winds wind stresses global 0.25° grid, multiple time resolutions six-hourly, daily, monthly, 11-year (1995–2005) climatological monthlies.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/bsw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Blended sea winds (BSW) — bsw","text":"","code":"bsw(date = NULL, uv_stress = \"uv\", resolution = \"6hrly\", ...)"},{"path":"https://docs.ropensci.org/rnoaa/reference/bsw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Blended sea winds (BSW) — bsw","text":"date (date/character) date, form YYYY-MM-DD resolution 6hrly daily, form YYYY-MM resolution monthly. resolution=clm can left NULL. given, must range 1987-07-09 today-1 (yesterday) uv_stress (character) one uv stresss, sure mean exactly yet. Default: uv resolution (character) temporal resolution. one 6hrly, clm, daily, monthly. See Details. ... curl options passed crul::verb-GET","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/bsw.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Blended sea winds (BSW) — bsw","text":"object class ncdf4","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/bsw.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Blended sea winds (BSW) — bsw","text":"Products available July 9th, 1987 - present. Uses ncdf4 hood read NetCDF files","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/bsw.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Blended sea winds (BSW) — bsw","text":"See bsw_cache managing cached files handle netcdf files now, avoiding ieee files, see https://www.cpc.ncep.noaa.gov/products/wesley/wgrib2/ieee.html","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/bsw.html","id":"citing-noaa-and-bsw-data","dir":"Reference","previous_headings":"","what":"Citing NOAA and BSW data","title":"Blended sea winds (BSW) — bsw","text":"Message NOAA: \"also ask acknowledge us use data help us justify continued service. may done  including text : wind data acquired NOAA's National Climatic Data Center, via website also  appreciate receiving copy relevant publication.\"","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/bsw.html","id":"temporal-resolution","dir":"Reference","previous_headings":"","what":"Temporal resolution","title":"Blended sea winds (BSW) — bsw","text":"6hrly: 6-hourly, 4 global snapshots (u,v) UTC 00, 06, 12 18Z clm: climatological monthlies; also provided scalar mean (u,v,w) daily: averages 6hrly time points, thus center time 09Z; also provided scalar mean, (u,v,w) monthly: averages daily data; also provided scalar mean (u,v,w)","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/bsw.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Blended sea winds (BSW) — bsw","text":"https://www.ncdc.noaa.gov/data-access/marineocean-data/blended-global/blended-sea-winds","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/bsw.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Blended sea winds (BSW) — bsw","text":"","code":"if (FALSE) { # 6hrly data ## uv x <- bsw(date = \"2017-10-01\") ## stress y <- bsw(date = \"2011-08-01\", uv_stress = \"stress\")  # daily z <- bsw(date = \"2017-10-01\", resolution = \"daily\")  # monthly w <- bsw(date = \"2011-08\", resolution = \"monthly\")  # clm # x <- bsw(resolution = \"clm\") }"},{"path":"https://docs.ropensci.org/rnoaa/reference/buoy.html","id":null,"dir":"Reference","previous_headings":"","what":"Get NOAA buoy data from the National Buoy Data Center — buoy","title":"Get NOAA buoy data from the National Buoy Data Center — buoy","text":"Get NOAA buoy data National Buoy Data Center","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/buoy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get NOAA buoy data from the National Buoy Data Center — buoy","text":"","code":"buoy(dataset, buoyid, year = NULL, datatype = NULL, ...)  buoys(dataset)  buoy_stations(refresh = FALSE, ...)"},{"path":"https://docs.ropensci.org/rnoaa/reference/buoy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get NOAA buoy data from the National Buoy Data Center — buoy","text":"dataset (character) Dataset name query. See Details. Required buoyid Buoy ID, can numeric/integer/character. Required year (integer) Year data collection. Optional. Note special value 9999 , found, contains date data. datatype (character) Data type, one 'c', 'cc', 'p', 'o'. Optional ... Curl options passed crul::verb-GET Optional. number different HTTP requests made internally, pass request get netcdf file internal function get_ncdf_file() refresh (logical) Whether use cached data (FALSE) get new data (FALSE). Default: FALSE","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/buoy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get NOAA buoy data from the National Buoy Data Center — buoy","text":"netcdf data lat/lon variables, parse tidy data.frame. , give back ncdf4 object user parse (case data.frame empty).","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/buoy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get NOAA buoy data from the National Buoy Data Center — buoy","text":"Functions: buoy_stations - Get buoy stations. cached version dataset available package. Beware, takes long time run refresh = TRUE buoys - Get available buoys given dataset name buoy - Get data given combination dataset name, buoy ID, year, datatype Options dataset parameter. One : adcp - Acoustic Doppler Current Profiler data adcp2 - MMS Acoustic Doppler Current Profiler data cwind - Continuous Winds data dart - Deep-ocean Assessment Reporting Tsunamis data mmbcur - Marsh-McBirney Current Measurements data ocean - Oceanographic data pwind - Peak Winds data stdmet - Standard Meteorological data swden - Spectral Wave Density data Spectral Wave Direction data wlevel - Water Level data","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/buoy.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get NOAA buoy data from the National Buoy Data Center — buoy","text":"http://www.ndbc.noaa.gov/, http://dods.ndbc.noaa.gov/","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/buoy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get NOAA buoy data from the National Buoy Data Center — buoy","text":"","code":"if (FALSE) { if (crul::ok(\"https://dods.ndbc.noaa.gov/thredds\", timeout_ms = 1000)) {  # Get buoy station information x <- buoy_stations() # refresh stations as needed, takes a while to run # you shouldn't need to update very often # x <- buoy_stations(refresh = TRUE) if (interactive() && requireNamespace(\"leaflet\")){ library(\"leaflet\") z <- leaflet(data = na.omit(x)) z <- leaflet::addTiles(z) leaflet::addCircles(z, ~lon, ~lat, opacity = 0.5) }  # year=9999 to get most current data - not always available buoy(dataset = \"swden\", buoyid = 46012, year = 9999)  # Get available buoys buoys(dataset = 'cwind')  # Get data for a buoy ## if no year or datatype specified, we get the first file buoy(dataset = 'cwind', buoyid = 46085)  # Including specific year buoy(dataset = 'cwind', buoyid = 41001, year = 1999)  # Including specific year and datatype buoy(dataset = 'cwind', buoyid = 45005, year = 2008, datatype = \"c\") buoy(dataset = 'cwind', buoyid = 41001, year = 1997, datatype = \"c\")  # Other datasets buoy(dataset = 'ocean', buoyid = 41029)  # curl debugging buoy(dataset = 'cwind', buoyid = 46085, verbose = TRUE)  # some buoy ids are character, case doesn't matter, we'll account for it buoy(dataset = \"stdmet\", buoyid = \"VCAF1\") buoy(dataset = \"stdmet\", buoyid = \"wplf1\") buoy(dataset = \"dart\", buoyid = \"dartu\")  } }"},{"path":"https://docs.ropensci.org/rnoaa/reference/check_response.html","id":null,"dir":"Reference","previous_headings":"","what":"Check response from NOAA, including status codes, server error messages, mime-type, etc. — check_response","title":"Check response from NOAA, including status codes, server error messages, mime-type, etc. — check_response","text":"Check response NOAA, including status codes, server error messages, mime-type, etc.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/check_response.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check response from NOAA, including status codes, server error messages, mime-type, etc. — check_response","text":"","code":"check_response(x)"},{"path":"https://docs.ropensci.org/rnoaa/reference/check_response_swdi.html","id":null,"dir":"Reference","previous_headings":"","what":"Check response from NOAA SWDI service, including status codes, server error messages,\nmime-type, etc. — check_response_swdi","title":"Check response from NOAA SWDI service, including status codes, server error messages,\nmime-type, etc. — check_response_swdi","text":"Check response NOAA SWDI service, including status codes, server error messages, mime-type, etc.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/check_response_swdi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check response from NOAA SWDI service, including status codes, server error messages,\nmime-type, etc. — check_response_swdi","text":"","code":"check_response_swdi(x, format)"},{"path":"https://docs.ropensci.org/rnoaa/reference/coops.html","id":null,"dir":"Reference","previous_headings":"","what":"Get NOAA co-ops data — coops","title":"Get NOAA co-ops data — coops","text":"Get NOAA co-ops data","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/coops.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get NOAA co-ops data — coops","text":"","code":"coops_search(   begin_date = NULL,   end_date = NULL,   station_name = NULL,   product,   datum = NULL,   units = \"metric\",   time_zone = \"gmt\",   application = \"rnoaa\",   ... )"},{"path":"https://docs.ropensci.org/rnoaa/reference/coops.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get NOAA co-ops data — coops","text":"begin_date (numeric) Date yyyymmdd format. Required end_date (numeric) Date yyyymmdd format. Required station_name (numeric) station name. Required product (character) Specify data type. See Details. Required datum (character) See Details. Required water level products. units (character) Specify metric english (imperial) units, one 'metric', 'english'. time_zone (character) Time zone, one 'gmt', 'lst', 'lst_ldt'. GMT, convert time stamps GMT. LST, look time zone station lat/lon values, assign time zone. product=\"predictions\" adjust times . application (character) called within external package, set name organization. Optional ... Curl options passed crul::verb-GET Optional","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/coops.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get NOAA co-ops data — coops","text":"List, length one two. metadata list metadata slots id, name, lat, lon data data.frame data","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/coops.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get NOAA co-ops data — coops","text":"Options product paramter. One : water_level - Preliminary verified water levels, depending availability air_temperature - Air temperature measured station water_temperature - Water temperature measured station wind - Wind speed, direction, gusts measured station air_pressure - Barometric pressure measured station air_gap - Air Gap (distance bridge water's surface) station conductivity - water's conductivity measured station visibility - Visibility station's visibility sensor. measure atmospheric clarity humidity - Relative humidity measured station salinity - Salinity specific gravity data station one_minute_water_level - One minute water level data station predictions - 6 minute predictions water level data station hourly_height - Verified hourly height water level data station high_low - Verified high/low water level data station daily_mean - Verified daily mean water level data station monthly_mean - Verified monthly mean water level data station datums - datums data stations currents - Currents data currents stations Maximum Durations Single Call: Products water_level predictions allow requests Products hourly_height high_low allow requests Products daily_mean monthly_mean allow requests Options datum parameter. One : MHHW - Mean higher high water MHW - Mean high water MTL - Mean tide level MSL - Mean sea level MLW - Mean low water MLLW - Mean lower low water NAVD - North American Vertical Datum STND - Station datum","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/coops.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get NOAA co-ops data — coops","text":"https://tidesandcurrents.noaa.gov/api/ https://tidesandcurrents.noaa.gov/map/","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/coops.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get NOAA co-ops data — coops","text":"Scott Chamberlain, Joseph Stachelek, Tom Philippi","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/coops.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get NOAA co-ops data — coops","text":"","code":"if (FALSE) { # Get monthly mean sea level data at Vaca Key (8723970) coops_search(station_name = 8723970, begin_date = 20120301,   end_date = 20141001, datum = \"stnd\", product = \"monthly_mean\")  # Get verified water level data at Vaca Key (8723970) coops_search(station_name = 8723970, begin_date = 20140927,   end_date = 20140928, datum = \"stnd\", product = \"water_level\")  # Get daily mean water level data at Fairport, OH (9063053) coops_search(station_name = 9063053, begin_date = 20150927,   end_date = 20150928, product = \"daily_mean\", datum = \"stnd\",   time_zone = \"lst\")  # Get air temperature at Vaca Key (8723970) coops_search(station_name = 8723970, begin_date = 20140927,   end_date = 20140928, product = \"air_temperature\")  # Get water temperature at Vaca Key (8723970) coops_search(station_name = 8723970, begin_date = 20140927,   end_date = 20140928, product = \"water_temperature\")  # Get air pressure at Vaca Key (8723970) coops_search(station_name = 8723970, begin_date = 20140927,   end_date = 20140928, product = \"air_pressure\")  # Get wind at Vaca Key (8723970) coops_search(station_name = 8723970, begin_date = 20140927,   end_date = 20140928, product = \"wind\")  # Get hourly water level height at Key West (8724580) coops_search(station_name = 8724580, begin_date = 20140927,   end_date = 20140928, product = \"hourly_height\", datum = \"stnd\")  # Get high-low water level at Key West (8724580) coops_search(station_name = 8724580, begin_date = 20140927,   end_date = 20140928, product = \"high_low\", datum = \"stnd\")  # Get currents data at Pascagoula Harbor (ps0401) coops_search(station_name = \"ps0401\", begin_date = 20151221,   end_date = 20151222, product = \"currents\")  # Get one-minute water level at Vaca Key (8723970) coops_search(station_name = 8723970, begin_date = 20140927,   end_date = 20140928, datum = \"stnd\", product = \"one_minute_water_level\")  # Get datums at Fort Myers, FL (8725520) coops_search(station_name = 8725520, product = \"datums\")  # Get water level predictions at Vaca Key (8723970) coops_search(station_name = 8723970, begin_date = 20140928,   end_date = 20140929, datum = \"stnd\", product = \"predictions\")  }"},{"path":"https://docs.ropensci.org/rnoaa/reference/cpc_prcp.html","id":null,"dir":"Reference","previous_headings":"","what":"Precipitation data from NOAA Climate Prediction Center (CPC) — cpc_prcp","title":"Precipitation data from NOAA Climate Prediction Center (CPC) — cpc_prcp","text":"Precipitation data NOAA Climate Prediction Center (CPC)","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/cpc_prcp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Precipitation data from NOAA Climate Prediction Center (CPC) — cpc_prcp","text":"","code":"cpc_prcp(date, us = FALSE, drop_undefined = FALSE, ...)"},{"path":"https://docs.ropensci.org/rnoaa/reference/cpc_prcp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Precipitation data from NOAA Climate Prediction Center (CPC) — cpc_prcp","text":"date (date/character) date YYYY-MM-DD format us (logical) US data ? default: FALSE drop_undefined (logical) drop undefined precipitation values (values precip column output data.frame). default: FALSE ... curl options passed crul::verb-GET","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/cpc_prcp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Precipitation data from NOAA Climate Prediction Center (CPC) — cpc_prcp","text":"data.frame, columns: lon - longitude (0 360) lat - latitude (-90 90) precip - precipitation (mm) (see Details information)","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/cpc_prcp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Precipitation data from NOAA Climate Prediction Center (CPC) — cpc_prcp","text":"Rainfall data world (1979-present, resolution 50 km), US (1948-present, resolution 25 km).","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/cpc_prcp.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Precipitation data from NOAA Climate Prediction Center (CPC) — cpc_prcp","text":"See cpc_cache managing cached files","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/cpc_prcp.html","id":"data-processing-in-this-function","dir":"Reference","previous_headings":"","what":"Data processing in this function","title":"Precipitation data from NOAA Climate Prediction Center (CPC) — cpc_prcp","text":"Internally multiply precipitation measurements 0.1 per CPC documentation. Values -99.0 classified \"undefined\". values can removed setting drop_undefined = TRUE cpc_prcp function call. undefined values dropped default - remember set drop_undefined = TRUE drop ; can easily e.g., subset(x, precip >= 0)","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/cpc_prcp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Precipitation data from NOAA Climate Prediction Center (CPC) — cpc_prcp","text":"https://www.cpc.ncep.noaa.gov/ https://ftp.cpc.ncep.noaa.gov/precip/CPC_UNI_PRCP https://ftp.cpc.ncep.noaa.gov/precip/CPC_UNI_PRCP/GAUGE_CONUS/DOCU/PRCP_CU_GAUGE_V1.0CONUS_0.25deg.README https://ftp.cpc.ncep.noaa.gov/precip/CPC_UNI_PRCP/GAUGE_GLB/DOCU/PRCP_CU_GAUGE_V1.0GLB_0.50deg_README.txt https://psl.noaa.gov/data/gridded/data.unified.daily.conus.html","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/cpc_prcp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Precipitation data from NOAA Climate Prediction Center (CPC) — cpc_prcp","text":"","code":"if (FALSE) { x = cpc_prcp(date = \"2017-01-15\") cpc_prcp(date = \"2015-06-05\") cpc_prcp(date = \"2017-01-15\") cpc_prcp(date = \"2005-07-09\") cpc_prcp(date = \"1979-07-19\")  # United States data only cpc_prcp(date = \"2005-07-09\", us = TRUE) cpc_prcp(date = \"2009-08-03\", us = TRUE) cpc_prcp(date = \"1998-04-23\", us = TRUE)  # drop undefined values (those given as -99.0) cpc_prcp(date = \"1998-04-23\", drop_undefined = TRUE) }"},{"path":"https://docs.ropensci.org/rnoaa/reference/ersst.html","id":null,"dir":"Reference","previous_headings":"","what":"NOAA Extended Reconstructed Sea Surface Temperature (ERSST) data — ersst","title":"NOAA Extended Reconstructed Sea Surface Temperature (ERSST) data — ersst","text":"NOAA Extended Reconstructed Sea Surface Temperature (ERSST) data","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ersst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NOAA Extended Reconstructed Sea Surface Temperature (ERSST) data — ersst","text":"","code":"ersst(year, month, overwrite = TRUE, version = \"v5\", ...)"},{"path":"https://docs.ropensci.org/rnoaa/reference/ersst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NOAA Extended Reconstructed Sea Surface Temperature (ERSST) data — ersst","text":"year (numeric) year. Must > 1853. max value whatever current year . Required month month, character numeric. single digit (e.g. 8), add zero front (e.g., 08). Required overwrite (logical) overwrite path store files , Default: TRUE version (character) ERSST version. one \"v5\" (default) \"v4\" ... Curl options passed crul::verb-GET","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ersst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NOAA Extended Reconstructed Sea Surface Temperature (ERSST) data — ersst","text":"ncdf4 object. See ncdf4 parsing output","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ersst.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"NOAA Extended Reconstructed Sea Surface Temperature (ERSST) data — ersst","text":"See ersst_cache managing cached files ersst() currently defaults use ERSST v5 - can set v4 v5 using version parameter request unsuccesful, file written disk deleted function exits. use data research please cite rnoaa (citation(\"rnoaa\")), cite NOAA ERSST (see citations link )","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ersst.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"NOAA Extended Reconstructed Sea Surface Temperature (ERSST) data — ersst","text":"https://www.ncdc.noaa.gov/data-access/marineocean-data/extended-reconstructed-sea-surface-temperature-ersst-v5","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ersst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NOAA Extended Reconstructed Sea Surface Temperature (ERSST) data — ersst","text":"","code":"if (FALSE) { # October, 2015 ersst(year = 2015, month = 10)  # May, 2015 ersst(year = 2015, month = 5) ersst(year = 2015, month = \"05\")  # February, 1890 ersst(year = 1890, month = 2)  # Process data library(\"ncdf4\") res <- ersst(year = 1890, month = 2) ## varibles names(res$var) ## get a variable ncdf4::ncvar_get(res, \"ssta\") }"},{"path":"https://docs.ropensci.org/rnoaa/reference/fipscodes.html","id":null,"dir":"Reference","previous_headings":"","what":"FIPS codes for US states. — fipscodes","title":"FIPS codes for US states. — fipscodes","text":"dataset containing FIPS codes 51 US states territories. variables follows:","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/fipscodes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"FIPS codes for US states. — fipscodes","text":"data frame 3142 rows 5 variables","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/fipscodes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FIPS codes for US states. — fipscodes","text":"state. US state name. county. County name. fips_state. Numeric value, 1 51. fips_county. Numeric value, 1 840. fips. Numeric value, 1001 56045.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/gefs-defunct.html","id":null,"dir":"Reference","previous_headings":"","what":"This function is defunct. — gefs","title":"This function is defunct. — gefs","text":"function defunct.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/gefs-defunct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function is defunct. — gefs","text":"","code":"gefs(...)"},{"path":"https://docs.ropensci.org/rnoaa/reference/gefs_dimension_values-defunct.html","id":null,"dir":"Reference","previous_headings":"","what":"This function is defunct. — gefs_dimension_values","title":"This function is defunct. — gefs_dimension_values","text":"function defunct.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/gefs_dimension_values-defunct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function is defunct. — gefs_dimension_values","text":"","code":"gefs_dimension_values(...)"},{"path":"https://docs.ropensci.org/rnoaa/reference/gefs_dimensions-defunct.html","id":null,"dir":"Reference","previous_headings":"","what":"This function is defunct. — gefs_dimensions","title":"This function is defunct. — gefs_dimensions","text":"function defunct.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/gefs_dimensions-defunct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function is defunct. — gefs_dimensions","text":"","code":"gefs_dimensions(...)"},{"path":"https://docs.ropensci.org/rnoaa/reference/gefs_ensembles-defunct.html","id":null,"dir":"Reference","previous_headings":"","what":"This function is defunct. — gefs_ensembles","title":"This function is defunct. — gefs_ensembles","text":"function defunct.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/gefs_ensembles-defunct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function is defunct. — gefs_ensembles","text":"","code":"gefs_ensembles(...)"},{"path":"https://docs.ropensci.org/rnoaa/reference/gefs_latitudes-defunct.html","id":null,"dir":"Reference","previous_headings":"","what":"This function is defunct. — gefs_latitudes","title":"This function is defunct. — gefs_latitudes","text":"function defunct.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/gefs_latitudes-defunct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function is defunct. — gefs_latitudes","text":"","code":"gefs_latitudes(...)"},{"path":"https://docs.ropensci.org/rnoaa/reference/gefs_longitudes-defunct.html","id":null,"dir":"Reference","previous_headings":"","what":"This function is defunct. — gefs_longitudes","title":"This function is defunct. — gefs_longitudes","text":"function defunct.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/gefs_longitudes-defunct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function is defunct. — gefs_longitudes","text":"","code":"gefs_longitudes(...)"},{"path":"https://docs.ropensci.org/rnoaa/reference/gefs_times-defunct.html","id":null,"dir":"Reference","previous_headings":"","what":"This function is defunct. — gefs_times","title":"This function is defunct. — gefs_times","text":"function defunct.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/gefs_times-defunct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function is defunct. — gefs_times","text":"","code":"gefs_times(...)"},{"path":"https://docs.ropensci.org/rnoaa/reference/gefs_variables-defunct.html","id":null,"dir":"Reference","previous_headings":"","what":"This function is defunct. — gefs_variables","title":"This function is defunct. — gefs_variables","text":"function defunct.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/gefs_variables-defunct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function is defunct. — gefs_variables","text":"","code":"gefs_variables(...)"},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all GHCND data from a single weather site — ghcnd","title":"Get all GHCND data from a single weather site — ghcnd","text":"function uses ftp access Global Historical Climatology Network daily weather data NOAA's FTP server single weather site. requires site identification number site pull entire weather dataset site.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all GHCND data from a single weather site — ghcnd","text":"","code":"ghcnd(stationid, refresh = FALSE, ...)  ghcnd_read(path, ...)"},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all GHCND data from a single weather site — ghcnd","text":"stationid (character) character vector giving identification weather stations user like pull data. get full current list stations, user can use ghcnd_stations() function. identify stations within certain radius location, user can use meteo_nearby_stations() function. refresh (logical) TRUE force re-download data. Default: FALSE ... case ghcnd() additional curl options pass crul::HttpClient. case ghcnd_read options passed read.csv path (character) path file .dly extension - already downloaded computer","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all GHCND data from a single weather site — ghcnd","text":"tibble (data.frame) contains data pulled NOAA's FTP server queried weather site. README file information format file available NOAA (https://www1.ncdc.noaa.gov/pub/data/ghcn/daily/readme.txt). file formatted line file gives daily weather observations single weather variable days one month one year. addition measurements, columns included certain flags, add information observation sources quality explained NOAA's README file data.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get all GHCND data from a single weather site — ghcnd","text":"function saves full set weather data queried site locally directory specified path argument. can access path cached file via attr(x, \"source\") can access last modified time cached file via attr(x, \"file_modified\") Messages printed console file path file last modified time can suppress suppressMessages() station ids found, delete file locally bad station id file cached. returned data bad station id empty data.frame attributes empty strings.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get all GHCND data from a single weather site — ghcnd","text":"See ghcnd_cache managing cached files","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd.html","id":"base-url","dir":"Reference","previous_headings":"","what":"Base URL","title":"Get all GHCND data from a single weather site — ghcnd","text":"base url data requests can changed. allowed urls : https://www1.ncdc.noaa.gov/pub/data/ghcn/daily/(default), https://ncei.noaa.gov/pub/data/ghcn/daily/can set base url using RNOAA_GHCND_BASE_URL environment variable; see example . reason sometimes one base url source temporarily , another base url may work. make sense allow arbitrary base URL; open issue another valid base URL GHNCD data add allowed set base urls.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get all GHCND data from a single weather site — ghcnd","text":"Scott Chamberlain myrmecocystus@gmail.com, Adam Erickson adam.erickson@ubc.ca","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all GHCND data from a single weather site — ghcnd","text":"","code":"if (FALSE) { # Get data ghcnd(stationid = \"AGE00147704\")  stations <- ghcnd_stations() ghcnd(stations$id[40])  library(\"dplyr\") ghcnd(stations$id[80300]) %>% select(id, element) %>% slice(1:3)  # manipulate data ## using built in fxns dat <- ghcnd(stationid = \"AGE00147704\") (alldat <- ghcnd_splitvars(dat))  ## using dplyr library(\"dplyr\") dat <- ghcnd(stationid = \"AGE00147704\") filter(dat, element == \"PRCP\", year == 1909)  # refresh the cached file ghcnd(stationid = \"AGE00147704\", refresh = TRUE)  # Read in a .dly file you've already downloaded path <- system.file(\"examples/AGE00147704.dly\", package = \"rnoaa\") ghcnd_read(path)  # change the base url for data requests Sys.setenv(RNOAA_GHCND_BASE_URL =   \"https://ncei.noaa.gov/pub/data/ghcn/daily/all\") ghcnd(stations$id[45], verbose = TRUE) ## must be in the allowed set of urls # Sys.setenv(RNOAA_GHCND_BASE_URL = \"https://google.com\") # ghcnd(stations$id[58], verbose = TRUE) }"},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a cleaned version of GHCND data from a single weather site — ghcnd_search","title":"Get a cleaned version of GHCND data from a single weather site — ghcnd_search","text":"function uses ftp access Global Historical Climatology Network daily weather data NOAA's FTP server single weather monitor site. requires site identification number site pull entire weather dataset site. clean data convert tidier format also, requested, filter certain date range certain weather variables.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a cleaned version of GHCND data from a single weather site — ghcnd_search","text":"","code":"ghcnd_search(   stationid,   date_min = NULL,   date_max = NULL,   var = \"all\",   refresh = FALSE,   ... )"},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a cleaned version of GHCND data from a single weather site — ghcnd_search","text":"stationid (character) character vector giving identification weather stations user like pull data. get full current list stations, user can use ghcnd_stations() function. identify stations within certain radius location, user can use meteo_nearby_stations() function. date_min character string giving earliest date daily weather time series user like final output. character string formatted \"yyyy-mm-dd\". specified, default keep daily data queried weather site earliest available date. date_max character string giving latest date daily weather time series user like final output. character string formatted \"yyyy-mm-dd\". specified, default keep daily data queried weather site current available date. var character vector specifying either \"\" (pull available weather parameters site) weather parameters keep final data (e.g., c(\"TMAX\", \"TMIN\") keep maximum minimum temperature). Example choices argument include: PRCP: Precipitation, tenths millimeters TAVG: Average temperature, tenths degrees Celsius TMAX: Maximum temperature, tenths degrees Celsius TMIN: Minimum temperature, tenths degrees Celsius full list possible weather variables available NOAA's README file GHCND data (https://www1.ncdc.noaa.gov/pub/data/ghcn/daily/readme.txt). weather stations small subset possible weather variables, data generated function may include variables user specifies argument. refresh (logical) TRUE force re-download data. Default: FALSE ... case ghcnd() additional curl options pass crul::HttpClient. case ghcnd_read options passed read.csv","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a cleaned version of GHCND data from a single weather site — ghcnd_search","text":"list object slots available specified weather variables. element list separate time series dataframe daily observations, well flag values, one weather variables. flag values give information quality source observation; see NOAA README file linked information. data.frame sorted date, earliest date first.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd_search.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get a cleaned version of GHCND data from a single weather site — ghcnd_search","text":"Messages printed console file path, file last modified time can suppress suppressMessages()","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd_search.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get a cleaned version of GHCND data from a single weather site — ghcnd_search","text":"function calls ghcnd(), download save data available dates weather variables queried weather station. step limiting dataset certain dates / weather variables, using date_min, date_max, var arguments, occur full data pulled.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd_search.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get a cleaned version of GHCND data from a single weather site — ghcnd_search","text":"Scott Chamberlain myrmecocystus@gmail.com, Adam Erickson adam.erickson@ubc.ca","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a cleaned version of GHCND data from a single weather site — ghcnd_search","text":"","code":"if (FALSE) { # Search based on variable and/or date ghcnd_search(\"AGE00147704\", var = \"PRCP\") ghcnd_search(\"AGE00147704\", var = \"PRCP\", date_min = \"1920-01-01\") ghcnd_search(\"AGE00147704\", var = \"PRCP\", date_max = \"1915-01-01\") ghcnd_search(\"AGE00147704\", var = \"PRCP\", date_min = \"1920-01-01\",              date_max = \"1925-01-01\") ghcnd_search(\"AGE00147704\", date_min = \"1920-01-01\", date_max = \"1925-01-01\") ghcnd_search(\"AGE00147704\", var = c(\"PRCP\",\"TMIN\")) ghcnd_search(\"AGE00147704\", var = c(\"PRCP\",\"TMIN\"), date_min = \"1920-01-01\") ghcnd_search(\"AGE00147704\", var = \"adfdf\")  # refresh the cached file ghcnd_search(\"AGE00147704\", var = \"PRCP\", refresh = TRUE) }"},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd_splitvars.html","id":null,"dir":"Reference","previous_headings":"","what":"Split variables in data returned from ghcnd — ghcnd_splitvars","title":"Split variables in data returned from ghcnd — ghcnd_splitvars","text":"function helper function ghcnd_search(). helps cleaning data returned ghcnd(), get format easier work .","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd_splitvars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split variables in data returned from ghcnd — ghcnd_splitvars","text":"","code":"ghcnd_splitvars(x)"},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd_splitvars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split variables in data returned from ghcnd — ghcnd_splitvars","text":"x object returned ghcnd()","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd_splitvars.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Split variables in data returned from ghcnd — ghcnd_splitvars","text":"See ghcnd() examples","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd_splitvars.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Split variables in data returned from ghcnd — ghcnd_splitvars","text":"Scott Chamberlain, Adam Erickson, Elio Campitelli","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd_states.html","id":null,"dir":"Reference","previous_headings":"","what":"Get meta-data on the GHCND daily data — ghcnd_states","title":"Get meta-data on the GHCND daily data — ghcnd_states","text":"function allow pull current versions certain meta-datasets GHCND, including lists country state abbreviations used weather station IDs information current version data.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get meta-data on the GHCND daily data — ghcnd_states","text":"","code":"ghcnd_states(...)  ghcnd_countries(...)  ghcnd_version(...)"},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd_states.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get meta-data on the GHCND daily data — ghcnd_states","text":"... case ghcnd() additional curl options pass crul::HttpClient. case ghcnd_read options passed read.csv","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd_states.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get meta-data on the GHCND daily data — ghcnd_states","text":"Functions: ghcnd_version: Get current version GHCND data ghcnd_states: Get US/Canada state names 2-letter codes ghcnd_countries: Get country names 2-letter codes","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd_states.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get meta-data on the GHCND daily data — ghcnd_states","text":"Scott Chamberlain myrmecocystus@gmail.com, Adam Erickson adam.erickson@ubc.ca","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd_states.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get meta-data on the GHCND daily data — ghcnd_states","text":"","code":"if (FALSE) { ghcnd_states() ghcnd_countries() ghcnd_version() }"},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd_stations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information on the GHCND weather stations — ghcnd_stations","title":"Get information on the GHCND weather stations — ghcnd_stations","text":"function returns object dataframe meta-information available GHCND weather stations.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd_stations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information on the GHCND weather stations — ghcnd_stations","text":"","code":"ghcnd_stations(refresh = FALSE, ...)"},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd_stations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information on the GHCND weather stations — ghcnd_stations","text":"refresh (logical) TRUE force re-download data. Default: FALSE ... case ghcnd() additional curl options pass crul::HttpClient. case ghcnd_read options passed read.csv","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd_stations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get information on the GHCND weather stations — ghcnd_stations","text":"function returns tibble (dataframe) weather station row following columns: id: weather station's ID number. first two letters denote country (using FIPS country codes). latitude: station's latitude, decimal degrees. Southern latitudes negative. longitude: station's longitude, decimal degrees. Western longitudes negative. elevation: station's elevation, meters. name: station's name. gsn_flag: \"GSN\" monitor belongs GCOS Surface Network (GSN). Otherwise either blank missing. wmo_id: station WMO number, column gives number. Otherwise either blank missing. element: weather variable recorded point station's history. See link \"References\" definitions abbreviations used variable. first_year: first year data available station weather element. last_year: last year data available station weather element. weather station data one weather variable, represented multiple rows output dataframe.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd_stations.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get information on the GHCND weather stations — ghcnd_stations","text":"Since function pulling large dataset ftp, may take run.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd_stations.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get information on the GHCND weather stations — ghcnd_stations","text":"documentation returned dataset, see http://www1.ncdc.noaa.gov/pub/data/ghcn/daily/readme.txt","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ghcnd_stations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get information on the GHCND weather stations — ghcnd_stations","text":"","code":"if (FALSE) { # Get stations, ghcnd-stations and ghcnd-inventory merged (stations <- ghcnd_stations())  library(dplyr) # filter by state stations %>% filter(state == \"IL\") stations %>% filter(state == \"OR\") # those without state values stations %>% filter(state == \"\") # filter by element stations %>% filter(element == \"PRCP\") # filter by id prefix stations %>% filter(grepl(\"^AF\", id)) stations %>% filter(grepl(\"^AFM\", id)) # filter by station long name stations %>% filter(name == \"CALLATHARRA\") }"},{"path":"https://docs.ropensci.org/rnoaa/reference/homr.html","id":null,"dir":"Reference","previous_headings":"","what":"Historical Observing Metadata Repository (HOMR) station metadata — homr","title":"Historical Observing Metadata Repository (HOMR) station metadata — homr","text":"Historical Observing Metadata Repository (HOMR) station metadata","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/homr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Historical Observing Metadata Repository (HOMR) station metadata — homr","text":"","code":"homr(   qid = NULL,   qidMod = NULL,   station = NULL,   state = NULL,   county = NULL,   country = NULL,   name = NULL,   nameMod = NULL,   platform = NULL,   date = NULL,   begindate = NULL,   enddate = NULL,   headersOnly = FALSE,   phrData = NULL,   combine = FALSE,   ... )"},{"path":"https://docs.ropensci.org/rnoaa/reference/homr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Historical Observing Metadata Repository (HOMR) station metadata — homr","text":"qid One COOP, FAA, GHCND, ICAO, NCDCSTNID, NWSLI, TRANS, WBAN, WMO, plus -z0-9, just -z0-9. (qid = qualified ID) qidMod (character) One : , starts, ends, contains. Specifies ID portion qid parameter applied within search. qid passed qidMod parameter used, qidMod assumed . station (character) station id. state (character) two-letter state abbreviation. Two-letter code US states, Canadian provinces, Island areas. county (character) two letter county code. US county names, best used state identifier. country (character) two letter country code. See list valid country names. name (character) One 0-9A-Z+. Searches type name station. nameMod (character) |starts|ends|contains. Specifies name parameter applied within search. name passed nameMod parameter used, nameMod assumed . platform (character) (aka network) ASOS|USCRN|USHCN|NEXRAD|AL USRCRN|USRCRN|COOP. Limit search stations certain platform/network type. date (character) YYYY-MM-DD|Limits values occurred specific date. Alternatively, date=return values matched stations. field omitted, search return recent values field. begindate, enddate YYYY-MM-DD. Limits values occurred within date range. headersOnly (logical) Returns minimal information station found (NCDC Station ID, Preferred Name, Station Begin Date, Station End Date), much quicker full query. performing search returns large number stations intend choose one list examine detail, headersOnly may give enough information find NCDC Station ID station actually want. phrData (logical) HOMR web service now includes PHR (element-level) data available, elements section. data structured, can substantially increase size result includes . need data can omit including phrData=false. parameter set, default phrData=true. combine (logical) Combine station metadata . ... Curl options passed crul::verb-GET (optional)","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/homr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Historical Observing Metadata Repository (HOMR) station metadata — homr","text":"list, elements named station ids.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/homr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Historical Observing Metadata Repository (HOMR) station metadata — homr","text":"Since definitions variables always , include ability get description data function. Use homr_definitions() get descriptions information.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/homr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Historical Observing Metadata Repository (HOMR) station metadata — homr","text":"https://www.ncdc.noaa.gov/homr/api","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/homr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Historical Observing Metadata Repository (HOMR) station metadata — homr","text":"","code":"if (FALSE) { homr(qid = 'COOP:046742') homr(qid = ':046742') homr(qidMod='starts', qid='COOP:0467') homr(headersOnly=TRUE, state='DE') homr(headersOnly=TRUE, country='GHANA') homr(headersOnly=TRUE, state='NC', county='BUNCOMBE') homr(name='CLAYTON') res <- homr(state='NC', county='BUNCOMBE', combine=TRUE) res$id res$head res$updates homr(nameMod='starts', name='CLAY') homr(headersOnly=TRUE, platform='ASOS') homr(qid='COOP:046742', date='2011-01-01') homr(qid='COOP:046742', begindate='2005-01-01', enddate='2011-01-01') homr(state='DE', headersOnly=TRUE) homr(station=20002078) homr(station=20002078, date='all', phrData=FALSE)  # Optionally pass in curl options homr(headersOnly=TRUE, state='NC', county='BUNCOMBE', verbose = TRUE) }"},{"path":"https://docs.ropensci.org/rnoaa/reference/homr_definitions.html","id":null,"dir":"Reference","previous_headings":"","what":"Historical Observing Metadata Repository (HOMR) station metadata -\ndefinitions — homr_definitions","title":"Historical Observing Metadata Repository (HOMR) station metadata -\ndefinitions — homr_definitions","text":"Historical Observing Metadata Repository (HOMR) station metadata - definitions","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/homr_definitions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Historical Observing Metadata Repository (HOMR) station metadata -\ndefinitions — homr_definitions","text":"","code":"homr_definitions(...)"},{"path":"https://docs.ropensci.org/rnoaa/reference/homr_definitions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Historical Observing Metadata Repository (HOMR) station metadata -\ndefinitions — homr_definitions","text":"... Curl options passed crul::verb-GET optional","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/homr_definitions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Historical Observing Metadata Repository (HOMR) station metadata -\ndefinitions — homr_definitions","text":"","code":"if (FALSE) { head( homr_definitions() ) }"},{"path":"https://docs.ropensci.org/rnoaa/reference/is.ncdc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Check object class — is.ncdc_data","title":"Check object class — is.ncdc_data","text":"Check object class ncdc_data, ncdc_datasets, ncdc_datatypes, ncdc_datacats, ncdc_locs, ncdc_locs_cats, ncdc_stations","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/is.ncdc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check object class — is.ncdc_data","text":"","code":"is.ncdc_data(x)  is.ncdc_datasets(x)  is.ncdc_datatypes(x)  is.ncdc_datacats(x)  is.ncdc_locs(x)  is.ncdc_locs_cats(x)  is.ncdc_stations(x)"},{"path":"https://docs.ropensci.org/rnoaa/reference/is.ncdc_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check object class — is.ncdc_data","text":"x input","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/isd.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and parse NOAA ISD/ISH data — isd","title":"Get and parse NOAA ISD/ISH data — isd","text":"Get parse NOAA ISD/ISH data","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/isd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and parse NOAA ISD/ISH data — isd","text":"","code":"isd(   usaf,   wban,   year,   overwrite = TRUE,   cleanup = TRUE,   additional = TRUE,   parallel = FALSE,   cores = getOption(\"cl.cores\", 2),   progress = FALSE,   force = FALSE,   ... )"},{"path":"https://docs.ropensci.org/rnoaa/reference/isd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and parse NOAA ISD/ISH data — isd","text":"usaf, wban (character) USAF WBAN code. Required year (numeric) One years 1901 current year. Required. overwrite (logical) overwrite path store files , Default: TRUE cleanup (logical) TRUE, remove compressed .gz file end function execution. Processing data takes lot time, cache cleaned version data. Cleaning save disk space. Default: TRUE additional (logical) include additional remarks data sections output. Default: TRUE. Passed isdparser::isd_parse() parallel (logical) processing parallel. Default: FALSE cores (integer) number cores use: Default: 2. look option \"cl.cores\", use default value found. progress (logical) print progress - ignored parallel=TRUE. default FALSE printing progress adds small bit time, processing time important, keep FALSE force (logical) force download? Default: FALSE use cached version (.rds compressed file) exists, override behavior. ... Curl options passed crul::verb-GET","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/isd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get and parse NOAA ISD/ISH data — isd","text":"tibble (data.frame).","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/isd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get and parse NOAA ISD/ISH data — isd","text":"isd saves full set weather data queried site locally directory specified path argument. can access path cached file via attr(x, \"source\") use isdparser internally parse ISD files. relatively complex parse, separate package takes care . function first looks whether data specific query already downloaded previously directory given path parameter. found, data requested form NOAA's FTP server. first time dataset pulled must ) download data, b) process data, c) save compressed .rds file disk. next time data requested, read back .rds file, quite fast. benfit writing .rds files data compressed, taking less space disk, data read back quickly, without changing data classes data, whereas jump hoops reading csv. processing can take quite long time since data quite messy takes bunch regex split apart text strings. hope speed process future. See examples different behavior.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/isd.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get and parse NOAA ISD/ISH data — isd","text":"now transformations (scaling, class changes, etc.) done output data. may change future parameters toggle transformations, none done now. See isdparser::isd_transform() transformation help. Comprehensive transformations variables yet available available next version package. See isd_cache managing cached files","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/isd.html","id":"errors","dir":"Reference","previous_headings":"","what":"Errors","title":"Get and parse NOAA ISD/ISH data — isd","text":"Note get error similar Error: download failed https://ftp.ncdc.noaa.gov/pub/data/noaa/1955/011490-99999-1955.gz, file exist NOAA's servers. internet , get different error.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/isd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get and parse NOAA ISD/ISH data — isd","text":"https://ftp.ncdc.noaa.gov/pub/data/noaa/ https://www1.ncdc.noaa.gov/pub/data/noaa","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/reference/isd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get and parse NOAA ISD/ISH data — isd","text":"","code":"if (FALSE) { # Get station table (stations <- isd_stations())  ## plot stations ### remove incomplete cases, those at 0,0 df <- stations[complete.cases(stations$lat, stations$lon), ] df <- df[df$lat != 0, ] ### make plot library(\"leaflet\") leaflet(data = df) %>%   addTiles() %>%   addCircles()  # Get data (res <- isd(usaf='011490', wban='99999', year=1986)) (res <- isd(usaf='011690', wban='99999', year=1993)) (res <- isd(usaf='109711', wban=99999, year=1970))  # \"additional\" and \"remarks\" data sections included by default # can toggle that parameter to not include those in output, saves time (res1 <- isd(usaf='011490', wban='99999', year=1986, force = TRUE)) (res2 <- isd(usaf='011490', wban='99999', year=1986, force = TRUE,   additional = FALSE))  # The first time a dataset is requested takes longer system.time( isd(usaf='782680', wban='99999', year=2011) ) system.time( isd(usaf='782680', wban='99999', year=2011) )  # Plot data ## get data for multiple stations res1 <- isd(usaf='011690', wban='99999', year=1993) res2 <- isd(usaf='782680', wban='99999', year=2011) res3 <- isd(usaf='008415', wban='99999', year=2016) res4 <- isd(usaf='109711', wban=99999, year=1970) ## combine data library(dplyr) res_all <- bind_rows(res1, res2, res3, res4) # add date time library(\"lubridate\") dd <- sprintf('%s %s', as.character(res_all$date), res_all$time) res_all$date_time <- ymd_hm(dd) ## remove 999's res_all <- filter(res_all, temperature < 900)  ## plot if (interactive()) {   library(ggplot2)   ggplot(res_all, aes(date_time, temperature)) +     geom_line() +     facet_wrap(~usaf_station, scales = 'free_x') }  # print progress ## note: if the file is already on your system, you'll see no progress bar (res <- isd(usaf='011690', wban='99999', year=1993, progress=TRUE))  # parallelize processing # (res <- isd(usaf=172007, wban=99999, year=2016, parallel=TRUE)) }"},{"path":"https://docs.ropensci.org/rnoaa/reference/isd_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read NOAA ISD/ISH local file — isd_read","title":"Read NOAA ISD/ISH local file — isd_read","text":"Read NOAA ISD/ISH local file","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/isd_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read NOAA ISD/ISH local file — isd_read","text":"","code":"isd_read(   path,   additional = TRUE,   parallel = FALSE,   cores = getOption(\"cl.cores\", 2),   progress = FALSE )"},{"path":"https://docs.ropensci.org/rnoaa/reference/isd_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read NOAA ISD/ISH local file — isd_read","text":"path (character) path file. required. additional (logical) include additional remarks data sections output. Default: TRUE. Passed isdparser::isd_parse() parallel (logical) processing parallel. Default: FALSE cores (integer) number cores use: Default: 2. look option \"cl.cores\", use default value found. progress (logical) print progress - ignored parallel=TRUE. default FALSE printing progress adds small bit time, processing time important, keep FALSE","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/isd_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read NOAA ISD/ISH local file — isd_read","text":"tibble (data.frame)","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/isd_read.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read NOAA ISD/ISH local file — isd_read","text":"isd_read - read .gz file downloaded NOAA's website","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/isd_read.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read NOAA ISD/ISH local file — isd_read","text":"https://ftp.ncdc.noaa.gov/pub/data/noaa/","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/reference/isd_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read NOAA ISD/ISH local file — isd_read","text":"","code":"if (FALSE) { file <- system.file(\"examples\", \"011490-99999-1986.gz\", package = \"rnoaa\") isd_read(file) isd_read(file, additional = FALSE) }"},{"path":"https://docs.ropensci.org/rnoaa/reference/isd_stations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get NOAA ISD/ISH station data from NOAA FTP server. — isd_stations","title":"Get NOAA ISD/ISH station data from NOAA FTP server. — isd_stations","text":"Get NOAA ISD/ISH station data NOAA FTP server.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/isd_stations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get NOAA ISD/ISH station data from NOAA FTP server. — isd_stations","text":"","code":"isd_stations(refresh = FALSE)"},{"path":"https://docs.ropensci.org/rnoaa/reference/isd_stations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get NOAA ISD/ISH station data from NOAA FTP server. — isd_stations","text":"refresh (logical) Download station data NOAA ftp server . Default: FALSE","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/isd_stations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get NOAA ISD/ISH station data from NOAA FTP server. — isd_stations","text":"tibble (data.frame) columns: usaf - USAF number, character wban - WBAN number, character station_name - station name, character ctry - Country, given, character state - State, given, character icao - ICAO number, given, character lat - Latitude, given, numeric lon - Longitude, given, numeric elev_m - Elevation, given, numeric begin - Begin date data coverage, form YYYYMMDD, numeric end - End date data coverage, form YYYYMMDD, numeric","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/isd_stations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get NOAA ISD/ISH station data from NOAA FTP server. — isd_stations","text":"data table cached, can force download data NOAA setting refresh=TRUE","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/isd_stations.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get NOAA ISD/ISH station data from NOAA FTP server. — isd_stations","text":"See isd_cache managing cached files","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/isd_stations.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get NOAA ISD/ISH station data from NOAA FTP server. — isd_stations","text":"https://ftp.ncdc.noaa.gov/pub/data/noaa/","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/reference/isd_stations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get NOAA ISD/ISH station data from NOAA FTP server. — isd_stations","text":"","code":"if (FALSE) { # Get station table (stations <- isd_stations())  ## plot stations ### remove incomplete cases, those at 0,0 df <- stations[complete.cases(stations$lat, stations$lon), ] df <- df[df$lat != 0, ] ### make plot library(\"leaflet\") leaflet(data = df) %>%   addTiles() %>%   addCircles() }"},{"path":"https://docs.ropensci.org/rnoaa/reference/isd_stations_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for NOAA ISD/ISH station data from NOAA FTP server. — isd_stations_search","title":"Search for NOAA ISD/ISH station data from NOAA FTP server. — isd_stations_search","text":"Search NOAA ISD/ISH station data NOAA FTP server.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/isd_stations_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for NOAA ISD/ISH station data from NOAA FTP server. — isd_stations_search","text":"","code":"isd_stations_search(lat = NULL, lon = NULL, radius = NULL, bbox = NULL)"},{"path":"https://docs.ropensci.org/rnoaa/reference/isd_stations_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for NOAA ISD/ISH station data from NOAA FTP server. — isd_stations_search","text":"lat (numeric) Latitude, decimal degree lon (numeric) Latitude, decimal degree radius (numeric) Radius (km) search lat,lon coordinates bbox (numeric) Bounding box, form: min-longitude, min-latitude, max-longitude, max-latitude","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/isd_stations_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for NOAA ISD/ISH station data from NOAA FTP server. — isd_stations_search","text":"data.frame columns: usaf - USAF number, character wban - WBAN number, character station_name - station name, character ctry - Country, given, character state - State, given, character icao - ICAO number, given, character lat - Latitude, given, numeric lon - Longitude, given, numeric elev_m - Elevation, given, numeric begin - Begin date data coverage, form YYYYMMDD, numeric end - End date data coverage, form YYYYMMDD, numeric distance - distance (km) (present using lat/lon/radius parameter combination)","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/isd_stations_search.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search for NOAA ISD/ISH station data from NOAA FTP server. — isd_stations_search","text":"internally call isd_stations() get data.frame ISD stations, quite fast long first time called since cache table. searching, clean data.frame, removing stations lat/long coordinates, impossible lat/long coordinates, 0,0. lat/lon/radius input use meteo_distance() search stations, bbox input, simply use dplyr::filter()","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/isd_stations_search.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Search for NOAA ISD/ISH station data from NOAA FTP server. — isd_stations_search","text":"https://ftp.ncdc.noaa.gov/pub/data/noaa/","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/reference/isd_stations_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for NOAA ISD/ISH station data from NOAA FTP server. — isd_stations_search","text":"","code":"if (FALSE) { ## lat, long, radius isd_stations_search(lat = 38.4, lon = -123, radius = 250)  x <- isd_stations_search(lat = 60, lon = 18, radius = 200)  if (requireNamespace(\"leaflet\")) {   library(\"leaflet\")   leaflet() %>%     addTiles() %>%     addCircles(lng = x$lon,                lat = x$lat,                popup = x$station_name) %>%     clearBounds() }  ## bounding box bbox <- c(-125.0, 38.4, -121.8, 40.9) isd_stations_search(bbox = bbox) }"},{"path":"https://docs.ropensci.org/rnoaa/reference/lcd.html","id":null,"dir":"Reference","previous_headings":"","what":"Local Climatological Data from NOAA — lcd","title":"Local Climatological Data from NOAA — lcd","text":"Local Climatological Data NOAA","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/lcd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Local Climatological Data from NOAA — lcd","text":"","code":"lcd(station, year, col_types = NULL, ...)"},{"path":"https://docs.ropensci.org/rnoaa/reference/lcd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Local Climatological Data from NOAA — lcd","text":"station (character) station code, e.g., \"02413099999\". allow integer/numeric passed , station ids can leading zeros, good idea keep stations character class. required year (integer) year, e.g., 2017. required col_types (named character vector) defaults NULL. Use argument change returned column type. example,\"character\" instead \"numeric\". See use lcd_columns create named vector allowed column names. user specified type compatible, function choose type automatically raise message. optional ... curl options passed crul::verb-GET","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/lcd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Local Climatological Data from NOAA — lcd","text":"data.frame many columns. first 10 metadata: station date latitude longitude elevation name report_type source rest data columns. first part many column names time period, one : hourly daily monthly shortduration variable looking may first part column name","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/lcd.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Local Climatological Data from NOAA — lcd","text":"See lcd_cache managing cached files","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/lcd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Local Climatological Data from NOAA — lcd","text":"Docs: https://www.ncei.noaa.gov/data/local-climatological-data/doc/LCD_documentation.pdf Data comes : https://www.ncei.noaa.gov/data/local-climatological-data/access","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/lcd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Local Climatological Data from NOAA — lcd","text":"","code":"if (FALSE) { x = lcd(station = \"01338099999\", year = 2017) lcd(station = \"01338099999\", year = 2015) lcd(station = \"02413099999\", year = 2009) lcd(station = \"02413099999\", year = 2001)  # pass curl options lcd(station = \"02413099999\", year = 2002, verbose = TRUE) }"},{"path":"https://docs.ropensci.org/rnoaa/reference/lcd_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify Variable Types in Local Climatological Data from NOAA — lcd_columns","title":"Specify Variable Types in Local Climatological Data from NOAA — lcd_columns","text":"Use function specify variable types returned lcd. function returns named vector specified column classes. defaults specified argument descriptions .","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/lcd_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify Variable Types in Local Climatological Data from NOAA — lcd_columns","text":"","code":"lcd_columns(   STATION = \"character\",   DATE = \"POSIXct\",   LATITUDE = \"numeric\",   LONGITUDE = \"numeric\",   ELEVATION = \"numeric\",   NAME = \"character\",   REPORT_TYPE = \"character\",   SOURCE = \"character\",   HourlyAltimeterSetting = \"character\",   HourlyDewPointTemperature = \"character\",   HourlyDryBulbTemperature = \"character\",   HourlyPrecipitation = \"character\",   HourlyPresentWeatherType = \"character\",   HourlyPressureChange = \"character\",   HourlyPressureTendency = \"integer\",   HourlyRelativeHumidity = \"character\",   HourlySkyConditions = \"character\",   HourlySeaLevelPressure = \"character\",   HourlyStationPressure = \"character\",   HourlyVisibility = \"character\",   HourlyWetBulbTemperature = \"character\",   HourlyWindDirection = \"character\",   HourlyWindGustSpeed = \"character\",   HourlyWindSpeed = \"character\",   Sunrise = \"numeric\",   Sunset = \"numeric\",   DailyAverageDewPointTemperature = \"character\",   DailyAverageDryBulbTemperature = \"character\",   DailyAverageRelativeHumidity = \"character\",   DailyAverageSeaLevelPressure = \"character\",   DailyAverageStationPressure = \"character\",   DailyAverageWetBulbTemperature = \"character\",   DailyAverageWindSpeed = \"character\",   DailyCoolingDegreeDays = \"numeric\",   DailyDepartureFromNormalAverageTemperature = \"numeric\",   DailyHeatingDegreeDays = \"numeric\",   DailyMaximumDryBulbTemperature = \"numeric\",   DailyMinimumDryBulbTemperature = \"numeric\",   DailyPeakWindDirection = \"numeric\",   DailyPeakWindSpeed = \"numeric\",   DailyPrecipitation = \"character\",   DailySnowDepth = \"character\",   DailySnowfall = \"character\",   DailySustainedWindDirection = \"numeric\",   DailySustainedWindSpeed = \"numeric\",   DailyWeather = \"character\",   MonthlyAverageRH = \"numeric\",   MonthlyDaysWithGT001Precip = \"numeric\",   MonthlyDaysWithGT010Precip = \"numeric\",   MonthlyDaysWithGT32Temp = \"numeric\",   MonthlyDaysWithGT90Temp = \"numeric\",   MonthlyDaysWithLT0Temp = \"numeric\",   MonthlyDaysWithLT32Temp = \"numeric\",   MonthlyDepartureFromNormalAverageTemperature = \"numeric\",   MonthlyDepartureFromNormalCoolingDegreeDays = \"numeric\",   MonthlyDepartureFromNormalHeatingDegreeDays = \"numeric\",   MonthlyDepartureFromNormalMaximumTemperature = \"numeric\",   MonthlyDepartureFromNormalMinimumTemperature = \"numeric\",   MonthlyDepartureFromNormalPrecipitation = \"numeric\",   MonthlyDewpointTemperature = \"numeric\",   MonthlyGreatestPrecip = \"numeric\",   MonthlyGreatestPrecipDate = \"character\",   MonthlyGreatestSnowDepth = \"numeric\",   MonthlyGreatestSnowDepthDate = \"character\",   MonthlyGreatestSnowfall = \"numeric\",   MonthlyGreatestSnowfallDate = \"character\",   MonthlyMaxSeaLevelPressureValue = \"numeric\",   MonthlyMaxSeaLevelPressureValueDate = \"character\",   MonthlyMaxSeaLevelPressureValueTime = \"character\",   MonthlyMaximumTemperature = \"numeric\",   MonthlyMeanTemperature = \"numeric\",   MonthlyMinSeaLevelPressureValue = \"numeric\",   MonthlyMinSeaLevelPressureValueDate = \"character\",   MonthlyMinSeaLevelPressureValueTime = \"character\",   MonthlyMinimumTemperature = \"numeric\",   MonthlySeaLevelPressure = \"numeric\",   MonthlyStationPressure = \"numeric\",   MonthlyTotalLiquidPrecipitation = \"numeric\",   MonthlyTotalSnowfall = \"numeric\",   MonthlyWetBulb = \"numeric\",   AWND = \"numeric\",   CDSD = \"numeric\",   CLDD = \"numeric\",   DSNW = \"numeric\",   HDSD = \"numeric\",   HTDD = \"numeric\",   NormalsCoolingDegreeDay = \"numeric\",   NormalsHeatingDegreeDay = \"numeric\",   ShortDurationEndDate005 = \"character\",   ShortDurationEndDate010 = \"character\",   ShortDurationEndDate015 = \"character\",   ShortDurationEndDate020 = \"character\",   ShortDurationEndDate030 = \"character\",   ShortDurationEndDate045 = \"character\",   ShortDurationEndDate060 = \"character\",   ShortDurationEndDate080 = \"character\",   ShortDurationEndDate100 = \"character\",   ShortDurationEndDate120 = \"character\",   ShortDurationEndDate150 = \"character\",   ShortDurationEndDate180 = \"character\",   ShortDurationPrecipitationValue005 = \"numeric\",   ShortDurationPrecipitationValue010 = \"numeric\",   ShortDurationPrecipitationValue015 = \"numeric\",   ShortDurationPrecipitationValue020 = \"numeric\",   ShortDurationPrecipitationValue030 = \"numeric\",   ShortDurationPrecipitationValue045 = \"numeric\",   ShortDurationPrecipitationValue060 = \"numeric\",   ShortDurationPrecipitationValue080 = \"numeric\",   ShortDurationPrecipitationValue100 = \"numeric\",   ShortDurationPrecipitationValue120 = \"numeric\",   ShortDurationPrecipitationValue150 = \"numeric\",   ShortDurationPrecipitationValue180 = \"numeric\",   REM = \"character\",   BackupDirection = \"character\",   BackupDistance = \"character\",   BackupDistanceUnit = \"character\",   BackupElements = \"character\",   BackupElevation = \"character\",   BackupEquipment = \"character\",   BackupLatitude = \"character\",   BackupLongitude = \"character\",   BackupName = \"character\",   WindEquipmentChangeDate = \"character\" )"},{"path":"https://docs.ropensci.org/rnoaa/reference/lcd_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify Variable Types in Local Climatological Data from NOAA — lcd_columns","text":"STATION (character) string indicating variable column type returned, default \"character\". optional LATITUDE (character) string indicating variable column type returned, default \"numeric\". optional LONGITUDE (character) string indicating variable column type returned, default \"numeric\". optional ELEVATION (character) string indicating variable column type returned, default \"numeric\". optional NAME (character) string indicating variable column type returned, default \"character\". optional REPORT_TYPE (character) string indicating variable column type returned, default \"character\". optional SOURCE (character) string indicating variable column type returned, default \"character\". optional HourlyAltimeterSetting (character) string indicating variable column type returned, default \"character\". optional HourlyDewPointTemperature (character) string indicating variable column type returned, default \"character\". optional HourlyDryBulbTemperature (character) string indicating variable column type returned, default \"character\". optional HourlyPrecipitation (character) string indicating variable column type returned, default \"character\". optional HourlyPresentWeatherType (character) string indicating variable column type returned, default \"character\". optional HourlyPressureChange (character) string indicating variable column type returned, default \"character\". optional HourlyPressureTendency (character) string indicating variable column type returned, default \"integer\". optional HourlyRelativeHumidity (character) string indicating variable column type returned, default \"character\". optional HourlySkyConditions (character) string indicating variable column type returned, default \"character\". optional HourlySeaLevelPressure (character) string indicating variable column type returned, default \"character\". optional HourlyStationPressure (character)string indicating variable column type returned, default \"character\". optional HourlyVisibility (character) string indicating variable column type returned, default \"character\". optional HourlyWetBulbTemperature (character) string indicating variable column type returned, default \"character\". optional HourlyWindDirection (character) string indicating variable column type returned, default \"character\". optional HourlyWindGustSpeed (character) string indicating variable column type returned, default \"character\". optional HourlyWindSpeed (character) string indicating variable column type returned, default \"character\". optional Sunrise (character) string indicating variable column type returned, default \"numeric\". optional Sunset (character) string indicating variable column type returned, default \"numeric\". optional DailyAverageDewPointTemperature (character) string indicating variable column type returned, default \"character\". optional DailyAverageDryBulbTemperature (character) string indicating variable column type returned, default \"character\". optional DailyAverageRelativeHumidity (character) string indicating variable column type returned, default \"character\". optional DailyAverageSeaLevelPressure (character) string indicating variable column type returned, default \"character\". optional DailyAverageStationPressure (character) string indicating variable column type returned, default \"character\". optional DailyAverageWetBulbTemperature (character) string indicating variable column type returned, default \"character\". optional DailyAverageWindSpeed (character) string indicating variable column type returned, default \"character\". optional DailyCoolingDegreeDays (character) string indicating variable column type returned, default \"numeric\". optional DailyDepartureFromNormalAverageTemperature (character) string indicating variable column type returned, default \"numeric\". optional DailyHeatingDegreeDays (character) string indicating variable column type returned, default \"numeric\". optional DailyMaximumDryBulbTemperature (character) string indicating variable column type returned, default \"numeric\". optional DailyMinimumDryBulbTemperature (character) string indicating variable column type returned, default \"numeric\". optional DailyPeakWindDirection (character) string indicating variable column type returned, default \"numeric\". optional DailyPeakWindSpeed (character) string indicating variable column type returned, default \"numeric\". optional DailyPrecipitation (character) string indicating variable column type returned, default \"character\". optional DailySnowDepth (character) string indicating variable column type returned, default \"character\". optional DailySnowfall (character) string indicating variable column type returned, default \"character\". optional DailySustainedWindDirection (character) string indicating variable column type returned, default \"numeric\". optional DailySustainedWindSpeed (character) string indicating variable column type returned, default \"numeric\". optional DailyWeather (character) string indicating variable column type returned, default \"character\". optional MonthlyAverageRH (character) string indicating variable column type returned, default \"numeric\". optional MonthlyDaysWithGT001Precip (character) string indicating variable column type returned, default \"numeric\". optional MonthlyDaysWithGT010Precip (character) string indicating variable column type returned, default \"numeric\". optional MonthlyDaysWithGT32Temp (character) string indicating variable column type returned, default \"numeric\". optional MonthlyDaysWithGT90Temp (character) string indicating variable column type returned, default \"numeric\". optional MonthlyDaysWithLT0Temp (character) string indicating variable column type returned, default \"numeric\". optional MonthlyDaysWithLT32Temp (character) string indicating variable column type returned, default \"numeric\". optional MonthlyDepartureFromNormalAverageTemperature (character) string indicating variable column type returned, default \"numeric\". optional MonthlyDepartureFromNormalCoolingDegreeDays (character) string indicating variable column type returned, default \"numeric\". optional MonthlyDepartureFromNormalHeatingDegreeDays (character) string indicating variable column type returned, default \"numeric\". optional MonthlyDepartureFromNormalMaximumTemperature (character) string indicating variable column type returned, default \"numeric\". optional MonthlyDepartureFromNormalMinimumTemperature (character) string indicating variable column type returned, default \"numeric\". optional MonthlyDepartureFromNormalPrecipitation (character) string indicating variable column type returned, default \"numeric\". optional MonthlyDewpointTemperature (character) string indicating variable column type returned, default \"numeric\". optional MonthlyGreatestPrecip (character) string indicating variable column type returned, default \"numeric\". optional MonthlyGreatestPrecipDate (character) string indicating variable column type returned, default \"character\". optional MonthlyGreatestSnowDepth (character) string indicating variable column type returned, default \"numeric\". optional MonthlyGreatestSnowDepthDate (character) string indicating variable column type returned, default \"character\". optional MonthlyGreatestSnowfall (character) string indicating variable column type returned, default \"numeric\". optional MonthlyGreatestSnowfallDate (character) string indicating variable column type returned, default \"character\". optional MonthlyMaxSeaLevelPressureValue (character) string indicating variable column type returned, default \"numeric\". optional MonthlyMaxSeaLevelPressureValueDate (character) string indicating variable column type returned, default \"character\". optional MonthlyMaxSeaLevelPressureValueTime (character) string indicating variable column type returned, default \"character\". optional MonthlyMaximumTemperature (character) string indicating variable column type returned, default \"numeric\". optional MonthlyMeanTemperature (character) string indicating variable column type returned, default \"numeric\". optional MonthlyMinSeaLevelPressureValue (character) string indicating variable column type returned, default \"numeric\". optional MonthlyMinSeaLevelPressureValueDate (character) string indicating variable column type returned, default \"character\". optional MonthlyMinSeaLevelPressureValueTime (character) string indicating variable column type returned, default \"character\". optional MonthlyMinimumTemperature (character) string indicating variable column type returned, default \"numeric\". optional MonthlySeaLevelPressure (character) string indicating variable column type returned, default \"numeric\". optional MonthlyStationPressure (character) string indicating variable column type returned, default \"numeric\". optional MonthlyTotalLiquidPrecipitation (character) string indicating variable column type returned, default \"numeric\". optional MonthlyTotalSnowfall (character) string indicating variable column type returned, default \"numeric\". optional MonthlyWetBulb (character) string indicating variable column type returned, default \"numeric\". optional AWND (character) string indicating variable column type returned, default \"numeric\". optional CDSD (character) string indicating variable column type returned, default \"numeric\". optional CLDD (character) string indicating variable column type returned, default \"numeric\". optional DSNW (character) string indicating variable column type returned, default \"numeric\". optional HDSD (character) string indicating variable column type returned, default \"numeric\". optional HTDD (character) string indicating variable column type returned, default \"numeric\". optional NormalsCoolingDegreeDay (character) string indicating variable column type returned, default \"numeric\". optional NormalsHeatingDegreeDay (character) string indicating variable column type returned, default \"numeric\". optional ShortDurationEndDate005 (character) string indicating variable column type returned, default \"character\". optional ShortDurationEndDate010 (character) string indicating variable column type returned, default \"character\". optional ShortDurationEndDate015 (character) string indicating variable column type returned, default \"character\". optional ShortDurationEndDate020 (character) string indicating variable column type returned, default \"character\". optional ShortDurationEndDate030 (character) string indicating variable column type returned, default \"character\". optional ShortDurationEndDate045 (character) string indicating variable column type returned, default \"character\". optional ShortDurationEndDate060 (character) string indicating variable column type returned, default \"character\". optional ShortDurationEndDate080 (character) string indicating variable column type returned, default \"character\". optional ShortDurationEndDate100 (character) string indicating variable column type returned, default \"character\". optional ShortDurationEndDate120 (character) string indicating variable column type returned, default \"character\". optional ShortDurationEndDate150 (character) string indicating variable column type returned, default \"character\". optional ShortDurationEndDate180 (character) string indicating variable column type returned, default \"character\". optional ShortDurationPrecipitationValue005 (character) string indicating variable column type returned, default \"numeric\". optional ShortDurationPrecipitationValue010 (character) string indicating variable column type returned, default \"numeric\". optional ShortDurationPrecipitationValue015 (character) string indicating variable column type returned, default \"numeric\". optional ShortDurationPrecipitationValue020 (character) string indicating variable column type returned, default \"numeric\". optional ShortDurationPrecipitationValue030 (character) string indicating variable column type returned, default \"numeric\". optional ShortDurationPrecipitationValue045 (character) string indicating variable column type returned, default \"numeric\". optional ShortDurationPrecipitationValue060 (character) string indicating variable column type returned, default \"numeric\". optional ShortDurationPrecipitationValue080 (character) string indicating variable column type returned, default \"numeric\". optional ShortDurationPrecipitationValue100 (character) string indicating variable column type returned, default \"numeric\". optional ShortDurationPrecipitationValue120 (character) string indicating variable column type returned, default \"numeric\". optional ShortDurationPrecipitationValue150 (character) string indicating variable column type returned, default \"numeric\". optional ShortDurationPrecipitationValue180 (character) string indicating variable column type returned, default \"numeric\". optional REM (character) string indicating variable column type returned, default \"character\". optional BackupDirection (character) string indicating variable column type returned, default \"character\". optional BackupDistance (character) string indicating variable column type returned, default \"character\". optional BackupDistanceUnit (character) string indicating variable column type returned, default \"character\". optional BackupElements (character) string indicating variable column type returned, default \"character\". optional BackupElevation (character) string indicating variable column type returned, default \"character\". optional BackupEquipment (character) string indicating variable column type returned, default \"character\". optional BackupLatitude (character) string indicating variable column type returned, default \"character\". optional BackupLongitude (character) string indicating variable column type returned, default \"character\". optional BackupName (character) string indicating variable column type returned, default \"character\". optional WindEquipmentChangeDate (character) string indicating variable column type returned, default \"character\". optional","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/lcd_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify Variable Types in Local Climatological Data from NOAA — lcd_columns","text":"vector indicating column classes types","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/lcd_columns.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Specify Variable Types in Local Climatological Data from NOAA — lcd_columns","text":"column type compatible, lcd return dataframe appropriate column type message indicating column changed specified type.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_clear_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear meteo cached files — meteo_clear_cache","title":"Clear meteo cached files — meteo_clear_cache","text":"meteo functions use aplication","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_clear_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear meteo cached files — meteo_clear_cache","text":"","code":"meteo_clear_cache(force = FALSE)"},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_clear_cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clear meteo cached files — meteo_clear_cache","text":"force (logical) force delete. default: FALSE","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_clear_cache.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Clear meteo cached files — meteo_clear_cache","text":"function clear cached meteo files.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the ","title":"Determine the ","text":"Call function pulling observations set stations retrieve \"coverage\" (.e. complete field ). either obs_start_date obs_end_date specified, coverage test limited date range.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the ","text":"","code":"meteo_coverage(   meteo_df,   obs_start_date = NULL,   obs_end_date = NULL,   verbose = FALSE )"},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the ","text":"meteo_df meteo data.frame obs_start_date specify either (obs_start_date, obs_end_date) constrain coverate tests. Date objects. obs_end_date specify either (obs_start_date, obs_end_date) constrain coverate tests. Date objects. verbose TRUE display coverage summary along returning coverage data.frame","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the ","text":"list containing 2 data.frames named 'summary' 'detail'. 'summary' data.frame contains columns: additional fields (coverage percent) depending weather variables queried available weather station. data.frame named 'detail' contains columns meteo_df input data, expands rows contain NAs days without data.","code":"$ id         (chr) $ start_date (time) $ end_date   (time) $ total_obs  (int)"},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine the ","text":"","code":"if (FALSE) {  monitors <- c(\"ASN00095063\", \"ASN00024025\", \"ASN00040112\", \"ASN00041023\",              \"ASN00009998\", \"ASN00066078\", \"ASN00003069\", \"ASN00090162\",              \"ASN00040126\", \"ASN00058161\") obs <- meteo_pull_monitors(monitors) obs_covr <- meteo_coverage(obs)  }"},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Find all monitors within a radius of a location — meteo_distance","title":"Find all monitors within a radius of a location — meteo_distance","text":"function identify weather stations specified radius location. radius given, function return dataframe available monitors, sorted distance location. limit argument can used limit output dataframe x closest monitors location.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find all monitors within a radius of a location — meteo_distance","text":"","code":"meteo_distance(   station_data,   lat,   long,   units = \"deg\",   radius = NULL,   limit = NULL )"},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find all monitors within a radius of a location — meteo_distance","text":"station_data output ghcnd_stations(), current list weather stations available NOAA GHCND dataset. format dataframe one row per weather station. Latitude longitude station locations columns names \"latitude\" \"longitude\", consistent output ghcnd_stations(). save time, run ghcnd_stations call save output object, rather rerunning default every time (see examples meteo_nearby_stations()). lat Latitude location. Southern latitudes given negative values. long Longitude location. Western longitudes given negative values. units Units latitude longitude values. Possible values : deg: Degrees (default); rad: Radians. radius numeric vector giving radius (kilometers) within search monitors near location. limit integer giving maximum number monitors include location. x closest monitors kept. Default NULL (pull everything available, within radius radius specified).","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find all monitors within a radius of a location — meteo_distance","text":"dataframe weather stations near location. single-location version return value meteo_nearby_stations()","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_distance.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find all monitors within a radius of a location — meteo_distance","text":"Alex Simmons a2.simmons@qut.edu.au, Brooke Anderson brooke.anderson@colostate.edu","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find all monitors within a radius of a location — meteo_distance","text":"","code":"if (FALSE) { station_data <- ghcnd_stations() meteo_distance(station_data, -33, 151, radius = 10, limit = 10) meteo_distance(station_data, -33, 151, radius = 10, limit = 3)  # FIXME - units param is ignored #meteo_distance(station_data, -33, 151, units = 'rad', radius = 10, limit = 3) }"},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_nearby_stations.html","id":null,"dir":"Reference","previous_headings":"","what":"Find weather monitors near locations — meteo_nearby_stations","title":"Find weather monitors near locations — meteo_nearby_stations","text":"function inputs dataframe latitudes longitudes locations creates dataframe monitors within certain radius locations. function can also used, limit argument, pull certain number closest weather monitors location. weather monitor IDs output dataframe can used rnoaa functions pull data available weather stations near location (e.g., meteo_pull_monitors()).","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_nearby_stations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find weather monitors near locations — meteo_nearby_stations","text":"","code":"meteo_nearby_stations(   lat_lon_df,   lat_colname = \"latitude\",   lon_colname = \"longitude\",   station_data = ghcnd_stations(),   var = \"all\",   year_min = NULL,   year_max = NULL,   radius = NULL,   limit = NULL )"},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_nearby_stations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find weather monitors near locations — meteo_nearby_stations","text":"lat_lon_df dataframe contains latitude, longitude, unique identifier location (id). example proper format dataframe, see examples . Latitude longitude must units decimal degrees. Southern latitudes Western longitudes given negative values. tibble accepted, coerced data.frame internally usage. lat_colname character string giving name latitude column lat_lon_df dataframe. lon_colname character string giving name longitude column lat_lon_df dataframe. station_data output ghcnd_stations(), current list weather stations available NOAA GHCND dataset. format dataframe one row per weather station. Latitude longitude station locations columns names \"latitude\" \"longitude\", consistent output ghcnd_stations(). save time, run ghcnd_stations call save output object, rather rerunning default every time (see examples meteo_nearby_stations()). var character vector specifying either \"\" (pull available weather parameters site) weather parameters keep final data (e.g., c(\"TMAX\", \"TMIN\") keep maximum minimum temperature). Example choices argument include: PRCP: Precipitation, tenths millimeters TAVG: Average temperature, tenths degrees Celsius TMAX: Maximum temperature, tenths degrees Celsius TMIN: Minimum temperature, tenths degrees Celsius full list possible weather variables available NOAA's README file GHCND data (https://www1.ncdc.noaa.gov/pub/data/ghcn/daily/readme.txt). weather stations small subset possible weather variables, data generated function may include variables user specifies argument. year_min numeric value giving earliest year ultimately want weather data (e.g., 2013, interested data 2013 later). year_max numeric value giving latest year ultimately want weather data. radius numeric vector giving radius (kilometers) within search monitors near location. limit integer giving maximum number monitors include location. x closest monitors kept. Default NULL (pull everything available, within radius radius specified).","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_nearby_stations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find weather monitors near locations — meteo_nearby_stations","text":"list containing dataframes sets unique weather stations within search radius location. Site IDs weather stations given dataframe can used conjunction functions rnoaa package pull weather data station. dataframe location includes: id: weather station ID, can used functions pull weather data station; name: weather station name; latitude: station's latitude, decimal degrees. Southern latitudes negative; longitude: station's longitude, decimal degrees. Western longitudes negative; distance: station's distance, kilometers, location.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_nearby_stations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find weather monitors near locations — meteo_nearby_stations","text":"Great circle distance used determine whether weather monitor within required radius.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_nearby_stations.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Find weather monitors near locations — meteo_nearby_stations","text":"default, function pull full station list NOAA use identify nearby locations. creating lists monitors nearby several stations, can save time using ghcnd_stations() function separately create object stations use argument station_data function reference object, rather using function's defaults (see examples).","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_nearby_stations.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find weather monitors near locations — meteo_nearby_stations","text":"Alex Simmons a2.simmons@qut.edu.au, Brooke Anderson brooke.anderson@colostate.edu","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_nearby_stations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find weather monitors near locations — meteo_nearby_stations","text":"","code":"if (FALSE) {  station_data <- ghcnd_stations() # Takes a while to run  lat_lon_df <- data.frame(id = c(\"sydney\", \"brisbane\"),                          latitude = c(-33.8675, -27.4710),                          longitude = c(151.2070, 153.0234)) nearby_stations <-  meteo_nearby_stations(lat_lon_df = lat_lon_df,                     station_data = station_data, radius = 10)  miami <- data.frame(id = \"miami\", latitude = 25.7617, longitude = -80.1918)  # Get all stations within 50 kilometers meteo_nearby_stations(lat_lon_df = miami, station_data = station_data,                       radius = 50, var = c(\"PRCP\", \"TMAX\"),                       year_min = 1992, year_max = 1992) # Get the closest 10 monitors meteo_nearby_stations(lat_lon_df = miami, station_data = station_data,                       limit = 10, var = c(\"PRCP\", \"TMAX\"),                       year_min = 1992, year_max = 1992) }"},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_process_geographic_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the distances between a location and all available stations — meteo_process_geographic_data","title":"Calculate the distances between a location and all available stations — meteo_process_geographic_data","text":"function takes single location dataset available weather stations calculates distance location stations, using great circle method. new column added dataset available weather stations giving distance station input location. station dataset sorted closest furthest distance location returned function output.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_process_geographic_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the distances between a location and all available stations — meteo_process_geographic_data","text":"","code":"meteo_process_geographic_data(station_data, lat, long, units = \"deg\")"},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_process_geographic_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the distances between a location and all available stations — meteo_process_geographic_data","text":"station_data output ghcnd_stations(), current list weather stations available NOAA GHCND dataset. format dataframe one row per weather station. Latitude longitude station locations columns names \"latitude\" \"longitude\", consistent output ghcnd_stations(). save time, run ghcnd_stations call save output object, rather rerunning default every time (see examples meteo_nearby_stations()). lat Latitude location. Southern latitudes given negative values. long Longitude location. Western longitudes given negative values. units Units latitude longitude values. Possible values : deg: Degrees (default); rad: Radians.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_process_geographic_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the distances between a location and all available stations — meteo_process_geographic_data","text":"station_data dataframe input, distance column added gives distance location (kilometers), re-ordered distance station location (closest weather stations first).","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_process_geographic_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate the distances between a location and all available stations — meteo_process_geographic_data","text":"Alex Simmons a2.simmons@qut.edu.au, Brooke Anderson brooke.anderson@colostate.edu","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_process_geographic_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the distances between a location and all available stations — meteo_process_geographic_data","text":"","code":"if (FALSE) { station_data <- ghcnd_stations() meteo_process_geographic_data(station_data, lat=-33, long=151) }"},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_pull_monitors.html","id":null,"dir":"Reference","previous_headings":"","what":"Pull GHCND weather data for multiple weather monitors — meteo_pull_monitors","title":"Pull GHCND weather data for multiple weather monitors — meteo_pull_monitors","text":"function takes vector one weather station IDs. pull weather data Global Historical Climatology Network's daily data (GHCND) stations join together single tidy dataframe. weather stations user calls available ftp GHCND, function return warning giving station ID.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_pull_monitors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pull GHCND weather data for multiple weather monitors — meteo_pull_monitors","text":"","code":"meteo_pull_monitors(   monitors,   keep_flags = FALSE,   date_min = NULL,   date_max = NULL,   var = \"all\" )"},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_pull_monitors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pull GHCND weather data for multiple weather monitors — meteo_pull_monitors","text":"monitors character vector listing station IDs weather stations user like pull. get full current list stations, user can use ghcnd_stations() function. identify stations within certain radius location, user can use meteo_nearby_stations() function. keep_flags TRUE / FALSE whether user like keep flags weather variable. default keep flags (FALSE). See note information flags. date_min character string giving earliest date daily weather time series user like final output. character string formatted \"yyyy-mm-dd\". specified, default keep daily data queried weather site earliest available date. date_max character string giving latest date daily weather time series user like final output. character string formatted \"yyyy-mm-dd\". specified, default keep daily data queried weather site current available date. var character vector specifying either \"\" (pull available weather parameters site) weather parameters keep final data (e.g., c(\"TMAX\", \"TMIN\") keep maximum minimum temperature). Example choices argument include: PRCP: Precipitation, tenths millimeters TAVG: Average temperature, tenths degrees Celsius TMAX: Maximum temperature, tenths degrees Celsius TMIN: Minimum temperature, tenths degrees Celsius full list possible weather variables available NOAA's README file GHCND data (https://www1.ncdc.noaa.gov/pub/data/ghcn/daily/readme.txt). weather stations small subset possible weather variables, data generated function may include variables user specifies argument.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_pull_monitors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pull GHCND weather data for multiple weather monitors — meteo_pull_monitors","text":"data frame daily weather data multiple weather monitors, converted tidy format. weather variables may exist weather stations. Examples variables returned : id: Character string weather station site id date: Date observation prcp: Precipitation, tenths mm tavg: Average temperature, tenths degrees Celsius tmax: Maximum temperature, tenths degrees Celsius tmin: Minimum temperature, tenths degrees Celsius awnd: Average daily wind speed, meters / second wsfg: Peak gust wind speed, meters / second possible weather variables Global Historical Climatology Network; see http://www1.ncdc.noaa.gov/pub/data/ghcn/daily/readme.txt full list. var argument something \"\", variables included argument included output data frame. variables units specified linked file (note , many cases, measurements given tenths units often used, e.g., tenths degrees temperature). column names correspond variable names linked file,  uppercase letters changed lowercase.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_pull_monitors.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Pull GHCND weather data for multiple weather monitors — meteo_pull_monitors","text":"weather flags, kept specifying keep_flags = TRUE : *_mflag: Measurement flag, gives information observation measured. *_qflag: Quality flag, gives quality information measurement, like failed pass certain quality checks. *_sflag: Source flag. gives information weather collection system (e.g., U.S. Cooperative Summary Day, Australian Bureau Meteorology) weather observation comes . information interpretation flags can found README file NCDC's Daily Global Historical Climatology Network's data http://www1.ncdc.noaa.gov/pub/data/ghcn/daily/readme.txt function converts value -9999 missing value variables \"prcp\", \"tmax\", \"tmin\", \"tavg\", \"snow\", \"snwd\". However, weather observations, still may missing values coded using series \"9\"s length. want check final data see lurking missing values given series \"9\"s. function may take run.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_pull_monitors.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Pull GHCND weather data for multiple weather monitors — meteo_pull_monitors","text":"information data pulled function, see: Menne, M.J., . Durre, R.S. Vose, B.E. Gleason, T.G. Houston, 2012: overview Global Historical Climatology Network-Daily Database. Journal Atmospheric Oceanic Technology, 29, 897-910, doi:10.1175/JTECH-D-11-00103.1.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_pull_monitors.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Pull GHCND weather data for multiple weather monitors — meteo_pull_monitors","text":"Brooke Anderson brooke.anderson@colostate.edu","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_pull_monitors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pull GHCND weather data for multiple weather monitors — meteo_pull_monitors","text":"","code":"if (FALSE) {  monitors <- c(\"ASN00003003\", \"ASM00094299\", \"ASM00094995\", \"ASM00094998\") all_monitors_clean <- meteo_pull_monitors(monitors)  }"},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_show_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Show the meteo cache directory — meteo_show_cache","title":"Show the meteo cache directory — meteo_show_cache","text":"Displays full path meteo cache directory","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_show_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show the meteo cache directory — meteo_show_cache","text":"","code":"meteo_show_cache()"},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_spherical_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the distance between two locations — meteo_spherical_distance","title":"Calculate the distance between two locations — meteo_spherical_distance","text":"function uses haversine formula calculate great circle distance two locations, identified latitudes longitudes.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_spherical_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the distance between two locations — meteo_spherical_distance","text":"","code":"meteo_spherical_distance(lat1, long1, lat2, long2, units = \"deg\")"},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_spherical_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the distance between two locations — meteo_spherical_distance","text":"lat1 Latitude first location. long1 Longitude first location. lat2 Latitude second location. long2 Longitude second location. units Units latitude longitude values. Possible values : deg: Degrees (default); rad: Radians.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_spherical_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the distance between two locations — meteo_spherical_distance","text":"numeric value giving distance (kilometers) pair locations.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_spherical_distance.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate the distance between two locations — meteo_spherical_distance","text":"function assumes earth radius 6,371 km.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_spherical_distance.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate the distance between two locations — meteo_spherical_distance","text":"Alex Simmons a2.simmons@qut.edu.au, Brooke Anderson brooke.anderson@colostate.edu","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_spherical_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the distance between two locations — meteo_spherical_distance","text":"","code":"meteo_spherical_distance(lat1 = -27.4667, long1 = 153.0217,                          lat2 = -27.4710, long2 = 153.0234) #> [1] 0.5067013"},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_tidy_ghcnd.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a tidy GHCND dataset from a single monitor — meteo_tidy_ghcnd","title":"Create a tidy GHCND dataset from a single monitor — meteo_tidy_ghcnd","text":"function inputs object created ghcnd cleans data tidy form.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_tidy_ghcnd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a tidy GHCND dataset from a single monitor — meteo_tidy_ghcnd","text":"","code":"meteo_tidy_ghcnd(   stationid,   keep_flags = FALSE,   var = \"all\",   date_min = NULL,   date_max = NULL )"},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_tidy_ghcnd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a tidy GHCND dataset from a single monitor — meteo_tidy_ghcnd","text":"stationid (character) character vector giving identification weather stations user like pull data. get full current list stations, user can use ghcnd_stations() function. identify stations within certain radius location, user can use meteo_nearby_stations() function. keep_flags TRUE / FALSE whether user like keep flags weather variable. default keep flags (FALSE). See note information flags. var character vector specifying either \"\" (pull available weather parameters site) weather parameters keep final data (e.g., c(\"TMAX\", \"TMIN\") keep maximum minimum temperature). Example choices argument include: PRCP: Precipitation, tenths millimeters TAVG: Average temperature, tenths degrees Celsius TMAX: Maximum temperature, tenths degrees Celsius TMIN: Minimum temperature, tenths degrees Celsius full list possible weather variables available NOAA's README file GHCND data (https://www1.ncdc.noaa.gov/pub/data/ghcn/daily/readme.txt). weather stations small subset possible weather variables, data generated function may include variables user specifies argument. date_min character string giving earliest date daily weather time series user like final output. character string formatted \"yyyy-mm-dd\". specified, default keep daily data queried weather site earliest available date. date_max character string giving latest date daily weather time series user like final output. character string formatted \"yyyy-mm-dd\". specified, default keep daily data queried weather site current available date.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_tidy_ghcnd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a tidy GHCND dataset from a single monitor — meteo_tidy_ghcnd","text":"data frame daily weather data single weather monitor, converted tidy format. weather variables may exist weather stations. Examples variables returned : id: Character string weather station site id date: Date observation prcp: Precipitation, tenths mm tavg: Average temperature, degrees Celsius tmax: Maximum temperature, degrees Celsius tmin: Minimum temperature, degrees Celsius awnd: Average daily wind speed, meters / second wsfg: Peak gust wind speed, meters / second possible weather variables Global Historical Climatology Network; see http://www1.ncdc.noaa.gov/pub/data/ghcn/daily/readme.txt full list. variables prcp, tmax, tmin, tavg converted tenths metric metric (e.g., tenths degrees Celsius degrees Celsius). variables units specified linked file.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_tidy_ghcnd.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a tidy GHCND dataset from a single monitor — meteo_tidy_ghcnd","text":"weather flags, kept specifying keep_flags = TRUE : *_mflag: Measurement flag, gives information observation measured. *_qflag: Quality flag, gives quality information measurement, like failed pass certain quality checks. *_sflag: Source flag. gives information weather collection system (e.g., U.S. Cooperative Summary Day, Australian Bureau Meteorology) weather observation comes . information interpretation flags can found README file NCDC's Daily Global Historical Climatology Network's data http://www1.ncdc.noaa.gov/pub/data/ghcn/daily/readme.txt","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_tidy_ghcnd.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a tidy GHCND dataset from a single monitor — meteo_tidy_ghcnd","text":"Brooke Anderson brooke.anderson@colostate.edu","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_tidy_ghcnd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a tidy GHCND dataset from a single monitor — meteo_tidy_ghcnd","text":"","code":"if (FALSE) { # One station in Australia is ASM00094275 meteo_tidy_ghcnd(stationid = \"ASN00003003\") meteo_tidy_ghcnd(stationid = \"ASN00003003\", var = \"tavg\") meteo_tidy_ghcnd(stationid = \"ASN00003003\", date_min = \"1989-01-01\") }"},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_tidy_ghcnd_element.html","id":null,"dir":"Reference","previous_headings":"","what":"Restructure element of ghcnd_search list — meteo_tidy_ghcnd_element","title":"Restructure element of ghcnd_search list — meteo_tidy_ghcnd_element","text":"function restructures output ghcnd_search() add column giving variable name (key) change name variable column value. changes facilitate combining elements list created ghcnd_search(), create tidy dataframe weather observations station.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_tidy_ghcnd_element.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restructure element of ghcnd_search list — meteo_tidy_ghcnd_element","text":"","code":"meteo_tidy_ghcnd_element(x, keep_flags = FALSE)"},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_tidy_ghcnd_element.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restructure element of ghcnd_search list — meteo_tidy_ghcnd_element","text":"x dataframe daily observations single monitor single weather variable. dataframe one elements returned ghcnd_search() keep_flags TRUE / FALSE whether user like keep flags weather variable. default keep flags (FALSE). See note information flags.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_tidy_ghcnd_element.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Restructure element of ghcnd_search list — meteo_tidy_ghcnd_element","text":"dataframe reformatted allow easy aggregation weather variables single monitor.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/meteo_tidy_ghcnd_element.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Restructure element of ghcnd_search list — meteo_tidy_ghcnd_element","text":"Brooke Anderson brooke.anderson@colostate.edu","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for and get NOAA NCDC data — ncdc","title":"Search for and get NOAA NCDC data — ncdc","text":"Search get NOAA NCDC data","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for and get NOAA NCDC data — ncdc","text":"","code":"ncdc(   datasetid = NULL,   datatypeid = NULL,   stationid = NULL,   locationid = NULL,   startdate = NULL,   enddate = NULL,   sortfield = NULL,   sortorder = NULL,   limit = 25,   offset = NULL,   token = NULL,   includemetadata = TRUE,   add_units = FALSE,   ... )"},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for and get NOAA NCDC data — ncdc","text":"datasetid (required) Accepts single valid dataset id. Data returned dataset specified, see ncdc_datasets datatypeid Accepts valid data type id vector list data type ids. (optional) stationid Accepts valid station id vector list station ids locationid Accepts valid location id vector list location ids (optional) startdate (character/date) Accepts valid ISO formated date (yyyy-mm-dd) date time (YYYY-MM-DDThh:mm:ss). Data returned data specified date. date range must less 1 year. required. enddate (character/date) Accepts valid ISO formated date (yyyy-mm-dd) date time (YYYY-MM-DDThh:mm:ss). Data returned data specified date. date range must less 1 year. required. sortfield field sort results . Supports id, name, mindate, maxdate, datacoverage fields (optional) sortorder order sort , asc desc. Defaults asc (optional) limit Defaults 25, limits number results response. Maximum 1000 (optional) offset Defaults 0, used offset resultlist (optional) token must valid token token supplied NCDC's Climate Data Online access token generator. (required) See Authentication section details. includemetadata Used improve response time preventing calculation result metadata. Default: TRUE. affect return object, named part output list called \"meta\" still returned, NULL. practice, seen response time's improve, perhaps . add_units (logical) whether add units information . default: FALSE. TRUE, getting data NOAA add new column units. See \"Adding units\" Details ... Curl options passed HttpClient (optional)","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for and get NOAA NCDC data — ncdc","text":"S3 list length two, slot metadata (meta), slot data (data). meta slot list metadata elements, data slot data.frame, possibly length zero data found. Note values data slot indicate units default, want either use add_units parameter (experimental, see Adding units) consult documentation dataset ensure using correct units.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search for and get NOAA NCDC data — ncdc","text":"Note NOAA NCDC API calls can take long time depending call. NOAA API perform well long timespans, time make angry - beware. Keep mind three parameters, datasetid, startdate, enddate required. Note default limit (. records returned) 25. Look metadata $meta see many records found. found 25, set parameter limit something higher 25.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc.html","id":"authentication","dir":"Reference","previous_headings":"","what":"Authentication","title":"Search for and get NOAA NCDC data — ncdc","text":"Get API key (aka, token) https://www.ncdc.noaa.gov/cdo-web/token can pass token argument store one two places: .Rprofile file entry options(noaakey = \"-noaa-token\") .Renviron file entry NOAA_KEY=-noaa-token See Startup information create/find .Rrofile .Renviron files","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc.html","id":"flags","dir":"Reference","previous_headings":"","what":"Flags","title":"Search for and get NOAA NCDC data — ncdc","text":"attributes, \"flags\", row output data may flag . datasetid set flags. following flag columns, stand . fl_ beginning flag column name, one characters describe flag, keeping short maintain compact data frame. fields across datasetids. See vignette vignette(\"rnoaa_attributes\", \"rnoaa\") description possible values flag. fl_c completeness fl_d day fl_m measurement fl_q quality fl_s source fl_t time fl_cmiss consecutive missing fl_miss missing fl_u units","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc.html","id":"gsom-gsoy-flags","dir":"Reference","previous_headings":"","what":"GSOM/GSOY Flags","title":"Search for and get NOAA NCDC data — ncdc","text":"Note flags different GSOM GSOY datasets. set flags per data class. See system.file(\"extdata/gsom.json\", package = \"rnoaa\") GSOM system.file(\"extdata/gsom.json\", package = \"rnoaa\") GSOY. JSON files. system.file() call gives path, read jsonlite::fromJSON() give data.frame metadata. detailed info plain text, open system.file(\"extdata/gsom_readme.txt\", package = \"rnoaa\") system.file(\"extdata/gsoy_readme.txt\", package = \"rnoaa\") text editor.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc.html","id":"adding-units","dir":"Reference","previous_headings":"","what":"Adding units","title":"Search for and get NOAA NCDC data — ncdc","text":"add_units parameter experimental - USE CAUTION! add_units=TRUE pull data curated lists data used matching datasetid data type. attempted gather much information possible many, many data types across many different NOAA data sets. However, may got things wrong, make sure double check data get add units. Get touch find units wrong missing, able help correct information.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for and get NOAA NCDC data — ncdc","text":"","code":"if (FALSE) { # GHCN-Daily (or GHCND) data, for a specific station ncdc(datasetid='GHCND', stationid='GHCND:USW00014895',    startdate = '2013-10-01', enddate = '2013-12-01') ### also accepts dates as class Date ncdc(datasetid='GHCND', stationid='GHCND:USW00014895',    startdate = as.Date('2013-10-01'), enddate = as.Date('2013-12-01'))  # GHCND data, for a location by FIPS code ncdc(datasetid='GHCND', locationid = 'FIPS:02', startdate = '2010-05-01',    enddate = '2010-05-10')  # GHCND data from October 1 2013 to December 1 2013 ncdc(datasetid='GHCND', startdate = '2013-10-01', enddate = '2013-10-05')  # GHCN-Monthly (or GSOM) data from October 1 2013 to December 1 2013 ncdc(datasetid='GSOM', startdate = '2013-10-01', enddate = '2013-12-01') ncdc(datasetid='GSOM', startdate = '2013-10-01', enddate = '2013-12-01',    stationid = \"GHCND:AE000041196\")  # Normals Daily (or NORMAL_DLY) GHCND:USW00014895 dly-tmax-normal data ncdc(datasetid='NORMAL_DLY', stationid='GHCND:USW00014895',    startdate = '2010-05-01', enddate = '2010-05-10')  # Dataset, and location in Australia ncdc(datasetid='GHCND', locationid='FIPS:AS', startdate = '2010-05-01',     enddate = '2010-05-31')  # Dataset, location and datatype for PRECIP_HLY data ncdc(datasetid='PRECIP_HLY', locationid='ZIP:28801', datatypeid='HPCP',    startdate = '2010-05-01', enddate = '2010-05-10')  # multiple datatypeid's ncdc(datasetid='PRECIP_HLY', datatypeid = 'HPCP',    startdate = '2010-05-01', enddate = '2010-05-10')  # multiple locationid's ncdc(datasetid='PRECIP_HLY', locationid=c(\"FIPS:30103\", \"FIPS:30091\"),    startdate = '2010-05-01', enddate = '2010-05-10')  # Dataset, location, station and datatype ncdc(datasetid='PRECIP_HLY', locationid='ZIP:28801',    stationid='COOP:310301', datatypeid='HPCP',    startdate = '2010-05-01', enddate = '2010-05-10')  # Dataset, location, and datatype for GHCND ncdc(datasetid='GHCND', locationid='FIPS:BR', datatypeid='PRCP',    startdate = '2010-05-01', enddate = '2010-05-10')  # Normals Daily GHCND dly-tmax-normal data ncdc(datasetid='NORMAL_DLY', datatypeid='dly-tmax-normal',    startdate = '2010-05-01', enddate = '2010-05-10')  # Normals Daily GHCND:USW00014895 dly-tmax-normal ncdc(datasetid='NORMAL_DLY', stationid='GHCND:USW00014895',    datatypeid='dly-tmax-normal',    startdate = '2010-05-01', enddate = '2010-05-10')  # Hourly Precipitation data for ZIP code 28801 ncdc(datasetid='PRECIP_HLY', locationid='ZIP:28801', datatypeid='HPCP',    startdate = '2010-05-01', enddate = '2010-05-10')  # 15 min Precipitation data for ZIP code 28801 ncdc(datasetid='PRECIP_15', datatypeid='QPCP',    startdate = '2010-05-01', enddate = '2010-05-02')  # Search the NORMAL_HLY dataset ncdc(datasetid='NORMAL_HLY', stationid = 'GHCND:USW00003812',    startdate = '2010-05-01', enddate = '2010-05-10')  # Search the GSOY dataset ncdc(datasetid='ANNUAL', locationid='ZIP:28801', startdate = '2010-05-01',    enddate = '2010-05-10')  # Search the NORMAL_ANN dataset ncdc(datasetid='NORMAL_ANN', datatypeid='ANN-DUTR-NORMAL',    startdate = '2010-01-01', enddate = '2010-01-01')  # Include metadata or not ncdc(datasetid='GHCND', stationid='GHCND:USW00014895',    startdate = '2013-10-01', enddate = '2013-12-01') ncdc(datasetid='GHCND', stationid='GHCND:USW00014895',    startdate = '2013-10-01', enddate = '2013-12-01', includemetadata=FALSE)  # Many stationid's stat <- ncdc_stations(startdate = \"2000-01-01\", enddate = \"2016-01-01\") ## find out what datasets might be available for these stations ncdc_datasets(stationid = stat$data$id[10]) ## get some data ncdc(datasetid = \"GSOY\", stationid = stat$data$id[1:10],    startdate = \"2010-01-01\", enddate = \"2011-01-01\") }  if (FALSE) { # NEXRAD2 data ## doesn't work yet ncdc(datasetid='NEXRAD2', startdate = '2013-10-01', enddate = '2013-12-01') }"},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_combine.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce multiple outputs to a single data.frame object. — ncdc_combine","title":"Coerce multiple outputs to a single data.frame object. — ncdc_combine","text":"Coerce multiple outputs single data.frame object.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_combine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce multiple outputs to a single data.frame object. — ncdc_combine","text":"","code":"ncdc_combine(...)"},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_combine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce multiple outputs to a single data.frame object. — ncdc_combine","text":"... Objects another ncdc_* function.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_combine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce multiple outputs to a single data.frame object. — ncdc_combine","text":"data.frame","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_combine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce multiple outputs to a single data.frame object. — ncdc_combine","text":"","code":"if (FALSE) { # data out1 <- ncdc(datasetid='GHCND', locationid = 'FIPS:02', startdate = '2010-05-01', enddate = '2010-05-31', limit=10) out2 <- ncdc(datasetid='GHCND', locationid = 'FIPS:02', startdate = '2010-07-01', enddate = '2010-07-31', limit=10) ncdc_combine(out1, out2)  # data sets out1 <- ncdc_datasets(datatypeid='TOBS') out2 <- ncdc_datasets(datatypeid='PRCP') ncdc_combine(out1, out2)  # data types out1 <- ncdc_datatypes(datatypeid=\"ACMH\") out2 <- ncdc_datatypes(datatypeid='PRCP') ncdc_combine(out1, out2)  # data categories out1 <- ncdc_datacats(datacategoryid=\"ANNAGR\") out2 <- ncdc_datacats(datacategoryid='PRCP') ncdc_combine(out1, out2)  # data locations out1 <- ncdc_locs(locationcategoryid='ST', limit=52) out2 <- ncdc_locs(locationcategoryid='CITY', sortfield='name', sortorder='desc') ncdc_combine(out1, out2)  # data locations out1 <- ncdc_locs_cats(startdate='1970-01-01') out2 <- ncdc_locs_cats(locationcategoryid='CLIM_REG') ncdc_combine(out1, out2)  # stations out1 <- ncdc_stations(datasetid='GHCND', locationid='FIPS:12017', stationid='GHCND:USC00084289') out2 <- ncdc_stations(stationid='COOP:010008') out3 <- ncdc_stations(datasetid='PRECIP_HLY', startdate='19900101', enddate='19901231') out4 <- ncdc_stations(datasetid='GHCND', locationid='FIPS:12017') ncdc_combine(out1, out2, out3, out4)  # try to combine two different classes out1 <- ncdc_locs_cats(startdate='1970-01-01') out2 <- ncdc_stations(stationid='COOP:010008') out3 <- ncdc_locs_cats(locationcategoryid='CLIM_REG') ncdc_combine(out1, out2, out3) }"},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_datacats.html","id":null,"dir":"Reference","previous_headings":"","what":"Get possible data categories for a particular datasetid, locationid,\nstationid, etc. — ncdc_datacats","title":"Get possible data categories for a particular datasetid, locationid,\nstationid, etc. — ncdc_datacats","text":"Data Categories represent groupings data types.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_datacats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get possible data categories for a particular datasetid, locationid,\nstationid, etc. — ncdc_datacats","text":"","code":"ncdc_datacats(   datasetid = NULL,   datacategoryid = NULL,   stationid = NULL,   locationid = NULL,   startdate = NULL,   enddate = NULL,   sortfield = NULL,   sortorder = NULL,   limit = 25,   offset = NULL,   token = NULL,   ... )"},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_datacats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get possible data categories for a particular datasetid, locationid,\nstationid, etc. — ncdc_datacats","text":"datasetid Accepts valid dataset id vector list dataset id's. Data returned dataset specified, see datasets() (required) datacategoryid valid data category id. Data types returned associated data category(ies) specified stationid Accepts valid station id vector list station ids (optional) locationid Accepts valid location id vector list location id's. (optional) startdate Accepts valid ISO formated date (yyyy-mm-dd). Data returned data specified date. Paramater can use independently enddate (optional) enddate Accepts valid ISO formated date (yyyy-mm-dd). Data returned data specified date. Paramater can use independently startdate (optional) sortfield field sort results . Supports id, name, mindate, maxdate, datacoverage fields (optional) sortorder order sort , asc desc. Defaults asc (optional) limit Defaults 25, limits number results response. Maximum 1000 (optional) offset Defaults 0, used offset resultlist (optional) token must valid token token supplied NCDC's Climate Data Online access token generator. (required) See Authentication section details. ... Curl options passed HttpClient","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_datacats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get possible data categories for a particular datasetid, locationid,\nstationid, etc. — ncdc_datacats","text":"data.frame datasets, list length two, data.frame.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_datacats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get possible data categories for a particular datasetid, locationid,\nstationid, etc. — ncdc_datacats","text":"Note calls startdate enddate seem work, though specifying one mostly works.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_datacats.html","id":"authentication","dir":"Reference","previous_headings":"","what":"Authentication","title":"Get possible data categories for a particular datasetid, locationid,\nstationid, etc. — ncdc_datacats","text":"Get API key (aka, token) https://www.ncdc.noaa.gov/cdo-web/token can pass token argument store one two places: .Rprofile file entry options(noaakey = \"-noaa-token\") .Renviron file entry NOAA_KEY=-noaa-token See Startup information create/find .Rrofile .Renviron files","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_datacats.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get possible data categories for a particular datasetid, locationid,\nstationid, etc. — ncdc_datacats","text":"https://www.ncdc.noaa.gov/cdo-web/webservices/v2","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_datacats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get possible data categories for a particular datasetid, locationid,\nstationid, etc. — ncdc_datacats","text":"","code":"if (FALSE) { ## Limit to 10 results ncdc_datacats(limit=10)  ## by datasetid ncdc_datacats(datasetid=\"ANNUAL\") ncdc_datacats(datasetid=c(\"ANNUAL\", \"PRECIP_HLY\"))  ## Single data category ncdc_datacats(datacategoryid=\"ANNAGR\")  ## Fetch data categories for a given set of locations ncdc_datacats(locationid='CITY:US390029') ncdc_datacats(locationid=c('CITY:US390029', 'FIPS:37'))  ## Data categories for a given date ncdc_datacats(startdate = '2013-10-01')  # Get data categories with data for a series of the same parameter arg, in this case # stationid's ncdc_datacats(stationid='COOP:310090') ncdc_datacats(stationid=c('COOP:310090','COOP:310184','COOP:310212'))  ## Curl debugging ncdc_datacats(limit=10, verbose = TRUE) }"},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"Search NOAA datasets — ncdc_datasets","title":"Search NOAA datasets — ncdc_datasets","text":"NOAA API docs: data datasets. retrieve data us, must know dataset .","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search NOAA datasets — ncdc_datasets","text":"","code":"ncdc_datasets(   datasetid = NULL,   datatypeid = NULL,   stationid = NULL,   locationid = NULL,   startdate = NULL,   enddate = NULL,   sortfield = NULL,   sortorder = NULL,   limit = 25,   offset = NULL,   token = NULL,   ... )"},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_datasets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search NOAA datasets — ncdc_datasets","text":"datasetid (optional) Accepts single valid dataset id. Data returned dataset specified. datatypeid Accepts valid data type id vector list data type ids. (optional) stationid Accepts valid station id vector list station ids locationid Accepts valid location id vector list location ids (optional) startdate (optional) Accepts valid ISO formated date (yyyy-mm-dd) date time (YYYY-MM-DDThh:mm:ss). Data returned data specified date. date range must less 1 year. enddate (optional) Accepts valid ISO formated date (yyyy-mm-dd) date time (YYYY-MM-DDThh:mm:ss). Data returned data specified date. date range must less 1 year. sortfield field sort results . Supports id, name, mindate, maxdate, datacoverage fields (optional) sortorder order sort , asc desc. Defaults asc (optional) limit Defaults 25, limits number results response. Maximum 1000 (optional) offset Defaults 0, used offset resultlist (optional) token must valid token token supplied NCDC's Climate Data Online access token generator. (required) See Authentication section details. ... Curl options passed HttpClient (optional)","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_datasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search NOAA datasets — ncdc_datasets","text":"data.frame datasets, list length two, data.frame.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_datasets.html","id":"authentication","dir":"Reference","previous_headings":"","what":"Authentication","title":"Search NOAA datasets — ncdc_datasets","text":"Get API key (aka, token) https://www.ncdc.noaa.gov/cdo-web/token can pass token argument store one two places: .Rprofile file entry options(noaakey = \"-noaa-token\") .Renviron file entry NOAA_KEY=-noaa-token See Startup information create/find .Rrofile .Renviron files","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_datasets.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Search NOAA datasets — ncdc_datasets","text":"https://www.ncdc.noaa.gov/cdo-web/webservices/v2","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_datasets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search NOAA datasets — ncdc_datasets","text":"","code":"if (FALSE) { # Get a table of all datasets ncdc_datasets()  # Get details from a particular dataset ncdc_datasets(datasetid='ANNUAL')  # Get datasets with Temperature at the time of observation (TOBS) data type ncdc_datasets(datatypeid='TOBS') ## two datatypeid's ncdc_datasets(datatypeid=c('TOBS', \"ACMH\"))  # Get datasets with data for a series of the same parameter arg, in this case # stationid's ncdc_datasets(stationid='COOP:310090') ncdc_datasets(stationid=c('COOP:310090','COOP:310184','COOP:310212'))  # Multiple datatypeid's ncdc_datasets(datatypeid=c('ACMC','ACMH','ACSC')) ncdc_datasets(datasetid='ANNUAL', datatypeid=c('ACMC','ACMH','ACSC')) ncdc_datasets(datasetid='GSOY', datatypeid=c('ACMC','ACMH','ACSC'))  # Multiple locationid's ncdc_datasets(locationid=\"FIPS:30091\") ncdc_datasets(locationid=c(\"FIPS:30103\", \"FIPS:30091\")) }"},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_datatypes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get possible data types for a particular dataset — ncdc_datatypes","title":"Get possible data types for a particular dataset — ncdc_datatypes","text":"NOAA API docs: Describes type data, acts label. example: 64 degrees right now, data type Air Temperature data 64.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_datatypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get possible data types for a particular dataset — ncdc_datatypes","text":"","code":"ncdc_datatypes(   datasetid = NULL,   datatypeid = NULL,   datacategoryid = NULL,   stationid = NULL,   locationid = NULL,   startdate = NULL,   enddate = NULL,   sortfield = NULL,   sortorder = NULL,   limit = 25,   offset = NULL,   token = NULL,   ... )"},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_datatypes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get possible data types for a particular dataset — ncdc_datatypes","text":"datasetid (optional) Accepts valid dataset id vector list . Data returned dataset specified. datatypeid Accepts valid data type id vector list data type ids. (optional) datacategoryid Optional. Accepts valid data category id vector list data category ids (although rare data type one data category) stationid Accepts valid station id vector list station ids locationid Accepts valid location id vector list location ids (optional) startdate (optional) Accepts valid ISO formated date (yyyy-mm-dd) date time (YYYY-MM-DDThh:mm:ss). Data returned data specified date. date range must less 1 year. enddate (optional) Accepts valid ISO formated date (yyyy-mm-dd) date time (YYYY-MM-DDThh:mm:ss). Data returned data specified date. date range must less 1 year. sortfield field sort results . Supports id, name, mindate, maxdate, datacoverage fields (optional) sortorder order sort , asc desc. Defaults asc (optional) limit Defaults 25, limits number results response. Maximum 1000 (optional) offset Defaults 0, used offset resultlist (optional) token must valid token token supplied NCDC's Climate Data Online access token generator. (required) See Authentication section details. ... Curl options passed HttpClient (optional)","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_datatypes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get possible data types for a particular dataset — ncdc_datatypes","text":"data.frame datasets, list length two, data.frame","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_datatypes.html","id":"authentication","dir":"Reference","previous_headings":"","what":"Authentication","title":"Get possible data types for a particular dataset — ncdc_datatypes","text":"Get API key (aka, token) https://www.ncdc.noaa.gov/cdo-web/token can pass token argument store one two places: .Rprofile file entry options(noaakey = \"-noaa-token\") .Renviron file entry NOAA_KEY=-noaa-token See Startup information create/find .Rrofile .Renviron files","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_datatypes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get possible data types for a particular dataset — ncdc_datatypes","text":"https://www.ncdc.noaa.gov/cdo-web/webservices/v2","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_datatypes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get possible data types for a particular dataset — ncdc_datatypes","text":"","code":"if (FALSE) { # Fetch available data types ncdc_datatypes()  # Fetch more information about the ACMH data type id, or the ACSC ncdc_datatypes(datatypeid=\"ACMH\") ncdc_datatypes(datatypeid=\"ACSC\")  # datasetid, one or many ## ANNUAL should be replaced by GSOY, but both exist and give ## different answers ncdc_datatypes(datasetid=\"ANNUAL\") ncdc_datatypes(datasetid=\"GSOY\") ncdc_datatypes(datasetid=c(\"ANNUAL\", \"PRECIP_HLY\"))  # Fetch data types with the air temperature data category ncdc_datatypes(datacategoryid=\"TEMP\", limit=56) ncdc_datatypes(datacategoryid=c(\"TEMP\", \"AUPRCP\"))  # Fetch data types that support a given set of stations ncdc_datatypes(stationid='COOP:310090') ncdc_datatypes(stationid=c('COOP:310090','COOP:310184','COOP:310212'))  # Fetch data types that support a given set of loncationids ncdc_datatypes(locationid='CITY:AG000001') ncdc_datatypes(locationid=c('CITY:AG000001','CITY:AG000004')) }"},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_locs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get metadata about NOAA NCDC locations. — ncdc_locs","title":"Get metadata about NOAA NCDC locations. — ncdc_locs","text":"NOAA NCDC API docs: Locations can specific latitude/longitude point station, label representing bounding area city.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_locs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get metadata about NOAA NCDC locations. — ncdc_locs","text":"","code":"ncdc_locs(   datasetid = NULL,   locationid = NULL,   locationcategoryid = NULL,   startdate = NULL,   enddate = NULL,   sortfield = NULL,   sortorder = NULL,   limit = 25,   offset = NULL,   token = NULL,   ... )"},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_locs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get metadata about NOAA NCDC locations. — ncdc_locs","text":"datasetid valid dataset id vector list dataset id's. Data returned dataset specified, see datasets() (required) locationid valid location id vector list location ids. locationcategoryid valid location id vector list location category ids startdate valid ISO formatted date (yyyy-mm-dd). Data returned data specified date. Paramater can use independently enddate (optional) enddate Accepts valid ISO formatted date (yyyy-mm-dd). Data returned data specified date. Paramater can use independently startdate (optional) sortfield field sort results . Supports id, name, mindate, maxdate, datacoverage fields (optional) sortorder order sort , asc desc. Defaults asc (optional) limit Defaults 25, limits number results response. Maximum 1000 (optional) offset Defaults 0, used offset resultlist (optional) token must valid token token supplied NCDC's Climate Data Online access token generator. (required) See Authentication section details. ... Curl options passed HttpClient","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_locs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get metadata about NOAA NCDC locations. — ncdc_locs","text":"list containing metadata data, single data.frame.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_locs.html","id":"authentication","dir":"Reference","previous_headings":"","what":"Authentication","title":"Get metadata about NOAA NCDC locations. — ncdc_locs","text":"Get API key (aka, token) https://www.ncdc.noaa.gov/cdo-web/token can pass token argument store one two places: .Rprofile file entry options(noaakey = \"-noaa-token\") .Renviron file entry NOAA_KEY=-noaa-token See Startup information create/find .Rrofile .Renviron files","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_locs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get metadata about NOAA NCDC locations. — ncdc_locs","text":"https://www.ncdc.noaa.gov/cdo-web/webservices/v2","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_locs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get metadata about NOAA NCDC locations. — ncdc_locs","text":"","code":"if (FALSE) { # All locations, first 25 results ncdc_locs()  # Fetch more information about location id FIPS:37 ncdc_locs(locationid='FIPS:37')  # Fetch available locations for the GHCND (Daily Summaries) dataset ncdc_locs(datasetid='GHCND') ncdc_locs(datasetid=c('GHCND', 'ANNUAL')) ncdc_locs(datasetid=c('GSOY', 'ANNUAL')) ncdc_locs(datasetid=c('GHCND', 'GSOM'))  # Fetch all U.S. States ncdc_locs(locationcategoryid='ST', limit=52)  # Many locationcategoryid's ## this apparently works, but returns nothing often with multiple ## locationcategoryid's ncdc_locs(locationcategoryid=c('ST', 'ZIP'))  # Fetch list of city locations in descending order ncdc_locs(locationcategoryid='CITY', sortfield='name', sortorder='desc') }"},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_locs_cats.html","id":null,"dir":"Reference","previous_headings":"","what":"Get metadata about NOAA location categories. — ncdc_locs_cats","title":"Get metadata about NOAA location categories. — ncdc_locs_cats","text":"Location categories groupings similar locations.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_locs_cats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get metadata about NOAA location categories. — ncdc_locs_cats","text":"","code":"ncdc_locs_cats(   datasetid = NULL,   locationcategoryid = NULL,   startdate = NULL,   enddate = NULL,   sortfield = NULL,   sortorder = NULL,   limit = 25,   offset = NULL,   token = NULL,   ... )"},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_locs_cats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get metadata about NOAA location categories. — ncdc_locs_cats","text":"datasetid valid dataset id vector list dataset id's. Data returned dataset specified, see datasets() (required) locationcategoryid valid location id vector list location category ids startdate valid ISO formatted date (yyyy-mm-dd). Data returned data specified date. Paramater can use independently enddate (optional) enddate Accepts valid ISO formatted date (yyyy-mm-dd). Data returned data specified date. Paramater can use independently startdate (optional) sortfield field sort results . Supports id, name, mindate, maxdate, datacoverage fields (optional) sortorder order sort , asc desc. Defaults asc (optional) limit Defaults 25, limits number results response. Maximum 1000 (optional) offset Defaults 0, used offset resultlist (optional) token must valid token token supplied NCDC's Climate Data Online access token generator. (required) See Authentication section details. ... Curl options passed HttpClient","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_locs_cats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get metadata about NOAA location categories. — ncdc_locs_cats","text":"list containing metadata data, single data.frame.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_locs_cats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get metadata about NOAA location categories. — ncdc_locs_cats","text":"Locations can specific latitude/longitude point station, label representing bounding area city.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_locs_cats.html","id":"authentication","dir":"Reference","previous_headings":"","what":"Authentication","title":"Get metadata about NOAA location categories. — ncdc_locs_cats","text":"Get API key (aka, token) https://www.ncdc.noaa.gov/cdo-web/token can pass token argument store one two places: .Rprofile file entry options(noaakey = \"-noaa-token\") .Renviron file entry NOAA_KEY=-noaa-token See Startup information create/find .Rrofile .Renviron files","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_locs_cats.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get metadata about NOAA location categories. — ncdc_locs_cats","text":"https://www.ncdc.noaa.gov/cdo-web/webservices/v2","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_locs_cats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get metadata about NOAA location categories. — ncdc_locs_cats","text":"","code":"if (FALSE) { # All location categories, first 25 results ncdc_locs_cats()  # Find locations with category id of CLIM_REG ncdc_locs_cats(locationcategoryid='CLIM_REG')  # Displays available location categories within GHCN-Daily dataset ncdc_locs_cats(datasetid='GHCND') ncdc_locs_cats(datasetid='GSOY') ncdc_locs_cats(datasetid='ANNUAL')  # multiple datasetid's ncdc_locs_cats(datasetid=c('GHCND', 'GSOM'))  # Displays available location categories from start date 1970-01-01 ncdc_locs_cats(startdate='1970-01-01') }"},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot NOAA climate data. — ncdc_plot","title":"Plot NOAA climate data. — ncdc_plot","text":"Plot NOAA climate data.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot NOAA climate data. — ncdc_plot","text":"","code":"ncdc_plot(..., breaks = NULL, dateformat = \"%d/%m/%y\")"},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot NOAA climate data. — ncdc_plot","text":"... Input noaa object objects. breaks Regularly spaced date breaks x-axis. See examples usage. See date_breaks. Default: NULL (uses ggplot2 default break sformatting) dateformat Date format using standard POSIX specification labels x-axis. See date_format()","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot NOAA climate data. — ncdc_plot","text":"ggplot2 plot","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot NOAA climate data. — ncdc_plot","text":"function accepts directly output ncdc() function, functions. simple wrapper function around ggplot2 code. indeed lot can modify plots, function just basic stuff. Look internals function .","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot NOAA climate data. — ncdc_plot","text":"","code":"if (FALSE) { # Search for data first, then plot out <- ncdc(datasetid='GHCND', stationid='GHCND:USW00014895', datatypeid='PRCP',    startdate = '2010-05-01', enddate = '2010-10-31', limit=500) ncdc_plot(out) ncdc_plot(out, breaks=\"14 days\") ncdc_plot(out, breaks=\"1 month\", dateformat=\"%d/%m\") ncdc_plot(out, breaks=\"1 month\", dateformat=\"%d/%m\")  # Combine many calls to ncdc function out1 <- ncdc(datasetid='GHCND', stationid='GHCND:USW00014895', datatypeid='PRCP',    startdate = '2010-03-01', enddate = '2010-05-31', limit=500) out2 <- ncdc(datasetid='GHCND', stationid='GHCND:USW00014895', datatypeid='PRCP',    startdate = '2010-09-01', enddate = '2010-10-31', limit=500) df <- ncdc_combine(out1, out2) ncdc_plot(df) ## or pass in each element separately ncdc_plot(out1, out2, breaks=\"45 days\") }"},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_stations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get metadata about NOAA NCDC stations. — ncdc_stations","title":"Get metadata about NOAA NCDC stations. — ncdc_stations","text":"NOAA NCDC API docs: Stations data comes (datasets) can considered smallest granual location data. know station want, can quickly get manner data ","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_stations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get metadata about NOAA NCDC stations. — ncdc_stations","text":"","code":"ncdc_stations(   stationid = NULL,   datasetid = NULL,   datatypeid = NULL,   locationid = NULL,   startdate = NULL,   enddate = NULL,   sortfield = NULL,   sortorder = NULL,   limit = 25,   offset = NULL,   datacategoryid = NULL,   extent = NULL,   token = NULL,   dataset = NULL,   station = NULL,   location = NULL,   locationtype = NULL,   page = NULL,   ... )"},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_stations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get metadata about NOAA NCDC stations. — ncdc_stations","text":"stationid single valid station id, datasetid namespace, e.g., GHCND:USW00014895 datasetid (optional) Accepts valid dataset id vector list . Data returned dataset specified. datatypeid Accepts valid data type id vector list data type ids. (optional) locationid Accepts valid location id vector list location ids (optional) startdate (optional) Accepts valid ISO formated date (yyyy-mm-dd) date time (YYYY-MM-DDThh:mm:ss). Data returned data specified date. date range must less 1 year. enddate (optional) Accepts valid ISO formated date (yyyy-mm-dd) date time (YYYY-MM-DDThh:mm:ss). Data returned data specified date. date range must less 1 year. sortfield field sort results . Supports id, name, mindate, maxdate, datacoverage fields (optional) sortorder order sort , asc desc. Defaults asc (optional) limit Defaults 25, limits number results response. Maximum 1000 (optional) offset Defaults 0, used offset resultlist (optional) datacategoryid (character, optional) Accepts valid data category id vector list data category ids. extent (numeric, optional) geographical extent want search. Give four values defines bounding box, lat long southwest corner, lat long northeast corner. example: c(minlat, minlong, maxlat, maxlong). token must valid token token supplied NCDC's Climate Data Online access token generator. (required) See Authentication section details. dataset DEPRECATED ARGUMENT. See datasetid. station DEPRECATED ARGUMENT. See stationid. location DEPRECATED ARGUMENT. See locationid. locationtype DEPRECATED ARGUMENT. equivalent argument v2 NOAA API. page DEPRECATED ARGUMENT. equivalent argument v2 NOAA API. ... Curl options passed HttpClient (optional)","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_stations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get metadata about NOAA NCDC stations. — ncdc_stations","text":"list metadata.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_stations.html","id":"authentication","dir":"Reference","previous_headings":"","what":"Authentication","title":"Get metadata about NOAA NCDC stations. — ncdc_stations","text":"Get API key (aka, token) https://www.ncdc.noaa.gov/cdo-web/token can pass token argument store one two places: .Rprofile file entry options(noaakey = \"-noaa-token\") .Renviron file entry NOAA_KEY=-noaa-token See Startup information create/find .Rrofile .Renviron files","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_stations.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get metadata about NOAA NCDC stations. — ncdc_stations","text":"https://www.ncdc.noaa.gov/cdo-web/webservices/v2","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_stations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get metadata about NOAA NCDC stations. — ncdc_stations","text":"","code":"if (FALSE) { # Get metadata on all stations ncdc_stations() ncdc_stations(limit=5)  # Get metadata on a single station ncdc_stations(stationid='COOP:010008')  # For many stations use lapply or similar lapply(c(\"COOP:010008\", \"COOP:010063\", \"COOP:010116\"), function(z) {   ncdc_stations(    startdate = \"2013-01-01\",    enddate = \"2014-11-01\",    stationid = z) }$data)  # Displays all stations within GHCN-Daily (100 Stations per page limit) ncdc_stations(datasetid = 'GHCND') ncdc_stations(datasetid = 'ANNUAL') ncdc_stations(datasetid = 'GSOY')  # Station ncdc_stations(datasetid='NORMAL_DLY', stationid='GHCND:USW00014895')  # datatypeid ncdc_stations(datatypeid=\"ANN-HTDD-NORMAL\") ncdc_stations(datatypeid=c(\"ANN-HTDD-NORMAL\", \"ACSC\"))  # locationid ncdc_stations(locationid=\"CITY:AG000001\") ncdc_stations(locationid=\"FIPS:30091\") ncdc_stations(locationid=c(\"FIPS:30103\", \"FIPS:30091\"))  # datacategoryid ncdc_stations(datacategoryid=\"ANNPRCP\") ncdc_stations(datacategoryid=\"AUAGR\") ncdc_stations(datacategoryid=c(\"ANNPRCP\", \"AUAGR\"))  # Displays all stations within GHCN-Daily (Displaying page 10 of the results) ncdc_stations(datasetid='GHCND')  # Specify datasetid and locationid ncdc_stations(datasetid='GHCND', locationid='FIPS:12017')  # Specify datasetid, locationid, and station ncdc_stations(datasetid='GHCND', locationid='FIPS:12017', stationid='GHCND:USC00084289')  # Specify datasetid, locationidtype, locationid, and station ncdc_stations(datasetid='GHCND', locationid='FIPS:12017', stationid='GHCND:USC00084289')  # Displays list of stations within the specified county ncdc_stations(datasetid='GHCND', locationid='FIPS:12017')  # Displays list of Hourly Precipitation locationids between 01/01/1990 and 12/31/1990 ncdc_stations(datasetid='PRECIP_HLY', startdate='19900101', enddate='19901231')  # Search for stations by spatial extent ## Search using a bounding box, w/ lat/long of the SW corner, then of NE corner ncdc_stations(extent=c(47.5204,-122.2047,47.6139,-122.1065)) }"},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_theme.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme for plotting NOAA data — ncdc_theme","title":"Theme for plotting NOAA data — ncdc_theme","text":"Theme plotting NOAA data","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/ncdc_theme.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme for plotting NOAA data — ncdc_theme","text":"","code":"ncdc_theme()"},{"path":"https://docs.ropensci.org/rnoaa/reference/readshpfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to read shapefiles — readshpfile","title":"Function to read shapefiles — readshpfile","text":"Function read shapefiles","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/readshpfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to read shapefiles — readshpfile","text":"","code":"readshpfile(x, storepath = NULL)"},{"path":"https://docs.ropensci.org/rnoaa/reference/readshpfile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to read shapefiles — readshpfile","text":"x url storepath Path store data ","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/readshpfile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to read shapefiles — readshpfile","text":"object class sp","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/rnoaa-defunct.html","id":null,"dir":"Reference","previous_headings":"","what":"Defunct functions in rnoaa — rnoaa-defunct","title":"Defunct functions in rnoaa — rnoaa-defunct","text":"noaa: Function name changed, prefixed ncdc now noaa_datacats: Function name changed, prefixed ncdc now noaa_datasets: Function name changed, prefixed ncdc now noaa_datatypes: Function name changed, prefixed ncdc now noaa_locs: Function name changed, prefixed ncdc now noaa_locs_cats: Function name changed, prefixed ncdc now noaa_stations: Function name changed, prefixed ncdc now noaa_plot: Function name changed, prefixed ncdc now noaa_combine: Function name changed, prefixed ncdc now noaa_seaice: Function name changed seaice erddap_data: See package rerddap erddap_clear_cache: See package rerddap erddap_datasets: Moved package rerddap erddap_grid: Moved package rerddap erddap_info: Moved rerddap::info() erddap_search: Moved rerddap::ed_search erddap_table: Moved rerddap::tabledap ncdc_leg_variables: Removed. See NCDC Legacy ncdc_leg_sites: Removed. See NCDC Legacy ncdc_leg_site_info: Removed. See NCDC Legacy ncdc_leg_data: Removed. See NCDC Legacy seaice: Replaced sea_ice() lcd_cleanup: longer available. See lcd docs ghcnd_clear_cache: longer available. See rnoaa_caching storm_shp: Function defunct. storm_shp_read: Function defunct. storm_data: Function defunct. storm_meta: Function defunct.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/rnoaa-defunct.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Defunct functions in rnoaa — rnoaa-defunct","text":"functions working GEFS ensemble forecast data (prefixed \"gefs\") defunct, may come back rnoaa later: gefs() gefs_dimension_values() gefs_dimensions() gefs_ensembles() gefs_latitudes() gefs_longitudes() gefs_times() gefs_variables()","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/rnoaa-defunct.html","id":"ncdc-legacy","dir":"Reference","previous_headings":"","what":"NCDC Legacy","title":"Defunct functions in rnoaa — rnoaa-defunct","text":"NCDC legacy API unreliable slow. Use newer NCDC API via functions ncdc(), ncdc_datacats(), ncdc_datasets(), ncdc_datatypes(), ncdc_locs(), ncdc_locs_cats(), ncdc_stations(), ncdc_plot(), ncdc_combine()","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/rnoaa-package.html","id":null,"dir":"Reference","previous_headings":"","what":"rnoaa — rnoaa-package","title":"rnoaa — rnoaa-package","text":"rnoaa R interface NOAA climate data.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/rnoaa-package.html","id":"data-sources","dir":"Reference","previous_headings":"","what":"Data Sources","title":"rnoaa — rnoaa-package","text":"Many functions package interact National Climatic Data Center application programming interface (API) https://www.ncdc.noaa.gov/cdo-web/webservices/v2, functions start ncdc_. access token, API key, required use ncdc_ functions. key required NOAA, us. Go link given get API key. NOAA data sources added time. Data sources function prefixes : buoy_* - NOAA Buoy data National Buoy Data Center ghcnd_*/meteo_* - GHCND daily data NOAA isd_* - ISD/ISH data NOAA homr_* - Historical Observing Metadata Repository (HOMR) vignette ncdc_* - NOAA National Climatic Data Center (NCDC) vignette (examples) sea_ice - Sea ice vignette storm_ - Storms (IBTrACS) vignette swdi - Severe Weather Data Inventory (SWDI) vignette tornadoes - NOAA Storm Prediction Center coops_search - NOAA CO-OPS - tides currents data cpc_prcp - rainfall data NOAA Climate Prediction Center (CPC) arc2 - rainfall data Africa Rainfall Climatology version 2 bsw - Blended sea winds (BSW) ersst - NOAA Extended Reconstructed Sea Surface Temperature (ERSST) data lcd - Local Climitalogical Data NOAA","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/rnoaa-package.html","id":"where-data-comes-from-and-government-shutdowns","dir":"Reference","previous_headings":"","what":"Where data comes from and government shutdowns","title":"rnoaa — rnoaa-package","text":"Government shutdowns can greatly affect data sources package. following breakdown functions fetch data HTTP vs. FTP - done way noticed ealry 2019 border wall shutdown FTP services , HTTP; though HTTP services . HTTP info: https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol FTP info: https://en.wikipedia.org/wiki/File_Transfer_Protocol HTTP services (whether service /early 2019 shutdown) buoy_* - homr_* - ncdc_* - swdi - tornadoes - coops_search - ersst - lcd - se_* - FTP services (whether service /early 2019 shutdown) ghcnd_* - isd_* - sea_ice - storm_ - cpc_prcp - arc2 - bsw - tried whenever possible detect whether service error due government shutdown give message saying . know service rnoaa interacts fail well shutdown let us know.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/rnoaa-package.html","id":"a-note-about-ncdf-data","dir":"Reference","previous_headings":"","what":"A note about NCDF data","title":"rnoaa — rnoaa-package","text":"functions use netcdf files, including: ersst buoy bsw need ncdf4 package functions, . ncdf4 Suggests package, meaning need ncdf4 using functions listed . get informative error telling install ncdf4 try use functions. Installation ncdf4 straightforward system.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/rnoaa-package.html","id":"the-meteo-family-of-functions","dir":"Reference","previous_headings":"","what":"The meteo family of functions","title":"rnoaa — rnoaa-package","text":"meteo family functions prefixed meteo_ provide set helper functions : Identify candidate stations latitude/longitude pair Retrieve complete data one stations (meteo_coverage())","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/rnoaa_caching.html","id":null,"dir":"Reference","previous_headings":"","what":"rnoaa caching — rnoaa_caching","title":"rnoaa caching — rnoaa_caching","text":"Manage data caches","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/rnoaa_caching.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rnoaa caching — rnoaa_caching","text":"get cache directory data source, see method x$cache_path_get() cache_delete accepts 1 file name, cache_delete_all accept names, deletes files. deleting many specific files, use cache_delete lapply() type call Note cached files continue used deleted. possible run problems changes happen R setup. example, least one user reported changing versions package running problems cached data file previous version rnoaa work newer version rnoaa. occasionally delete cached files.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/rnoaa_caching.html","id":"useful-user-functions","dir":"Reference","previous_headings":"","what":"Useful user functions","title":"rnoaa caching — rnoaa_caching","text":"Assuming x HoardClient class object, e.g., lcd_cache x$cache_path_get() get cache path x$cache_path_set() set cache path x$list() returns character vector full path file names x$files() returns file objects metadata x$details() returns files details x$delete() delete specific files x$delete_all() delete files, returns nothing","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/rnoaa_caching.html","id":"caching-objects-for-each-data-source","dir":"Reference","previous_headings":"","what":"Caching objects for each data source","title":"rnoaa caching — rnoaa_caching","text":"isd()/isd_stations(): isd_cache cpc_prcp(): cpc_cache arc2(): arc2_cache lcd(): lcd_cache bsw(): bsw_cache ersst(): ersst_cache tornadoes(): torn_cache ghcnd()/ghcnd_search(): ghcnd_cache se_data()/se_files(): stormevents_cache","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/reference/rnoaa_options.html","id":null,"dir":"Reference","previous_headings":"","what":"rnoaa options — rnoaa_options","title":"rnoaa options — rnoaa_options","text":"rnoaa options","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/rnoaa_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rnoaa options — rnoaa_options","text":"","code":"rnoaa_options(cache_messages = TRUE)"},{"path":"https://docs.ropensci.org/rnoaa/reference/rnoaa_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rnoaa options — rnoaa_options","text":"cache_messages (logical) whether emit messages information caching status function calls can cache data. default: TRUE","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/rnoaa_options.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rnoaa options — rnoaa_options","text":"rnoaa package level options; stored internal package environment roenv","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/reference/rnoaa_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"rnoaa options — rnoaa_options","text":"","code":"if (FALSE) { rnoaa_options(cache_messages = FALSE) }"},{"path":"https://docs.ropensci.org/rnoaa/reference/sea_ice.html","id":null,"dir":"Reference","previous_headings":"","what":"Get sea ice data. — sea_ice","title":"Get sea ice data. — sea_ice","text":"Get sea ice data.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/sea_ice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get sea ice data. — sea_ice","text":"","code":"sea_ice(year = NULL, month = NULL, pole = NULL, format = \"shp\", ...)"},{"path":"https://docs.ropensci.org/rnoaa/reference/sea_ice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get sea ice data. — sea_ice","text":"year (numeric) year month (character) month, character abbrevation month pole (character) one S (south) N (north) format (character) one shp (default), geotiff-extent (geotiff extent data), geotiff-conc (geotiff concentration data) ... arguments passed rgdal::readshpfile() format=\"shp\" raster::raster() ","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/sea_ice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get sea ice data. — sea_ice","text":"data.frame format=\"shp\" (fortified sp object); raster::raster() ","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/sea_ice.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get sea ice data. — sea_ice","text":"See \"User Guide\" pdf https://nsidc.org/data/g02135","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/reference/sea_ice.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get sea ice data. — sea_ice","text":"","code":"if (FALSE) { if (requireNamespace(\"raster\")) {  ## one year, one moth, one pole sea_ice(year = 1990, month = \"Apr\", pole = \"N\") sea_ice(year = 1990, month = \"Apr\", pole = \"N\", format = \"geotiff-extent\") sea_ice(year = 1990, month = \"Apr\", pole = \"N\", format = \"geotiff-conc\")  ## one year, one month, many poles sea_ice(year = 1990, month = \"Apr\")  ## one year, many months, many poles sea_ice(year = 1990, month = c(\"Apr\", \"Jun\", \"Oct\"))  ## many years, one month, one pole sea_ice(year = 1990:1992, month = \"Sep\", pole = \"N\")  # get geotiff instead of shp data. x <- sea_ice(year = 1990, month = \"Apr\", format = \"geotiff-extent\") y <- sea_ice(year = 1990, month = \"Apr\", format = \"geotiff-conc\") }  }"},{"path":"https://docs.ropensci.org/rnoaa/reference/sea_ice_tabular.html","id":null,"dir":"Reference","previous_headings":"","what":"Sea ice tabular data — sea_ice_tabular","title":"Sea ice tabular data — sea_ice_tabular","text":"Collects .csv files NOAA, binds together single data.frame. Data across years, extent area ice.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/sea_ice_tabular.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sea ice tabular data — sea_ice_tabular","text":"","code":"sea_ice_tabular(...)"},{"path":"https://docs.ropensci.org/rnoaa/reference/sea_ice_tabular.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sea ice tabular data — sea_ice_tabular","text":"... Curl options passed crul::verb-GET - beware curl options passed http request, 24 requests.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/sea_ice_tabular.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sea ice tabular data — sea_ice_tabular","text":"data.frame columns: year (integer) mo (integer) data.type (character) region (character) extent (numeric) area (numeric)","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/sea_ice_tabular.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sea ice tabular data — sea_ice_tabular","text":"example file, January, North pole: https://sidads.colorado.edu/DATASETS/NOAA/G02135/north/monthly/data/N_01_extent_v3.0.csv value cell -9999 indicates missing data","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/reference/sea_ice_tabular.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sea ice tabular data — sea_ice_tabular","text":"","code":"if (FALSE) { df <- sea_ice_tabular() df }"},{"path":"https://docs.ropensci.org/rnoaa/reference/seaiceeurls.html","id":null,"dir":"Reference","previous_headings":"","what":"Make all urls for sea ice data — seaiceeurls","title":"Make all urls for sea ice data — seaiceeurls","text":"Make urls sea ice data","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/seaiceeurls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make all urls for sea ice data — seaiceeurls","text":"","code":"seaiceeurls(yr = NULL, mo = NULL, pole = NULL, format = \"shp\")"},{"path":"https://docs.ropensci.org/rnoaa/reference/seaiceeurls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make all urls for sea ice data — seaiceeurls","text":"yr (numeric) year mo (character) month, character abbrevation month pole (character) one S (south) N (north)","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/seaiceeurls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make all urls for sea ice data — seaiceeurls","text":"vector urls (character)","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/seaiceeurls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make all urls for sea ice data — seaiceeurls","text":"","code":"if (FALSE) { # Get all urls seaiceeurls()  # for some range of years seaiceeurls(yr = 1980:1983) seaiceeurls(yr = 1980, mo = c(\"Jan\", \"Feb\", \"Mar\")) seaiceeurls(yr = 1980:1983, mo = c(\"Jan\", \"Apr\", \"Oct\"))  # Get urls for Feb of all years, both S and N poles seaiceeurls(mo='Feb')  # Get urls for Feb of all years, just S pole seaiceeurls(mo='Feb', pole='S')  # Get urls for Feb of 1980, just S pole seaiceeurls(yr=1980, mo='Feb', pole='S')  # GeoTIFF seaiceeurls(yr=1980, mo='Feb', pole='S', format = \"geotiff\") }"},{"path":"https://docs.ropensci.org/rnoaa/reference/storm_data-defunct.html","id":null,"dir":"Reference","previous_headings":"","what":"Get NOAA wind storm tabular data, metadata, or shp files from IBTrACS — storm_data","title":"Get NOAA wind storm tabular data, metadata, or shp files from IBTrACS — storm_data","text":"Get NOAA wind storm tabular data, metadata, shp files IBTrACS storm_meta","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/storm_data-defunct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get NOAA wind storm tabular data, metadata, or shp files from IBTrACS — storm_data","text":"","code":"storm_data(...)  storm_meta(...)"},{"path":"https://docs.ropensci.org/rnoaa/reference/storm_events.html","id":null,"dir":"Reference","previous_headings":"","what":"NOAA Storm Events data — storm_events","title":"NOAA Storm Events data — storm_events","text":"NOAA Storm Events data","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/storm_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NOAA Storm Events data — storm_events","text":"","code":"se_data(year, type, overwrite = TRUE, ...)  se_files(...)"},{"path":"https://docs.ropensci.org/rnoaa/reference/storm_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NOAA Storm Events data — storm_events","text":"year (numeric) four digit year. see output se_files() available years. required. type (character) one details, fatalities, locations, legacy. required. overwrite (logical) overwrite path store files , Default: TRUE ... Curl options passed crul::verb-GET (optional)","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/storm_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NOAA Storm Events data — storm_events","text":"tibble (data.frame)","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/storm_events.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"NOAA Storm Events data — storm_events","text":"See stormevents_cache managing cached files","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/storm_events.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"NOAA Storm Events data — storm_events","text":"https://www.ncdc.noaa.gov/stormevents/","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/storm_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NOAA Storm Events data — storm_events","text":"","code":"if (FALSE) { # get list of files and their urls res <- se_files() res tail(res)  # get data x <- se_data(year = 2013, type = \"details\") x  z <- se_data(year = 1988, type = \"fatalities\") z  w <- se_data(year = 2003, type = \"locations\") w  leg <- se_data(year = 2003, type = \"legacy\") leg }"},{"path":"https://docs.ropensci.org/rnoaa/reference/storm_shp-defunct.html","id":null,"dir":"Reference","previous_headings":"","what":"storm shp files — storm_shp","title":"storm shp files — storm_shp","text":"storm shp files read storm shp files","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/storm_shp-defunct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"storm shp files — storm_shp","text":"","code":"storm_shp(...)  storm_shp_read(...)"},{"path":"https://docs.ropensci.org/rnoaa/reference/swdi.html","id":null,"dir":"Reference","previous_headings":"","what":"Get NOAA data for the Severe Weather Data Inventory (SWDI) — swdi","title":"Get NOAA data for the Severe Weather Data Inventory (SWDI) — swdi","text":"Get NOAA data Severe Weather Data Inventory (SWDI)","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/swdi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get NOAA data for the Severe Weather Data Inventory (SWDI) — swdi","text":"","code":"swdi(   dataset = NULL,   format = \"xml\",   startdate = NULL,   enddate = NULL,   limit = 25,   offset = NULL,   radius = NULL,   center = NULL,   bbox = NULL,   tile = NULL,   stat = NULL,   id = NULL,   filepath = NULL,   ... )"},{"path":"https://docs.ropensci.org/rnoaa/reference/swdi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get NOAA data for the Severe Weather Data Inventory (SWDI) — swdi","text":"dataset Dataset query. See details. format File format download. One xml, csv, shp, kmz. startdate Start date. See details. enddate End date. See details. limit Number results return. Defaults 25. number 1 10000000. Time issues likely occur higher limits. offset number 1 10000000. Default NULL, offset, start 1. radius Search radius miles (current limit 15 miles). BEWARE: far know, parameter anything, least fact limit search given radius. USE. center Center coordinate lon,lat decimal degree format, e.g.: c(-95.45,36.88) bbox Bounding box format minLon,minLat,maxLon,maxLat, e.g.: c(-91,30,-90,31) tile Coordinate lon,lat decimal degree format, e.g.: c(-95.45,36.88). lat/lon values rounded nearest tenth degree. example, matching tile contain values -95.4500 -95.5499 36.8500 36.9499 stat One count tilesum:$longitude,$latitude. Setting stat='count' returns number results (actual data). stat='tilesum:$longitude,$latitude' returns daily feature counts tenth degree grid centered nearest tenth degree supplied values. id identifier, e.g., 533623. sure find ids? filepath kmz shp chosen file name optionally path write . Ignored format=xml format=csv (optional) ... Curl options passed crul::verb-GET (optional)","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/swdi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get NOAA data for the Severe Weather Data Inventory (SWDI) — swdi","text":"xml csv chosen, list length three, slot metadata (meta), slot data (data), slot shape file data single column 'shape'. meta slot list metadata elements, data slot data.frame, possibly length zero data found. kmz shp chosen, file downloaded machine message printed.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/swdi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get NOAA data for the Severe Weather Data Inventory (SWDI) — swdi","text":"Options dataset parameter. One (data formats): nx3tvs NEXRAD Level-3 Tornado Vortex Signatures (point) nx3meso NEXRAD Level-3 Mesocyclone Signatures (point) nx3hail NEXRAD Level-3 Hail Signatures (point) nx3structure NEXRAD Level-3 Storm Cell Structure Information (point) plsr Preliminary Local Storm Reports (point) warn Severe Thunderstorm, Tornado, Flash Flood Special Marine warnings (polygon) nldn Lightning strikes Vaisala. Available government military users . one , get 400 status stop message request data dataset (point) startdate enddate, date range syntax 'startDate:endDate' special option 'periodOfRecord'. Note startDate inclusive endDate exclusive. dates times GMT. current limit date range size one year. latitude longitude values input parameters output data WGS84 datum.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/swdi.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get NOAA data for the Severe Weather Data Inventory (SWDI) — swdi","text":"https://www.ncdc.noaa.gov/ncei-severe-weather-data-inventory https://www.ncdc.noaa.gov/swdiws/","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/swdi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get NOAA data for the Severe Weather Data Inventory (SWDI) — swdi","text":"","code":"if (FALSE) { # Search for nx3tvs data from 5 May 2006 to 6 May 2006 swdi(dataset='nx3tvs', startdate='20060505', enddate='20060506')  # Get all 'nx3tvs' near latitude = 32.7 and longitude = -102.0 swdi(dataset='nx3tvs', startdate='20060506', enddate='20060507', center=c(-102.0,32.7))  # use an id swdi(dataset='warn', startdate='20060506', enddate='20060507', id=533623)  # Get all 'plsr' within the bounding box (-91,30,-90,31) swdi(dataset='plsr', startdate='20060505', enddate='20060510', bbox=c(-91,30,-90,31))  # Get all 'nx3tvs' within the tile -102.1/32.6 (-102.15,32.55,-102.25,32.65) swdi(dataset='nx3tvs', startdate='20060506', enddate='20060507', tile=c(-102.12,32.62))  # Counts ## Note: stat='count' will only return metadata, nothing in the data or shape slots ## Note: stat='tilesum:...' returns counts in the data slot for each date for that tile, ##   and shape data ## Get number of 'nx3tvs' near latitude = 32.7 and longitude = -102.0 swdi(dataset='nx3tvs', startdate='20060505', enddate='20060516', center=c(-102.0,32.7), stat='count')  ## Get daily count nx3tvs features on .1 degree grid centered at latitude = 32.7 ## and longitude = -102.0 swdi(dataset='nx3tvs', startdate='20060505', enddate='20090516', stat='tilesum:-102.0,32.7')  # CSV format swdi(dataset='nx3tvs', startdate='20060505', enddate='20060506', format='csv')  # SHP format swdi(dataset='nx3tvs', startdate='20060505', enddate='20060506', format='shp',    filepath='myfile')  # KMZ format swdi(dataset='nx3tvs', startdate='20060505', enddate='20060506', format='kmz',    filepath='myfile.kmz')  # csv output to SpatialPointsDataFrame res <- swdi(dataset='nx3tvs', startdate='20060505', enddate='20060506', format=\"csv\") library('sp') coordinates(res$data) <- ~lon + lat res$data class(res$data) }"},{"path":"https://docs.ropensci.org/rnoaa/reference/theme_ice.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2 map theme — theme_ice","title":"ggplot2 map theme — theme_ice","text":"ggplot2 map theme","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/theme_ice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2 map theme — theme_ice","text":"","code":"theme_ice()"},{"path":"https://docs.ropensci.org/rnoaa/reference/tornadoes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get NOAA tornado data. — tornadoes","title":"Get NOAA tornado data. — tornadoes","text":"function gets spatial paths tornadoes NOAA's National Weather Service Storm Prediction Center Severe Weather GIS web page.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/tornadoes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get NOAA tornado data. — tornadoes","text":"","code":"tornadoes(...)"},{"path":"https://docs.ropensci.org/rnoaa/reference/tornadoes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get NOAA tornado data. — tornadoes","text":"... Curl options passed crul::verb-GET (optional)","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/tornadoes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get NOAA tornado data. — tornadoes","text":"Spatial object returned class SpatialLinesDataFrame.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/tornadoes.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get NOAA tornado data. — tornadoes","text":"See torn_cache managing cached files","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/tornadoes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Get NOAA tornado data. — tornadoes","text":"https://www.spc.noaa.gov/gis/svrgis/","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/tornadoes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get NOAA tornado data. — tornadoes","text":"","code":"if (FALSE) { shp <- tornadoes() library('sp') if (interactive()) {   # may take 10 sec or so to render   plot(shp) } }"},{"path":"https://docs.ropensci.org/rnoaa/reference/vis_miss.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize missingness in a dataframe — vis_miss","title":"Visualize missingness in a dataframe — vis_miss","text":"Gives --glance ggplot missingness inside dataframe, colouring cells according missingness, black indicates present cell grey indicates missing cell. returns ggplot object, easy customize change labels, .","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/vis_miss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize missingness in a dataframe — vis_miss","text":"","code":"vis_miss(x, cluster = FALSE, sort_miss = FALSE)"},{"path":"https://docs.ropensci.org/rnoaa/reference/vis_miss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize missingness in a dataframe — vis_miss","text":"x data.frame cluster logical TRUE/FALSE. TRUE specifies want use hierarchical clustering (mcquitty method) arrange rows according missingness. FALSE specifies want leave . sort_miss logical TRUE/FALSE. TRUE arranges columns order missingness.","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/vis_miss.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Visualize missingness in a dataframe — vis_miss","text":"vis_miss visualises data.frame display missingness. taken visdat package, currently available github: https://github.com/tierneyn/visdat","code":""},{"path":"https://docs.ropensci.org/rnoaa/reference/vis_miss.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize missingness in a dataframe — vis_miss","text":"","code":"if (FALSE) {   monitors <- c(\"ASN00003003\", \"ASM00094299\")   weather_df <- meteo_pull_monitors(monitors)   vis_miss(weather_df) }"},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"rnoaa-140","dir":"Changelog","previous_headings":"","what":"rnoaa 1.4.0","title":"rnoaa 1.4.0","text":"CRAN release: 2023-04-27 API changed base URL endpoints current package work pull new data Started process archiving package Fixed roxygen documentation autoplot function s3method NAMESPACE autoplot.meteo_coverage changed autoplot_meteo_coverage avoid S3 generic naming convention Removed argo bouy data functions since API gone","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"bug-fixes-1-3-9","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"rnoaa 1.3.9","text":"changed default location cache file writing hoardr match requirements CRAN Mac OS added cache cleanup tests updated homr API base url https://www.ncei.noaa.gov/access/homr/services/station/","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"rnoaa-138","dir":"Changelog","previous_headings":"","what":"rnoaa 1.3.8","title":"rnoaa 1.3.8","text":"CRAN release: 2021-12-01 changed location temporary cache file writing ersst tests match requirements CRAN Mac OS. Missed v1.3.7 release. removed rappsdir Imports now using tools create cache directories removed couple internal tests CRAN skip_on_cran() rnoaa 1.3.7","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"bug-fixes-1-3-8","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"rnoaa 1.3.8","text":"changed location temporary file writing match requirements CRAN Mac OS removed checks Ubuntu 16.04. Replaced checks latest Ubuntu version","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"rnoaa-134","dir":"Changelog","previous_headings":"","what":"rnoaa 1.3.4","title":"rnoaa 1.3.4","text":"CRAN release: 2021-05-19","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"minor-improvements-1-3-4","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rnoaa 1.3.4","text":"update URL tornadoes data include data 2019 (#386) thanks @ryanscharf","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"bug-fixes-1-3-4","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"rnoaa 1.3.4","text":"fix ncdc* functions - response header content type changed - check proper content type - check now general json content type okay (#390)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"rnoaa-132","dir":"Changelog","previous_headings":"","what":"rnoaa 1.3.2","title":"rnoaa 1.3.2","text":"CRAN release: 2021-02-15","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"minor-improvements-1-3-2","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rnoaa 1.3.2","text":"remove ropenaq Suggests archived CRAN (#385) test fixes (#382)","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"new-features-1-3","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rnoaa 1.3","text":"ghcnd() now accepts 1 station identifier (#373) PR @eliocamp ersst(): use new v5 version service - see ?ersst docs details (#381) thanks @vonStadarhraun tip","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"minor-improvements-1-3","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rnoaa 1.3","text":"update buoy() docs state special value 9999 passsed year parameter give date data (aka current data) - example added using (#377) update current dplyr functions deprecated ones (#375) update description units TMAX TMIN dataset GHCND using function ncdc() add_units = TRUE (#378) (#379) PR @amcdavid","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"bug-fixes-1-3","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"rnoaa 1.3","text":"changed ghcnd() handling unknown/bad/invalid station identifiers: now returns empty data.frame gives back empty strings two attributes source file_modified (#374)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"rnoaa-120","dir":"Changelog","previous_headings":"","what":"rnoaa 1.2.0","title":"rnoaa 1.2.0","text":"CRAN release: 2020-10-06","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"defunct-1-2-0","dir":"Changelog","previous_headings":"","what":"DEFUNCT","title":"rnoaa 1.2.0","text":"following IBTrACS storm functions now defunct cumbersome maintain: storm_data(), storm_meta(), storm_shp(), storm_shp_read(). associated package datasets storm_columns storm_names removed (#306)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"minor-improvements-1-2-0","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rnoaa 1.2.0","text":"vignettes now pre-built, URLs now unlinked (#367) lcd() returns tibble now instead tibble S3 class lcd attached (#369) created manual file entry stormevents_cache drop sf Suggests, used example","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"bug-fixes-1-2-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"rnoaa 1.2.0","text":"arc2() fix: using bbox parameter, worked intended, fixed now (#372)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"rnoaa-110","dir":"Changelog","previous_headings":"","what":"rnoaa 1.1.0","title":"rnoaa 1.1.0","text":"CRAN release: 2020-07-08","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"minor-improvements-1-1-0","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rnoaa 1.1.0","text":"fix coops test (#364) remove deprecated parameters argo ncdc* functions (#361)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"rnoaa-100","dir":"Changelog","previous_headings":"","what":"rnoaa 1.0.0","title":"rnoaa 1.0.0","text":"CRAN release: 2020-06-13","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"new-features-1-0-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rnoaa 1.0.0","text":"argo functions working API working , see ?argo (#358) defunct functions removed package, still referenced ?rnoaa-defunct manual file. gefs functions still package functions may come back point. (#359) two things arc2(): 1) now accepts 1 date; 2) gains new parameter box accept bounding box spatially filter results (uses dplyr::filter data.frame spatial data) (#351)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"documentation-1-0-0","dir":"Changelog","previous_headings":"","what":"Documentation","title":"rnoaa 1.0.0","text":"Regarding documentation site https://docs.ropensci.org/rnoaa function reference page https://docs.ropensci.org/rnoaa/reference/index.html improved; grouping functions topic area data source - easier browsing (#360) getting started vignette added, see “Get Started” tab (#357)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"minor-improvements-1-0-0","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rnoaa 1.0.0","text":"ghncd() (functions build ghcnd()) can now altered use specific base URL requests. See “Base URL” section ?ghcnd docs (#353) ghcnd_splitvars() speedup, using data.table instead dplyr manipulation (#352) (#355) use tibble::as_tibble throughout package instead dplyr::tbl_df (#354)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"bug-fixes-1-0-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"rnoaa 1.0.0","text":"fix ghcnd_stations(): internal method get_inventory() creating directory first trying download file directory (#349) (#350)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"rnoaa-096","dir":"Changelog","previous_headings":"","what":"rnoaa 0.9.6","title":"rnoaa 0.9.6","text":"CRAN release: 2020-04-07","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"new-features-0-9-6","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rnoaa 0.9.6","text":"new function rnoaa_options() toggle package level options; option now cache_messages, boolean toggle whether user gets messages cached files . along change, messages cached files file sizes locations now consistently used across functions cache files disk (#331) new manual file ?rnoaa_caching - information access manage cached files rnoaa functions caches files disk (#346) isd() moved using hoardr caching - see ?isd_cache details (#347)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"minor-improvements-0-9-6","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rnoaa 0.9.6","text":"remove internal code many exported functions looking user input path parameter telling ’s longer used; defunct quite now able cache http requests tests write disk (#290) (#345) ghcnd_stations() now caching data - first time requests now take just 1 minute, subsequent requests (assuming cached data isn’t deleted) taking ~ 3 seconds (#164) autoplot method meteo_coverage() fix visually display gaps data (#314) (#333) thanks @philipshirk","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"bug-fixes-0-9-6","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"rnoaa 0.9.6","text":"fix ncdc functions fail better - NOAA returning HTML request failures instead JSON - catch better give proper http status code response (#338) meteo_nearby_stations() fix: coerce input data.frame function data.frame remainder steps - case user inputs tibble (#340) coops_search() fix: product=predictions, get metadata back - just dont adjust times (#342) lcd() changes: gains lcd_cache managing cached files; use new internal function safely reading csv file, informative error messages; (#344) meteo_pull_monitors() fix: changed internals meteo_tidy_ghcnd() set -9999 values NA slightly differently avoi failing (#348)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"rnoaa-095","dir":"Changelog","previous_headings":"","what":"rnoaa 0.9.5","title":"rnoaa 0.9.5","text":"CRAN release: 2019-11-20","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"bug-fixes-0-9-5","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"rnoaa 0.9.5","text":"lcd() function unfortunately pulling data https://www.ncei.noaa.gov/data/global-hourly/access - whereas pulling data https://www.ncei.noaa.gov/data/local-climatological-data/access - fixed now; additionaly, lcd_cleanup defunct lcd data coming appropriate link variable names spelled data split (#334) thanks @sayon000 ! gefs* functions now defunct - taken now fixed - see issues details (#335) (#336)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"rnoaa-094","dir":"Changelog","previous_headings":"","what":"rnoaa 0.9.4","title":"rnoaa 0.9.4","text":"CRAN release: 2019-11-07","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"new-features-0-9-4","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rnoaa 0.9.4","text":"new gefs function helpers gefs_dimensions gefs_ensembles (#327) (#328)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"minor-improvements-0-9-4","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rnoaa 0.9.4","text":"gefs function fixes: fixed failing test CRAN date mismatch; gefs now cleans temporary files (#327) (#328)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"bug-fixes-0-9-4","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"rnoaa 0.9.4","text":"argo buoy functions use API use FTP server. API , longer exists. funitons use API (argo_search, argo_files, argo_qwmo, argo_plan) longer work, functions use FTP server still work (argo_buoy_files, argo) (#333)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"rnoaa-092","dir":"Changelog","previous_headings":"","what":"rnoaa 0.9.2","title":"rnoaa 0.9.2","text":"CRAN release: 2019-10-23","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"minor-improvements-0-9-2","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rnoaa 0.9.2","text":"gefs gains new parameters ens time, eventually replace deprecated parameters ens_idx time_idx (#321) (#324) isd() now using fetching data using http instead ftp","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"bug-fixes-0-9-2","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"rnoaa 0.9.2","text":"fix tornadoes(): URL changed yet (#322) (#323) thanks @mbjoseph ! fix gefs, failing examples (#320) (#321)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"rnoaa-090","dir":"Changelog","previous_headings":"","what":"rnoaa 0.9.0","title":"rnoaa 0.9.0","text":"CRAN release: 2019-09-26","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"new-features-0-9-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rnoaa 0.9.0","text":"gains sea_ice_tabular() function fetching tabular .csv sea ice files instead using shp files sea_ice() (#194) seaice() fxn name changed sea_ice() (#313) sea_ice() gains option fetch GeoTIFF format data addition shp files (#219) (#313) gains new function lcd_cleanup() - takes output call lcd(), parsing additional columns contain comma separated strings (#283)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"minor-improvements-0-9-0","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rnoaa 0.9.0","text":"update README link ncdf4 pkg instead ncdf pkg, note functions rnoaa use ncdf4 (b/c ncdf4 Suggests) (#299) thanks @denrou now using markdown docs (#301) update isd() docs highlight cached files downloaded fxn used deleted user! See ?isd docs details (#205) lat/lon param definition gefs mentioned longitude, now vars discussed (#317) (#318) improve docs ncdc() regarding units, readme vignette well (#265) (#315) @amoeba","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"bug-fixes-0-9-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"rnoaa 0.9.0","text":"fix bug cpc_prcp(): allowed dates back 1948, allowed back 1979 (#300) fix buoy() fxn: datasets lat/lon variables failing parsed fxn; now lat/lon vars missing, just give. back ncdf4 object user deal (#303) (#304) fix gefs(): longitude (-180, 180) scale worked (0,360) scale (#316) (#318) (#319) fix tornadoes(): URL data changed (#311) (#312) thanks @mbjoseph ncdc() parameters startdate/enddate weren’t handling dates input values; now handle date character inputs (#307) fixed issue ghcnd_stations(); encoding issue data returned NOAA (#305)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"rnoaa-084","dir":"Changelog","previous_headings":"","what":"rnoaa 0.8.4","title":"rnoaa 0.8.4","text":"CRAN release: 2019-01-14","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"us-federal-government-shutdown-0-8-4","dir":"Changelog","previous_headings":"","what":"US federal government shutdown","title":"rnoaa 0.8.4","text":"long US federal government shutdown allowed time building nicer failure behavior documentation government shutdowns. ’s number related changes: better government shutdown failure behavior swdi() function (#298) better government shutdown failure behavior lcd() function (#295) better failure behavior ncdc*() functions (#293) (#297) added package level manual file section “data comes government shutdowns”","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"minor-improvements-0-8-4","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rnoaa 0.8.4","text":"swdi(): changed downloading data download.file crul (#298) fix arc2() tests hard-coded dates (#294)","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"bug-fixes-0-8-2","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"rnoaa 0.8.2","text":"improvements failing well ’s US government shutdown many functions work web REST APIs (#293) (#295) fix arc2 tests sensitive real year test run , reported CRAN checks via email (#294)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"rnoaa-080","dir":"Changelog","previous_headings":"","what":"rnoaa 0.8.0","title":"rnoaa 0.8.0","text":"CRAN release: 2018-12-03","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"new-features-0-8-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rnoaa 0.8.0","text":"gains function bsw() Blended Sea Winds data (#246) gains function ghcnd_read() - read .dly files directly, e.g., files already downloaded (#223) thanks @shabbychef feature request gains function lcd() Local Climatological Data (#212) gains functions se_data() se_files() Storm Events Database (#282) ghcnd() ghcnd_search() gain refresh parameter refresh data query even ’s already cached locally. addition, functions now print messages tell user file path data locally cached , min max dates using ghcnd_search() (#269) thanks @kgmccann ncdc() gains add_units parameter (boolean) toggle adding units output data.frame. default add_units=FALSE. add_units=TRUE match dataset id data type id return units . touch see problem units! ncdc() now returns tibbles data slot (#233) (#266) (#289) (#287)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"minor-improvements-0-8-0","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rnoaa 0.8.0","text":"spelling fixes coops docs (#228) thanks @jsta fix ghcnd_search() arrange data day instead month (#247) thanks @asrivas3 reporting move swdi() use xml2 crul packages instead XML httr (#275) added swdi() tests (#239) thanks @kevin-ht-ho isd_stations_search() longer renames lat lon column names (#238) thanks @kevin-ht-ho add codemeta keywords description (#287) replace httr crul throughout package (#186) many tests use vcr now caching, waiting vcr able handle direct disk use cases binary files like pdfs (#284) fix links Code Conduct","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"bug-fixes-0-8-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"rnoaa 0.8.0","text":"fixes gefs(). incorrectly repeating time values within ensembles repeated time values across ensembles ensemble time value time period (#230) (#231) thanks report @lcsma fix @potterzot fix bug ncdc() - fix internal function parse_ncdc(), failing strsplit() call attributes NULL (#232) thanks reporting @andypicke fix cpc_prcp(): URLs changed point, fixes (#242) fix cpc_prcp(): read .gz files correctly gzfile instead file (#248) fix homr() - NOAA server gives back 200 OK response even ’s case - can check content type see likely error (#250) fix autoplot.meteo_coverage (#258) fix buoy_stations(): getting wrong station ids - fixed; use async HTTP requests get data faster (#261) thanks @johnharley bug report fix ghcnd_stations(): returning extra empty row (#267) thanks @joeroe bug report related (#267), ghcnd() giving trailing row NA’s - fixed (#270) swdi(): radius parameter doesn’t work, update docs tell users use (#243) ncdc() fix: fix internal function parse_ncdc(), errored 1 flag returned (#279) thanks @ghaines3 bug report buoy fixes (#251) storm_shp() fix: update use new URL patterns (#263) make swdi() fail better (#274) thanks @OrionDarley fix meteo_nearby_stations() coerce character numeric lat lon values (#257) thanks @mondorescue bug report fix meteo_nearby_stations() - internally ignored user supplied column names lat lon (#286) thanks @ghaines3 bug report fixed tornadoes() Windows OS’s: utils::untar() failing windows, changed using utils::unzip() (#203) fixed argo_buoy_files(): use fill=TRUE read.table call - erroring Windows OS’s (#235) thanks @jonmcalder reporting","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"rnoaa-070","dir":"Changelog","previous_headings":"","what":"rnoaa 0.7.0","title":"rnoaa 0.7.0","text":"CRAN release: 2017-05-06 Note NOAA datasets changed names: GHCNDMS now GSOM (Global Summary Month) ANNUAL now GSOY (Global Summary Year)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"new-features-0-7-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rnoaa 0.7.0","text":"isd() gains new parameters additional toggle whether non-mandatory ISD fields (additional + remarks) parsed returned & force toggle whether download new version use cached version. isd_read() gains new parameter additional (see description ) (#190) New function Climate Prediction Center data: cpc_prcp() (#193) New function arc2() get data Africa Rainfall Climatology version 2 (#201)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"minor-improvements-0-7-0","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rnoaa 0.7.0","text":"number NOAA services now use https - changed internal code use https http coops, swdi, ersst, tornadoes data sources (#187) Changes sea ice URLs - just internal (#185) Fixes coops_search() handle requests better: certain date combinations allowed certain COOPS products (#213) (#214) thanks @tphilippi ! Now using hoardr package manage caching functions. roll functions cache soon (#191) README img location fix requested CRAN (#207) GHCNDMS now GSOM ANNUAL now GSOY - added docs examples using GSOM GSOY (#189)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"bug-fixes-0-7-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"rnoaa 0.7.0","text":"number fixes isd() (#168) Fixes coops_search() fix time zone problems (#184) thanks @drf5n Fixes ghcnd() - fix column types inappropriate type (#211) Fix ghcnd(): coercing factors integers, caused nonsense output - first coercing character now, integer (#221) problems parsing flags (attributes) datasets via ncdc() function. Added metadata package help parse flags (#199)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"rnoaa-066","dir":"Changelog","previous_headings":"","what":"rnoaa 0.6.6","title":"rnoaa 0.6.6","text":"CRAN release: 2016-11-17","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"new-features-0-6-6","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rnoaa 0.6.6","text":"isd() now using new package isdparser parse NOAA ISD files. still fetch file within rnoaa, file parsing done isdparser (#176) (#177) (#180) thanks @mrubayet push","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"minor-improvements-0-6-6","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rnoaa 0.6.6","text":"Fixed precipitation units docs meteo_* functions (#178) thanks @mrubayet","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"bug-fixes-0-6-6","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"rnoaa 0.6.6","text":"Fixed bug ghcnd() internal unexported function found (#179) Fix isd_stations() isd_stations_search() work correctly Windows (#181) thanks @GuodongZhu Changed base URL NOAA NCDC functions (starting ncdc) https http (#182) thanks @maspotts Changed base URL NOAA HOMR functions (starting homr) https http (#183)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"rnoaa-065","dir":"Changelog","previous_headings":"","what":"rnoaa 0.6.5","title":"rnoaa 0.6.5","text":"CRAN release: 2016-10-22","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"minor-improvements-0-6-5","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rnoaa 0.6.5","text":"Added notes docs functions file caching - find cached files. meteo_clear_cache gains parameter force control force parameter unlink() Removed lubridate usage seaiceurls() function, just using base R functions.","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"bug-fixes-0-6-5","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"rnoaa 0.6.5","text":"Fixed bug affecting binary installs . accidentally determined path package build, user CRAN binary build machine got inserted path. now fixed. (#173)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"rnoaa-064","dir":"Changelog","previous_headings":"","what":"rnoaa 0.6.4","title":"rnoaa 0.6.4","text":"CRAN release: 2016-10-07","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"new-features-0-6-4","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rnoaa 0.6.4","text":"New function isd_read() read ISD output isd() manually instead letting isd() read data. useful use isd() need read file later ’s already cached. (#169) functions rnoaa cache files downloaded various NOAA web services. File caching usually done data comes FTP servers. functions cache data, used write home directory, now changed functions write proper cache directory platform independent way. determine cache directory using rappdirs::user_cache_dir(). Note may change workflow ’d depending cached files particular place file system. addition, path parameter changed functions now defunct, get informative warning (#171)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"minor-improvements-0-6-4","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rnoaa 0.6.4","text":"storm_data() now returns tibble/data.frame inside list. used return list single slot data data.frame, unnecessary. ghcnd_stations() now outputs data.frame (tbl_df) , instead data.frame nested list. may change access data function. (#163) Improved docs token usage NCDC functions (prefix ncdc_*()) (#167) Added note isd() docs get error similar Error: download failed ftp://ftp.ncdc.noaa.gov/pub/data/noaa/1955/011490-99999-1955.gz, file exist NOAA’s ftp servers. internet , ’ll get different error saying much (#170)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"rnoaa-060","dir":"Changelog","previous_headings":"","what":"rnoaa 0.6.0","title":"rnoaa 0.6.0","text":"CRAN release: 2016-08-31","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"new-features-0-6-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rnoaa 0.6.0","text":"large PR merged suite functions. functions added prefixed meteo_*, meant find weather monitors near locations (meteo_nearby_stations), find monitors within radius location (meteo_distance), calculate distances location available stations (meteo_process_geographic_data), calculate distance two locations (meteo_spherical_distance), pull GHCND weather data multiple weather monitors (meteo_pull_monitors), create tidy GHCND dataset single monitor (meteo_tidy_ghcnd), determine “coverage” station data frame (meteo_coverage()). addition, vis_miss() added visualize missingness data.frame. See PR diff master changes. (#159) Thanks ton @geanders et al. (@hrbrmstr, @maelle, @jdunic, @njtierney, @leighseverson, @RyanGan, @mandilin, @jferreri, @cpatrizio88, @ryan-hicks, @Ewen2015, @mgutilla, @hakessler, @rodlammers)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"minor-improvements-0-6-0","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rnoaa 0.6.0","text":"isd_stations_search() changed internal structure. replaced usage geojsonio lawn faster dplyr::filter bbox inputs, meteo_distance() lat/long/radius inputs . speeds function significantly. Thanks @lukas-rokka (#157) isd_stations_search() isd_stations() now return tibble’s instead data.frame’s Removed cached ISD stations dataset within package reduce package size. change now first use function user download entire thing, subsquent uses pull cached version users machine. isd_stations_search() now caches using rappdirs (#161) Convert () uses inherits()","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"bug-fixes-0-6-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"rnoaa 0.6.0","text":"Fixed seaiceeurls() function ’s used generate urls seaice() function - due change NOAA urls (#160) Fix function ghncd_split_vars() fail dplyr::contains call (#156) thanks @lawinslow !","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"rnoaa-056","dir":"Changelog","previous_headings":"","what":"rnoaa 0.5.6","title":"rnoaa 0.5.6","text":"CRAN release: 2016-05-05","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"minor-improvements-0-5-6","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rnoaa 0.5.6","text":"Fixes new httr version call encoding explicitly (#135) Fix broken link reference source code used gefs functions (#121) Speed ups implemented isd() function - ’s time consuming task parse nasty string characters line line - speed ups come future versions (#146) Replace dplyr::rbind_all() dplyr::bind_rows() former deprecated (#152)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"bug-fixes-0-5-6","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"rnoaa 0.5.6","text":"Fix isd() function - failing station names leading zeros. (#136) Fix ncdc_stations() - used allow one station id passed , internally handled one. restriction due NOAA NCDC API. Documentation now shows example deal many station ids (#138) Fixes suite ncdc_*() functions allow multiple inputs parameters allowed (#139) Fixed bug ncdc_plot() due new ggplot2 version (#153) Fixed bugs argo() functions: ) new httr, box input vector longer works, now manually make character vector; b) errant file param passed http request, removed (#155)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"rnoaa-052","dir":"Changelog","previous_headings":"","what":"rnoaa 0.5.2","title":"rnoaa 0.5.2","text":"CRAN release: 2016-01-26","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"new-features-0-5-2","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rnoaa 0.5.2","text":"New data source added: ARGO buoy data. See functions starting argo() (#123) , see http://www.argo.ucsd.edu/ New data source added: CO-OPS tide current data. See function coops_search() (#111) idea @fmichonneau (#124) implementing @jsta also (#126) (#128)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"minor-improvements-0-5-2","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rnoaa 0.5.2","text":"rgdal moved Suggests make usage easier (#125) Changes ncdc_plot() - made default brakes just default ggplot2 , can still pass breaks (#131)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"rnoaa-050","dir":"Changelog","previous_headings":"","what":"rnoaa 0.5.0","title":"rnoaa 0.5.0","text":"CRAN release: 2015-12-02","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"new-features-0-5-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rnoaa 0.5.0","text":"New data source added: NOAA Global Ensemble Forecast System (GEFS) data. See functions gefs(), gefs_dimension_values(), gefs_dimensions(), gefs_latitudes(), gefs_longitudes(), gefs_variables() (#106) (#119) thanks @potterzot - ’s now author New data source added: NOAA Extended Reconstructed Sea Surface Temperature (ERSST) data. See function ersst() (#96) New function isd_stations() get ISD station data. Added code conduct code repository","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"minor-improvements-0-5-0","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rnoaa 0.5.0","text":"Swapped ncdf package ncdf4 package. Windows binaries weren’t availiable ncdf4 prior now. (#117) Proper license info added javascript modules used inside package (#116) Improvements isd() function transformations certain variables give back data makes sense (#115) leaflet, geojsonio, lawn added Suggests, used functions. Note added swdi() function man page nldn dataset available military users (#107)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"bug-fixes-0-5-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"rnoaa 0.5.0","text":"Fix buoy() function accept character class inputs buoyid parameter. error occurred matching case-insensitive, now works regardless case (#118) Fixes new ggplot2 version (#113) Built GET request retries ghncd functions URLs fail unpredictably (#110)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"rnoaa-042","dir":"Changelog","previous_headings":"","what":"rnoaa 0.4.2","title":"rnoaa 0.4.2","text":"CRAN release: 2015-07-08","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"minor-improvements-0-4-2","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rnoaa 0.4.2","text":"Explicitly import non-base R pkg functions, importing utils, methods, stats (#103) NCDC legacy API functions now defunct. See ?rnoaa-defunct information (#104) radius parameter removed ncdc_stations() function (#102), already removed internally within function last version, now function definition, see also (#98) (#99) Dropped plyr data.table imports. plyr::rbind.fill() data.table::rbindlist() replaced dplyr::bind_rows().","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"bug-fixes-0-4-2","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"rnoaa 0.4.2","text":"Fixed problem httr v1 empty list allowed pass query parameter GET (#101)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"rnoaa-040","dir":"Changelog","previous_headings":"","what":"rnoaa 0.4.0","title":"rnoaa 0.4.0","text":"CRAN release: 2015-06-19","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"new-features-0-4-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rnoaa 0.4.0","text":"Gains suite new functions working NOAA GHCND data, including ghcnd(), ghcnd_clear_cache(), ghcnd_countries(), ghcnd_search(), ghcnd_splitvars() ghcnd_states(), ghcnd_stations(), ghcnd_version() (#85) (#86) (#87) (#88) (#94) New contributor Adam Erickson (@DougFirErickson) NOAA buoy functions put back package. previously separate branch GitHub repository. (#37) (#71) (#100)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"minor-improvements-0-4-0","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rnoaa 0.4.0","text":"Minor adjustments isd() functions, including better man file. Cleaner package imports - importing mostly functions used dependencies. Startup message gone. callopts parameter changed ... function swdi(). robust test suite. ncdc() requires users paging - previously done internally (#77) Many dependencies dropped, simplifying package: RCurl, maptools, stringr, digest. new ones added: dplyr, tidyr.","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"deprecated-and-defunct-0-4-0","dir":"Changelog","previous_headings":"","what":"DEPRECATED AND DEFUNCT","title":"rnoaa 0.4.0","text":"erddap functions now defunct - see package rerddap, general purpose R client ERDDAP servers. (#51) (#73) (#90) (#95) extent function noaa_stations() used accept either bounding box point defined lat/long. lat/long option dropped required two packages, one pain install many users (#98) (#99)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"rnoaa-033","dir":"Changelog","previous_headings":"","what":"rnoaa 0.3.3","title":"rnoaa 0.3.3","text":"CRAN release: 2014-12-20","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"new-features-0-3-3","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rnoaa 0.3.3","text":"New data source NOAA legacy API ISD, daily, ish data via function ncdc_legacy(). (#54) New function isd() get ISD data NOAA FTP server. (#76) ERDDAP gridded data sets added. Now tabledap datasets accessible via erddap_table(), gridded datasets available via erddap_grid(). Helper function erddap_search() modified search either tabledap griddap datasets, erddap_info() gets prints summary information differently tabledap griddap datasets. (#63)","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"minor-improvements-0-3-3","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rnoaa 0.3.3","text":"erddap_data() defunct, now functions erddap_table() erddap_grid(), uses new store parameter takes function, either disk(path, overwrite) store disk memory() store R memory. assertthat library removed, replaced stopifnot()","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rnoaa 0.3.0","text":"New data source added (NOAA torndoes data) via function tornadoes(). (#56) New data source added (NOAA storm data IBTrACS) via functions storm_*(). (#57) New data source added (NOAA weather station metadata HOMR) via functions homr_*() (#59) New vignettes storm data homr data. functions rnoaa now print data.frame outputs dplyr-like outputs summary data.frame, appropriate.","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"minor-improvements-0-3-0","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rnoaa 0.3.0","text":"Across ncdc_* functions changed callopts parameter .... parameter allow pass options httr::GET modify curl requests. (#61) new helper function check_key() looks one two stored keys, environment variable name NOAA_KEY, option variable name noaakey. Environment variables can set session like Sys.setenv(VAR = \"...\"), stored long term .Renviron file. Option variables can set session like options(var = \"...\"), stored long term .Rprofile file. .* print.* functions longer public man files, can seen via rnoaa::: needed.","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"rnoaa-020","dir":"Changelog","previous_headings":"","what":"rnoaa 0.2.0","title":"rnoaa 0.2.0","text":"CRAN release: 2014-07-21","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rnoaa 0.2.0","text":"New package imports: sp, rgeos, assertthat, jsonlite, ncdf4, new package Suggests: knitr, taxize function names changed. noaa*() functions NCDC data changed ncdc*(). noaa_buoy() changed buoy(). noaa_seaice() changed seaice(). call old versions error thrown, message pointing new function name. See ?rnoaa-defunct. New vignettes: NCDC attributes, NCDC workflow, Seaice vignette, SWDI vignette, ERDDAP vignette, NOAA buoy vignette. New functions interact NOAA ERDDAP data: erddap_info(), erddap_data(), erddap_search(). New functions interact NOAA buoy data: buoy(), including number helper functions. ncdc() now splits apart attributes. Previously, attributes returned single column, now column attribute data can easily retrieved. Attribute columns differ different datasetid. buoy() function removed CRAN version rnoaa. Install version buoy() associated functions via devtools::install_github(\"ropensci/rnoaa\", ref=\"buoy\")","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"minor-improvements-0-2-0","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"rnoaa 0.2.0","text":"noaa_swdi() (function changed swdi()) gains new parameter filepath specify path write file format=kmz format=shp. Examples added using format= csv, shp, kmz. Now using internal version plyr::compact. Added API response checker/handler functions pass helpful messages server errors. ncdc() gains new parameter includemetadata. TRUE, includes metadata, , , response faster take time calculate metadata. noaa_stations() gains new parameter radius. extent vector length 4 (bounding box) radius ignored, pass two points extent, interpreted point, radius used distance upon construct bounding box. radius default 10 km.","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"rnoaa 0.2.0","text":"datasetid, startdate, enddate often required parameters, changes made help users .","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"rnoaa-010","dir":"Changelog","previous_headings":"","what":"rnoaa 0.1.0","title":"rnoaa 0.1.0","text":"CRAN release: 2014-03-03","code":""},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"new-features-0-1-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rnoaa 0.1.0","text":"Submitted CRAN.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"new-features-0-0-8","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rnoaa 0.0.8","text":"Wrote new functions NOAA API v2. working vignette now.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/rnoaa/news/index.html","id":"new-features-0-0-1","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"rnoaa 0.0.1","text":"Wrappers NOAA API v1 written, CRAN point.","code":""}]
